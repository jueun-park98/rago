<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="openapi.OpenAPIMain_test" tests="1" skipped="0" failures="1" errors="0" timestamp="2021-08-08T09:55:48" hostname="DESKTOP-5DL2OO8" time="0.326">
  <properties/>
  <testcase name="test()" classname="openapi.OpenAPIMain_test" time="0.326">
    <failure message="org.opentest4j.AssertionFailedError: JSONs for api-with-examples.json are different:&#10;[ {&#13;&#10;  &quot;op&quot; : &quot;add&quot;,&#13;&#10;  &quot;path&quot; : &quot;/paths/~1streams/post/parameters/0/schema&quot;,&#13;&#10;  &quot;value&quot; : {&#13;&#10;    &quot;example&quot; : &quot;https://tonys-server.com&quot;,&#13;&#10;    &quot;format&quot; : &quot;uri&quot;,&#13;&#10;    &quot;type&quot; : &quot;string&quot;&#13;&#10;  }&#13;&#10;}, {&#13;&#10;  &quot;op&quot; : &quot;add&quot;,&#13;&#10;  &quot;path&quot; : &quot;/paths/~1streams/post/responses/201/content/application~1json/schema&quot;,&#13;&#10;  &quot;value&quot; : {&#13;&#10;    &quot;description&quot; : &quot;subscription information&quot;,&#13;&#10;    &quot;properties&quot; : {&#13;&#10;      &quot;subscriptionId&quot; : {&#13;&#10;        &quot;description&quot; : &quot;this unique identifier allows management of the subscription&quot;,&#13;&#10;        &quot;example&quot; : &quot;2531329f-fb09-4ef7-887e-84e648214436&quot;,&#13;&#10;        &quot;type&quot; : &quot;string&quot;&#13;&#10;      }&#13;&#10;    },&#13;&#10;    &quot;required&quot; : [ &quot;subscriptionId&quot; ]&#13;&#10;  }&#13;&#10;}, {&#13;&#10;  &quot;op&quot; : &quot;add&quot;,&#13;&#10;  &quot;path&quot; : &quot;/paths/~1streams/post/callbacks/onData/{$request.query.callbackUrl}~1data/post/requestBody/content/application~1json/schema&quot;,&#13;&#10;  &quot;value&quot; : {&#13;&#10;    &quot;properties&quot; : {&#13;&#10;      &quot;timestamp&quot; : {&#13;&#10;        &quot;format&quot; : &quot;date-time&quot;,&#13;&#10;        &quot;type&quot; : &quot;string&quot;&#13;&#10;      },&#13;&#10;      &quot;userData&quot; : {&#13;&#10;        &quot;type&quot; : &quot;string&quot;&#13;&#10;      }&#13;&#10;    },&#13;&#10;    &quot;type&quot; : &quot;object&quot;&#13;&#10;  }&#13;&#10;} ] ==&gt; expected: &lt;{&#13;&#10;  &quot;openapi&quot; : &quot;3.0.0&quot;,&#13;&#10;  &quot;info&quot; : {&#13;&#10;    &quot;title&quot; : &quot;Callback Example&quot;,&#13;&#10;    &quot;version&quot; : &quot;1.0.0&quot;&#13;&#10;  },&#13;&#10;  &quot;paths&quot; : {&#13;&#10;    &quot;/streams&quot; : {&#13;&#10;      &quot;post&quot; : {&#13;&#10;        &quot;description&quot; : &quot;subscribes a client to receive out-of-band data&quot;,&#13;&#10;        &quot;parameters&quot; : [ {&#13;&#10;          &quot;description&quot; : &quot;the location where data will be sent.  Must be network accessible\nby the source server\n&quot;,&#13;&#10;          &quot;required&quot; : true,&#13;&#10;          &quot;schema&quot; : {&#13;&#10;            &quot;example&quot; : &quot;https://tonys-server.com&quot;,&#13;&#10;            &quot;format&quot; : &quot;uri&quot;,&#13;&#10;            &quot;type&quot; : &quot;string&quot;&#13;&#10;          },&#13;&#10;          &quot;in&quot; : &quot;query&quot;,&#13;&#10;          &quot;name&quot; : &quot;callbackUrl&quot;&#13;&#10;        } ],&#13;&#10;        &quot;responses&quot; : {&#13;&#10;          &quot;201&quot; : {&#13;&#10;            &quot;description&quot; : &quot;subscription successfully created&quot;,&#13;&#10;            &quot;content&quot; : {&#13;&#10;              &quot;application/json&quot; : {&#13;&#10;                &quot;schema&quot; : {&#13;&#10;                  &quot;description&quot; : &quot;subscription information&quot;,&#13;&#10;                  &quot;properties&quot; : {&#13;&#10;                    &quot;subscriptionId&quot; : {&#13;&#10;                      &quot;description&quot; : &quot;this unique identifier allows management of the subscription&quot;,&#13;&#10;                      &quot;example&quot; : &quot;2531329f-fb09-4ef7-887e-84e648214436&quot;,&#13;&#10;                      &quot;type&quot; : &quot;string&quot;&#13;&#10;                    }&#13;&#10;                  },&#13;&#10;                  &quot;required&quot; : [ &quot;subscriptionId&quot; ]&#13;&#10;                }&#13;&#10;              }&#13;&#10;            }&#13;&#10;          }&#13;&#10;        },&#13;&#10;        &quot;callbacks&quot; : {&#13;&#10;          &quot;onData&quot; : {&#13;&#10;            &quot;{$request.query.callbackUrl}/data&quot; : {&#13;&#10;              &quot;post&quot; : {&#13;&#10;                &quot;requestBody&quot; : {&#13;&#10;                  &quot;description&quot; : &quot;subscription payload&quot;,&#13;&#10;                  &quot;content&quot; : {&#13;&#10;                    &quot;application/json&quot; : {&#13;&#10;                      &quot;schema&quot; : {&#13;&#10;                        &quot;properties&quot; : {&#13;&#10;                          &quot;timestamp&quot; : {&#13;&#10;                            &quot;format&quot; : &quot;date-time&quot;,&#13;&#10;                            &quot;type&quot; : &quot;string&quot;&#13;&#10;                          },&#13;&#10;                          &quot;userData&quot; : {&#13;&#10;                            &quot;type&quot; : &quot;string&quot;&#13;&#10;                          }&#13;&#10;                        },&#13;&#10;                        &quot;type&quot; : &quot;object&quot;&#13;&#10;                      }&#13;&#10;                    }&#13;&#10;                  }&#13;&#10;                },&#13;&#10;                &quot;responses&quot; : {&#13;&#10;                  &quot;202&quot; : {&#13;&#10;                    &quot;description&quot; : &quot;Your server implementation should return this HTTP status code\nif the data was received successfully\n&quot;&#13;&#10;                  },&#13;&#10;                  &quot;204&quot; : {&#13;&#10;                    &quot;description&quot; : &quot;Your server should return this HTTP status code if no longer interested\nin further updates\n&quot;&#13;&#10;                  }&#13;&#10;                }&#13;&#10;              }&#13;&#10;            }&#13;&#10;          }&#13;&#10;        }&#13;&#10;      }&#13;&#10;    }&#13;&#10;  }&#13;&#10;}&gt; but was: &lt;{&#13;&#10;  &quot;openapi&quot; : &quot;3.0.0&quot;,&#13;&#10;  &quot;info&quot; : {&#13;&#10;    &quot;title&quot; : &quot;Callback Example&quot;,&#13;&#10;    &quot;version&quot; : &quot;1.0.0&quot;&#13;&#10;  },&#13;&#10;  &quot;paths&quot; : {&#13;&#10;    &quot;/streams&quot; : {&#13;&#10;      &quot;post&quot; : {&#13;&#10;        &quot;description&quot; : &quot;subscribes a client to receive out-of-band data&quot;,&#13;&#10;        &quot;parameters&quot; : [ {&#13;&#10;          &quot;description&quot; : &quot;the location where data will be sent.  Must be network accessible\nby the source server\n&quot;,&#13;&#10;          &quot;required&quot; : true,&#13;&#10;          &quot;in&quot; : &quot;query&quot;,&#13;&#10;          &quot;name&quot; : &quot;callbackUrl&quot;&#13;&#10;        } ],&#13;&#10;        &quot;responses&quot; : {&#13;&#10;          &quot;201&quot; : {&#13;&#10;            &quot;description&quot; : &quot;subscription successfully created&quot;,&#13;&#10;            &quot;content&quot; : {&#13;&#10;              &quot;application/json&quot; : { }&#13;&#10;            }&#13;&#10;          }&#13;&#10;        },&#13;&#10;        &quot;callbacks&quot; : {&#13;&#10;          &quot;onData&quot; : {&#13;&#10;            &quot;{$request.query.callbackUrl}/data&quot; : {&#13;&#10;              &quot;post&quot; : {&#13;&#10;                &quot;requestBody&quot; : {&#13;&#10;                  &quot;description&quot; : &quot;subscription payload&quot;,&#13;&#10;                  &quot;content&quot; : {&#13;&#10;                    &quot;application/json&quot; : { }&#13;&#10;                  }&#13;&#10;                },&#13;&#10;                &quot;responses&quot; : {&#13;&#10;                  &quot;202&quot; : {&#13;&#10;                    &quot;description&quot; : &quot;Your server implementation should return this HTTP status code\nif the data was received successfully\n&quot;&#13;&#10;                  },&#13;&#10;                  &quot;204&quot; : {&#13;&#10;                    &quot;description&quot; : &quot;Your server should return this HTTP status code if no longer interested\nin further updates\n&quot;&#13;&#10;                  }&#13;&#10;                }&#13;&#10;              }&#13;&#10;            }&#13;&#10;          }&#13;&#10;        }&#13;&#10;      }&#13;&#10;    }&#13;&#10;  }&#13;&#10;}&gt;" type="org.opentest4j.AssertionFailedError">org.opentest4j.AssertionFailedError: JSONs for api-with-examples.json are different:
[ {
  &quot;op&quot; : &quot;add&quot;,
  &quot;path&quot; : &quot;/paths/~1streams/post/parameters/0/schema&quot;,
  &quot;value&quot; : {
    &quot;example&quot; : &quot;https://tonys-server.com&quot;,
    &quot;format&quot; : &quot;uri&quot;,
    &quot;type&quot; : &quot;string&quot;
  }
}, {
  &quot;op&quot; : &quot;add&quot;,
  &quot;path&quot; : &quot;/paths/~1streams/post/responses/201/content/application~1json/schema&quot;,
  &quot;value&quot; : {
    &quot;description&quot; : &quot;subscription information&quot;,
    &quot;properties&quot; : {
      &quot;subscriptionId&quot; : {
        &quot;description&quot; : &quot;this unique identifier allows management of the subscription&quot;,
        &quot;example&quot; : &quot;2531329f-fb09-4ef7-887e-84e648214436&quot;,
        &quot;type&quot; : &quot;string&quot;
      }
    },
    &quot;required&quot; : [ &quot;subscriptionId&quot; ]
  }
}, {
  &quot;op&quot; : &quot;add&quot;,
  &quot;path&quot; : &quot;/paths/~1streams/post/callbacks/onData/{$request.query.callbackUrl}~1data/post/requestBody/content/application~1json/schema&quot;,
  &quot;value&quot; : {
    &quot;properties&quot; : {
      &quot;timestamp&quot; : {
        &quot;format&quot; : &quot;date-time&quot;,
        &quot;type&quot; : &quot;string&quot;
      },
      &quot;userData&quot; : {
        &quot;type&quot; : &quot;string&quot;
      }
    },
    &quot;type&quot; : &quot;object&quot;
  }
} ] ==&gt; expected: &lt;{
  &quot;openapi&quot; : &quot;3.0.0&quot;,
  &quot;info&quot; : {
    &quot;title&quot; : &quot;Callback Example&quot;,
    &quot;version&quot; : &quot;1.0.0&quot;
  },
  &quot;paths&quot; : {
    &quot;/streams&quot; : {
      &quot;post&quot; : {
        &quot;description&quot; : &quot;subscribes a client to receive out-of-band data&quot;,
        &quot;parameters&quot; : [ {
          &quot;description&quot; : &quot;the location where data will be sent.  Must be network accessible\nby the source server\n&quot;,
          &quot;required&quot; : true,
          &quot;schema&quot; : {
            &quot;example&quot; : &quot;https://tonys-server.com&quot;,
            &quot;format&quot; : &quot;uri&quot;,
            &quot;type&quot; : &quot;string&quot;
          },
          &quot;in&quot; : &quot;query&quot;,
          &quot;name&quot; : &quot;callbackUrl&quot;
        } ],
        &quot;responses&quot; : {
          &quot;201&quot; : {
            &quot;description&quot; : &quot;subscription successfully created&quot;,
            &quot;content&quot; : {
              &quot;application/json&quot; : {
                &quot;schema&quot; : {
                  &quot;description&quot; : &quot;subscription information&quot;,
                  &quot;properties&quot; : {
                    &quot;subscriptionId&quot; : {
                      &quot;description&quot; : &quot;this unique identifier allows management of the subscription&quot;,
                      &quot;example&quot; : &quot;2531329f-fb09-4ef7-887e-84e648214436&quot;,
                      &quot;type&quot; : &quot;string&quot;
                    }
                  },
                  &quot;required&quot; : [ &quot;subscriptionId&quot; ]
                }
              }
            }
          }
        },
        &quot;callbacks&quot; : {
          &quot;onData&quot; : {
            &quot;{$request.query.callbackUrl}/data&quot; : {
              &quot;post&quot; : {
                &quot;requestBody&quot; : {
                  &quot;description&quot; : &quot;subscription payload&quot;,
                  &quot;content&quot; : {
                    &quot;application/json&quot; : {
                      &quot;schema&quot; : {
                        &quot;properties&quot; : {
                          &quot;timestamp&quot; : {
                            &quot;format&quot; : &quot;date-time&quot;,
                            &quot;type&quot; : &quot;string&quot;
                          },
                          &quot;userData&quot; : {
                            &quot;type&quot; : &quot;string&quot;
                          }
                        },
                        &quot;type&quot; : &quot;object&quot;
                      }
                    }
                  }
                },
                &quot;responses&quot; : {
                  &quot;202&quot; : {
                    &quot;description&quot; : &quot;Your server implementation should return this HTTP status code\nif the data was received successfully\n&quot;
                  },
                  &quot;204&quot; : {
                    &quot;description&quot; : &quot;Your server should return this HTTP status code if no longer interested\nin further updates\n&quot;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}&gt; but was: &lt;{
  &quot;openapi&quot; : &quot;3.0.0&quot;,
  &quot;info&quot; : {
    &quot;title&quot; : &quot;Callback Example&quot;,
    &quot;version&quot; : &quot;1.0.0&quot;
  },
  &quot;paths&quot; : {
    &quot;/streams&quot; : {
      &quot;post&quot; : {
        &quot;description&quot; : &quot;subscribes a client to receive out-of-band data&quot;,
        &quot;parameters&quot; : [ {
          &quot;description&quot; : &quot;the location where data will be sent.  Must be network accessible\nby the source server\n&quot;,
          &quot;required&quot; : true,
          &quot;in&quot; : &quot;query&quot;,
          &quot;name&quot; : &quot;callbackUrl&quot;
        } ],
        &quot;responses&quot; : {
          &quot;201&quot; : {
            &quot;description&quot; : &quot;subscription successfully created&quot;,
            &quot;content&quot; : {
              &quot;application/json&quot; : { }
            }
          }
        },
        &quot;callbacks&quot; : {
          &quot;onData&quot; : {
            &quot;{$request.query.callbackUrl}/data&quot; : {
              &quot;post&quot; : {
                &quot;requestBody&quot; : {
                  &quot;description&quot; : &quot;subscription payload&quot;,
                  &quot;content&quot; : {
                    &quot;application/json&quot; : { }
                  }
                },
                &quot;responses&quot; : {
                  &quot;202&quot; : {
                    &quot;description&quot; : &quot;Your server implementation should return this HTTP status code\nif the data was received successfully\n&quot;
                  },
                  &quot;204&quot; : {
                    &quot;description&quot; : &quot;Your server should return this HTTP status code if no longer interested\nin further updates\n&quot;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}&gt;
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
	at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1135)
	at openapi.OpenAPIMain_test.compareJson(OpenAPIMain_test.java:87)
	at openapi.OpenAPIMain_test.test(OpenAPIMain_test.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:834)
</failure>
  </testcase>
  <system-out><![CDATA[Loading expression DSL file 'callback-example.json'.
true
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
