[
  {
    "description": "root pointer ref",
    "schema": {
      "properties": {
        "foo": {
          "$ref": "#"
        }
      },
      "additionalProperties": false
    },
    "tests": [
      {
        "description": "match",
        "data": {
          "foo": false
        },
        "valid": true
      },
      {
        "description": "recursive match",
        "data": {
          "foo": {
            "foo": {
              "foo": false
            }
          }
        },
        "valid": true
      },
      {
        "description": "mismatch",
        "data": {
          "bar": false
        },
        "valid": false
      },
      {
        "description": "recursive mismatch",
        "data": {
          "foo": {
            "bar": false
          }
        },
        "valid": false
      }
    ]
  },
  {
    "description": "relative pointer ref to object",
    "schema": {
      "properties": {
        "foo": {
          "type": "integer"
        },
        "bar": {
          "$ref": "#/properties/foo"
        },
        "baz": {
          "$ref": "#/properties/foo"
        }
      }
    },
    "tests": [
      {
        "description": "match",
        "data": {
          "bar": 3
        },
        "valid": true
      },
      {
        "description": "mismatch",
        "data": {
          "bar": true
        },
        "valid": false
      },
      {
        "description": "mismatch",
        "data": {
          "baz": "4"
        },
        "valid": false
      }
    ]
  },
  {
    "description": "nested refs",
    "schema": {
      "definitions": {
        "a": {
          "type": "integer"
        },
        "b": {
          "$ref": "#/definitions/a"
        },
        "c": {
          "$ref": "#/definitions/b"
        }
      },
      "$ref": "#/definitions/c"
    },
    "tests": [
      {
        "description": "nested ref valid",
        "data": 5,
        "valid": true
      },
      {
        "description": "nested ref invalid",
        "data": "a",
        "valid": false
      }
    ]
  },
  {
    "description": "property named $ref that is not a reference",
    "schema": {
      "properties": {
        "$ref": {
          "type": "string"
        }
      }
    },
    "tests": [
      {
        "description": "property named $ref valid",
        "data": {
          "$ref": "a"
        },
        "valid": true
      },
      {
        "description": "property named $ref invalid",
        "data": {
          "$ref": 2
        },
        "valid": false
      }
    ]
  }
]
