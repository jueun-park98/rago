[
  {
    "description": "not nullable, not filled",
    "schema": {
      "type": "integer"
    },
    "tests": [
      {
        "description": "disallowed",
        "data": null,
        "valid": false
      }
    ]
  },
  {
    "description": "not nullable, filled",
    "schema": {
      "nullable": false,
      "type": "integer"
    },
    "tests": [
      {
        "description": "disallowed",
        "data": null,
        "valid": false
      }
    ]
  },
  {
    "description": "not nullable, wrong type",
    "schema": {
      "nullable": "false",
      "type": "integer"
    },
    "tests": [
      {
        "description": "disallowed",
        "data": null,
        "valid": false
      }
    ]
  },
  {
    "description": "nullable",
    "schema": {
      "nullable": true,
      "type": "number",
      "format": "double"
    },
    "tests": [
      {
        "description": "allowed",
        "data": null,
        "valid": true
      }
    ]
  },
  {
    "description": "relative pointer ref to nullable object",
    "schema": {
      "properties": {
        "foo": {
          "type": "integer",
          "nullable": true
        },
        "bar": {
          "$ref": "#/properties/foo"
        }
      }
    },
    "tests": [
      {
        "description": "match",
        "data": {
          "bar": null
        },
        "valid": true
      }
    ]
  }
]
