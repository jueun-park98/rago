task sourcesJar(type: Jar, dependsOn: classes) {
  archiveClassifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
  archiveClassifier = 'javadoc'
  from javadoc.destinationDir
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      logger.warn(project.group + " : " + project.name + " : " + project.version)
      logger.warn(project.description)

      groupId = project.group
      artifactId = project.name
      version = project.version

      from components.java
      artifact sourcesJar
      artifact javadocJar
      pom {
        name = project.name
        description = project.description
        url = "https://github.com/openapi4j/openapi4j"
        licenses {
          license {
            name = "Apache License, Version 2.0"
            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
          }
        }
        developers {
          developer {
            id = 'llfbandit'
            name = 'Rémy NOËL'
          }
        }
        scm {
          connection = "scm:git:git://github.com:openapi4j/openapi4j.git"
          developerConnection = "scm:git:ssh://@github.com:openapi4j/openapi4j.git"
          url = "https://github.com/openapi4j/openapi4j"
        }
      }
    }
  }
  repositories {
    // Local publication to allow checks
    /*maven {
        def releasesUrl = uri("$buildDir/publish/release")
        def snapshotsUrl = uri("$buildDir/publish/snapshot")
        url version.endsWith("SNAPSHOT") ? snapshotsUrl : releasesUrl
    }*/
    maven {
      name "ossrh"
      credentials {
        username findProperty("publishUsername") != null ? findProperty("publishUsername") : System.getenv("publishUsername")
        password findProperty("publishPassword") != null ? findProperty("publishPassword") : System.getenv("publishPassword")
      }

      def snapshotsUrl = "https://oss.sonatype.org/content/repositories/snapshots"
      def releasesUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
      url version.endsWith("SNAPSHOT") ? snapshotsUrl : releasesUrl
    }
  }
}

tasks.withType(Sign) {
  onlyIf { !version.endsWith("SNAPSHOT") }
}

signing {
  sign publishing.publications.mavenJava
}
