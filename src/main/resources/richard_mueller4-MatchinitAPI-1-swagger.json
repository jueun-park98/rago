{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "1",
    "title" : "Server - mobile App - API",
    "description" : "This API describes the communication between the mobile App and MatchinitServer"
  },
  "paths" : {
    "/matches/" : {
      "get" : {
        "summary" : "Used to retrive new possible matches.",
        "tags" : [ "Matches" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/ownUserID"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Matches"
          }
        }
      }
    },
    "/matches/confirmed/" : {
      "get" : {
        "summary" : "Used to retrive already matched users.",
        "tags" : [ "Matches" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/ownUserID"
        } ],
        "operationId" : "getUserDetails",
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Matches"
          }
        }
      }
    },
    "/matches/like/" : {
      "post" : {
        "summary" : "Used to like a user possibly confirming a match.",
        "tags" : [ "Matches" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/UserID"
        }, {
          "$ref" : "#/components/parameters/ownUserID"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/matches/dislike/" : {
      "post" : {
        "summary" : "Used to dislike a user reducing his matching score in the process.",
        "tags" : [ "Matches" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/UserID"
        }, {
          "$ref" : "#/components/parameters/ownUserID"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/profile/details/" : {
      "get" : {
        "summary" : "Used to retrive basic informations of a user-profile",
        "tags" : [ "User" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/UserID"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/UserDetails"
          }
        }
      },
      "post" : {
        "summary" : "Used to set own profile data",
        "tags" : [ "User" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/UserID"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UserDetails"
        },
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/profile/preferences" : {
      "get" : {
        "summary" : "Used to retrieve matching preferences of the given user",
        "tags" : [ "User" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/UserID"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ProfileSettings"
          }
        }
      },
      "post" : {
        "summary" : "Used to change preference settings of a profile",
        "tags" : [ "User" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/UserID"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ProfileSettings"
        },
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/user/register" : {
      "put" : {
        "summary" : "Used to register from the mobile app.",
        "tags" : [ "User" ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/RegisterData"
        },
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/channels/global" : {
      "get" : {
        "summary" : "Used to retrieve messages of the global channel of a domain",
        "tags" : [ "Channels" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/timestamp"
        }, {
          "$ref" : "#/components/parameters/numberOfMessages"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GlobalChannelMessage"
          }
        }
      },
      "put" : {
        "summary" : "Used to send messages to the global channel of a domain",
        "tags" : [ "Channels" ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/SendGlobalChannelMessage"
        },
        "responses" : {
          "201" : {
            "description" : "created"
          },
          "403" : {
            "description" : "Banned"
          }
        }
      },
      "delete" : {
        "summary" : "Moderators can use this to delete Messages.",
        "tags" : [ "Channels" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/MessageID"
        } ],
        "responses" : {
          "200" : {
            "description" : "deleted"
          },
          "403" : {
            "description" : "not a moderator"
          }
        }
      }
    },
    "/channels/global/ban" : {
      "post" : {
        "summary" : "Moderators can use this to temporarly ban people",
        "tags" : [ "Channels" ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Ban"
        },
        "responses" : {
          "200" : {
            "description" : "ok"
          },
          "403" : {
            "description" : "not a moderator"
          }
        }
      }
    },
    "/game/details/" : {
      "get" : {
        "summary" : "Used to retrieve an overview of gamification details.",
        "tags" : [ "Gamification" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/ownUserID"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GamificationDetails"
          }
        }
      }
    },
    "/game/score/{gameID}/" : {
      "get" : {
        "summary" : "Used to retrieve Highscore list with own spot and surrounding places.",
        "tags" : [ "Gamification" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/ownUserID"
        }, {
          "$ref" : "#/components/parameters/GameID"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/Highscores"
          }
        }
      }
    },
    "/game/refresh/" : {
      "get" : {
        "summary" : "Used to refresh scores of games outside of the mobile app.",
        "tags" : [ "Gamification" ],
        "description" : "This request will be forwarded to the Matchinit-Cube-Proxy Server of a certain user domain / Cube network, and will be forwarded further to the specific Cube Server.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/ownUserID"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/GamificationDetails"
          }
        }
      }
    }
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/richard_mueller4/MatchinitAPI/1"
  } ],
  "components" : {
    "schemas" : {
      "User" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 81230
          },
          "name" : {
            "type" : "string",
            "example" : "Max Mustermann"
          }
        }
      },
      "UserDetails" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Tim"
          },
          "selfDescription" : {
            "type" : "string",
            "example" : "None"
          }
        }
      },
      "UserRegisterData" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Max Mustermann"
          },
          "email" : {
            "type" : "string",
            "example" : "maxm@tu-dresden.de"
          }
        }
      },
      "Ban" : {
        "type" : "object",
        "properties" : {
          "userToBanID" : {
            "type" : "integer",
            "example" : 332542
          },
          "ownUserID" : {
            "type" : "integer",
            "example" : 824923
          },
          "reason" : {
            "type" : "string",
            "example" : "wrote something bad"
          },
          "messageOfSuspect" : {
            "type" : "integer",
            "example" : 763423
          }
        }
      },
      "PotentialMatches" : {
        "type" : "object",
        "properties" : {
          "matched_users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            },
            "example" : [ {
              "id" : 1353143,
              "name" : "Max Musterman"
            }, {
              "id" : 1245424,
              "name" : "Sören Sörenson"
            } ]
          }
        }
      },
      "ChannelMessage" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "message" : {
            "type" : "string",
            "minimum" : 1,
            "maximum" : 20000,
            "example" : "Hallo wie geht es euch allen im Uni-Channel ?"
          },
          "userID" : {
            "type" : "integer",
            "example" : 35432412
          },
          "messageID" : {
            "type" : "integer",
            "example" : 29847
          }
        }
      },
      "SendChannelMessage" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "minimum" : 1,
            "maximum" : 20000,
            "example" : "Hallo wie geht es euch allen im Uni-Channel ?"
          },
          "userID" : {
            "type" : "integer",
            "example" : 35432412
          }
        }
      },
      "MatchPreference" : {
        "type" : "object",
        "properties" : {
          "preference" : {
            "type" : "string",
            "example" : "MatchWithSameCourses"
          },
          "value" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "ProfileSettings" : {
        "type" : "object",
        "properties" : {
          "showName" : {
            "type" : "boolean"
          },
          "showDescription" : {
            "type" : "boolean"
          },
          "showPicture" : {
            "type" : "boolean"
          },
          "showPreferences" : {
            "type" : "boolean"
          },
          "matchPreferences" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MatchPreference"
            }
          }
        }
      },
      "GamificationDetails" : {
        "type" : "object",
        "properties" : {
          "points" : {
            "type" : "integer",
            "example" : 32
          },
          "place" : {
            "type" : "integer",
            "example" : 1045
          },
          "level" : {
            "type" : "integer",
            "example" : 4
          },
          "bonuses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "example" : [ "DistancingBonus", "FreshAirBonus" ]
          }
        }
      },
      "Score" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Max"
          },
          "score" : {
            "type" : "integer",
            "example" : 2102
          },
          "place" : {
            "type" : "integer",
            "example" : 4
          }
        }
      },
      "UserID" : {
        "type" : "integer"
      }
    },
    "responses" : {
      "Users" : {
        "description" : "Ok",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/User"
            }
          }
        },
        "links" : {
          "User" : {
            "operationId" : "getUserDetails",
            "parameters" : {
              "userId" : "$response.body#/id"
            }
          }
        }
      },
      "Matches" : {
        "description" : "Ok",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PotentialMatches"
            }
          }
        },
        "links" : {
          "User" : {
            "operationId" : "getUserDetails",
            "parameters" : {
              "userId" : "$response.body.matched_users#/id"
            }
          }
        }
      },
      "GlobalChannelMessage" : {
        "description" : "ok",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ChannelMessage"
              },
              "example" : [ {
                "message" : "Hallo!",
                "date" : "11.02.2014",
                "userID" : 8263427,
                "messageID" : 121523
              }, {
                "message" : "Auch hallo!",
                "date" : "12.02.2014",
                "userID" : 1249731,
                "messageID" : 903245
              } ]
            }
          }
        },
        "links" : {
          "User" : {
            "operationId" : "getUserDetails",
            "parameters" : {
              "userId" : "$response.body#/userID"
            }
          }
        }
      },
      "ProfileSettings" : {
        "description" : "ok",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ProfileSettings"
            }
          }
        }
      },
      "UserDetails" : {
        "description" : "ok",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UserDetails"
            }
          }
        }
      },
      "GamificationDetails" : {
        "description" : "ok",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/GamificationDetails"
            }
          }
        }
      },
      "Highscores" : {
        "description" : "ok",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "gameID" : {
                  "type" : "string",
                  "example" : "Lüften"
                },
                "scores" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Score"
                  }
                }
              }
            }
          }
        }
      }
    },
    "requestBodies" : {
      "RegisterData" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UserRegisterData"
            }
          }
        }
      },
      "GlobalChannelMessage" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ChannelMessage"
            }
          }
        }
      },
      "SendGlobalChannelMessage" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SendChannelMessage"
            }
          }
        }
      },
      "ProfileSettings" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ProfileSettings"
            }
          }
        }
      },
      "UserDetails" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UserDetails"
            }
          }
        }
      },
      "Ban" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Ban"
            }
          }
        }
      }
    },
    "parameters" : {
      "UserID" : {
        "in" : "query",
        "name" : "userID",
        "schema" : {
          "$ref" : "#/components/schemas/UserID"
        },
        "required" : true
      },
      "ownUserID" : {
        "in" : "query",
        "name" : "ownUserID",
        "schema" : {
          "$ref" : "#/components/schemas/UserID"
        },
        "required" : true,
        "description" : "Id of the user making the request."
      },
      "timestamp" : {
        "in" : "query",
        "name" : "timestamp",
        "description" : "can be used to load messages starting at a specific time (going backwards from that point on), if not used the newest messages are loaded",
        "schema" : {
          "type" : "string",
          "format" : "date"
        },
        "required" : false
      },
      "numberOfMessages" : {
        "in" : "query",
        "name" : "nom",
        "description" : "specifies the number of messages to query, if not used, a maximum amount of messages is returned",
        "schema" : {
          "type" : "integer"
        },
        "required" : false
      },
      "GameID" : {
        "description" : "GameID of the single Game requested, or `global` for all scores",
        "in" : "path",
        "name" : "gameID",
        "schema" : {
          "type" : "string",
          "example" : "Lüften"
        },
        "required" : true
      },
      "MessageID" : {
        "description" : "ID of a Message",
        "in" : "query",
        "name" : "messageID",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "example" : 524343
        }
      }
    }
  }
}