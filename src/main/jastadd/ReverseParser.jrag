import java.util.*;
aspect ReverseParser {

  public static OpenAPI OpenAPIObject.reverseOpenAPI (OpenAPIObject openapi){
        OpenAPI api = new OpenAPI();

        if (!openapi.getOpenAPI().isEmpty())
        api.setOpenapi(openapi.getOpenAPI());
        if (openapi.hasI())
        api.setInfo(InfoObject.reverseInfo(openapi.get_impl_i()));
        if (openapi.get_impl_s().size() != 0) {
        List<Server> servers = new ArrayList<>();
        for (ServerObject s : openapi.get_impl_s())
        servers.add(ServerObject.reverseServer(s));
        api.setServers(servers);
        }
        if (openapi.get_impl_p().size() != 0) {
        Paths paths = new Paths();
        for (PathsObject p : openapi.getPList()){
        //if (p.get_impl_p() instanceof PathItemObject)
        //paths.addPathItem(p.getRef(), PathIte)
        }
        api.setPaths(paths);
        }
        if (openapi.hasC())
        api.setComponents(ComponentsObject.reverseComponents(openapi.get_impl_c()));
        if (openapi.getSrList().size() != 0) {
        List<io.swagger.v3.oas.models.security.SecurityRequirement> securityRequirements = new ArrayList<>();
        for (SecurityRequirementObject s : openapi.getSrList())
        securityRequirements.add(SecurityRequirementObject.reverseSecurityRequirement(s));
        api.setSecurity(securityRequirements);
        }
        if (openapi.getTList().size() != 0) {
        List<io.swagger.v3.oas.models.tags.Tag> tags = new ArrayList<>();
        for (TagObject t : openapi.getTList())
        tags.add(TagObject.reverseTag(t));
        api.setTags(tags);
        }
        if (openapi.hasE())
        api.setExternalDocs(ExternalDocObject.reverseExternalDocs(openapi.getE()));
        if (openapi.getExList().size() != 0) {
        Map<String, Object> extensionMap = new HashMap<>();
        for (Extension e : openapi.getExList())
        extensionMap.put(e.getKey(), e.getValue());
        api.setExtensions(extensionMap);
        }

        /* 3.1.0 features
    if (openapi.getWebhook != null) ...
    if (openapi.getJsonSchemaDialect != null) ...
     */

        return api;
  }

  public static io.swagger.v3.oas.models.info.Info InfoObject.reverseInfo (InfoObject infoObject){
        io.swagger.v3.oas.models.info.Info info = new io.swagger.v3.oas.models.info.Info();

        if (!infoObject.getTitle().isEmpty())
        info.setTitle(infoObject.getTitle());
        if (!infoObject.getVersion().isEmpty())
        info.setVersion(infoObject.getVersion());
        if (!infoObject.getDescription().isEmpty())
        info.setDescription(infoObject.getDescription());
        if (!infoObject.getTermsOfService().isEmpty())
        info.setTermsOfService(infoObject.getTermsOfService());
        if (infoObject.hasC())
        info.setContact(ContactObject.reverseContact(infoObject.get_impl_c()));
        if (infoObject.hasL())
        info.setLicense(LicenseObject.reverseLicense(infoObject.get_impl_l()));
        if (infoObject.getExList().size() != 0) {
        Map<String, Object> extension = new HashMap<>();
        for (Extension e : infoObject.getExList())
        extension.put(e.getKey(), e.getValue());
        info.setExtensions(extension);
        }

        return info;
  }

  public static io.swagger.v3.oas.models.info.Contact ContactObject.reverseContact (ContactObject contactObject){
        io.swagger.v3.oas.models.info.Contact contact = new io.swagger.v3.oas.models.info.Contact();

        if (!contactObject.getName().isEmpty())
        contact.setName(contactObject.getName());
        if (!contactObject.getUrl().isEmpty())
        contact.setUrl(contactObject.getUrl());
        if (!contactObject.getEmail().isEmpty())
        contact.setEmail(contactObject.getEmail());
        if (contactObject.getExList().size() != 0) {
        Map<String, Object> extensions = new HashMap<>();
        for (Extension e : contactObject.getExList())
        extensions.put(e.getKey(), e.getValue());
        contact.setExtensions(extensions);
        }

        return contact;
  }

  public static io.swagger.v3.oas.models.info.License LicenseObject.reverseLicense (LicenseObject licenseObject){
        io.swagger.v3.oas.models.info.License license = new io.swagger.v3.oas.models.info.License();

        if (!licenseObject.getName().isEmpty())
        license.setName(licenseObject.getName());
        if (!licenseObject.getUrl().isEmpty())
        license.setUrl(licenseObject.getUrl());
        if (licenseObject.getExList().size() != 0) {
        Map<String, Object> extensions = new HashMap<>();
        for (Extension e : licenseObject.getExList())
        extensions.put(e.getKey(), e.getValue());
        license.setExtensions(extensions);
        }

        return license;
  }

  public static Server ServerObject.reverseServer (ServerObject serverObject){
        Server server = new Server();

        if (!serverObject.getUrl().isEmpty())
        server.setUrl(serverObject.getUrl());
        if (!serverObject.getDescription().isEmpty())
        server.setDescription(serverObject.getDescription());
        if (serverObject.get_impl_st().size() != 0) {
        ServerVariables serverVariables = new ServerVariables();
        for (ServerVariablesTuple s : serverObject.get_impl_st())
        serverVariables.addServerVariable(s.getName(), ServerVariableObject.reverseServerVariable(s.get_impl_s()));
        server.setVariables(serverVariables);
        }
        if (serverObject.getExList().size() != 0) {
        Map<String, Object> extensions = new HashMap<>();
        for (Extension e : serverObject.getExList())
        extensions.put(e.getKey(), e.getValue());
        server.setExtensions(extensions);
        }

        return server;
  }

  public static ServerVariable ServerVariableObject.reverseServerVariable (ServerVariableObject serverVariableObject){
        ServerVariable serverVariable = new ServerVariable();

        if (!serverVariableObject.getDefault().isEmpty())
        serverVariable.setDefault(serverVariableObject.getDefault());
        if (!serverVariableObject.getDescription().isEmpty())
        serverVariable.setDescription(serverVariableObject.getDescription());
        if (serverVariableObject.get_impl_e().size() != 0) {
        List<String> enums = new ArrayList<>();
        for (Enum e : serverVariableObject.getEList())
        enums.add(e.getEnumValue());
        serverVariable.setEnum(enums);
        }
        if (serverVariableObject.getEList().size() != 0) {
        Map<String, Object> extensions = new HashMap<>();
        for (Extension e : serverVariableObject.getExList())
        extensions.put(e.getKey(), e.getValue());
        serverVariable.setExtensions(extensions);
        }

        return serverVariable;
  }

  public static Components ComponentsObject.reverseComponents (ComponentsObject componentsObject){
        Components components = new Components();

        if (componentsObject.getSList().size() != 0) {
        Map<String, io.swagger.v3.oas.models.media.Schema> schemaMap = new HashMap<>();
        SchemaOb s;
        for (SchemaTuple t : componentsObject.getSList()) {
        s = t.get_impl_o();
        if (s instanceof SchemaObject)
        schemaMap.put(t.getKey(), ((SchemaObject) s).reverseSchema(s));
        else
        schemaMap.put(t.getKey(), ((SchemaReference) s).reverseSchema(s));
        }
        components.setSchemas(schemaMap);
        }
        if (componentsObject.getRList().size() != 0) {
        Map<String, ApiResponse> responseMap = new HashMap<>();
        ResponseOb r;
        for (ResponseTuple t : componentsObject.getRList()) {
        r = t.get_impl_o();
        responseMap.put(t.getKey(), r.reverseResponse(r));
        }
        components.setResponses(responseMap);
        }
        if (componentsObject.getPList().size() != 0) {
        Map<String, Parameter> parameterMap = new HashMap<>();
        ParameterOb p;
        for (ParameterTuple t : componentsObject.getPList()) {
        p = t.get_impl_o();
        parameterMap.put(t.getKey(), p.reverseParameter(p));
        }
        components.setParameters(parameterMap);
        }
        if (componentsObject.getEList().size() != 0) {
        Map<String, Example> exampleMap = new HashMap<>();
        for (ExampleTuple t : componentsObject.getEList())
        exampleMap.put(t.getKey(), ExampleObject.reverseExample(t.get_impl_o()));
        components.setExamples(exampleMap);
        }
        if (componentsObject.getRbList().size() != 0) {
        Map<String, RequestBody> requestBodyMap = new HashMap<>();
        RequestBodyOb r;
        for (RequestBodyTuple t : componentsObject.getRbList()) {
        r = t.get_impl_o();
        requestBodyMap.put(t.getKey(), r.reverseRequestBody(r));
        }
        components.setRequestBodies(requestBodyMap);
        }
        if (componentsObject.getHList().size() != 0) {
        Map<String, Header> headerMap = new HashMap<>();
        HeaderOb h;
        for (HeaderTuple t : componentsObject.getHList()) {
        h = t.get_impl_o();
        headerMap.put(t.getKey(), h.reverseHeader(h));
        }
        components.setHeaders(headerMap);
        }
        if (componentsObject.getScList().size() != 0) {
        Map<String, SecurityScheme> securitySchemeMap = new HashMap<>();
        SecuritySchemeOb s;
        for (SecuritySchemeTuple t : componentsObject.getScList()) {
        s = t.get_impl_o();
        securitySchemeMap.put(t.getKey(), s.reverseSecurityScheme(s));
        }
        components.setSecuritySchemes(securitySchemeMap);
        }
        if (componentsObject.getLList().size() != 0) {
        Map<String, Link> linkMap = new HashMap<>();
        LinkOb l;
        for (LinkTuple t : componentsObject.getLList()) {
        l = t.get_impl_o();
        linkMap.put(t.getKey(), l.reverseLink(l));
        }
        components.setLinks(linkMap);
        }
        if (componentsObject.getCList().size() != 0) {
        Map<String, Callback> callbackMap = new HashMap<>();
        CallbackOb c;
        for (CallbackTuple t : componentsObject.getCList()) {
        c = t.get_impl_o();
        callbackMap.put(t.getKey(), c.reverseCallback(c));
        }
        components.setCallbacks(callbackMap);
        }
        if (componentsObject.getExList().size() != 0) {
        Map<String, Object> extensions = new HashMap<>();
        for (Extension e : componentsObject.getExList())
        extensions.put(e.getKey(), e.getValue());
        components.setExtensions(extensions);
        }

        return components;
  }

        syn PathItem PathItemOb.reversePath (PathItemOb pathItemOb);
        eq PathItemReference.reversePath (PathItemOb pathItemOb) {
        PathItem pathItem = new PathItem();
        PathItemReference p = (PathItemReference) pathItemOb;

        /* implement after reference implementation
        if (!p.getRef().isEmpty()) {
        try {
        parameter.setReference(new org.openapi4j.core.model.v3.OAI3Context(new URL("")), new URL(""), p.getRef());
        } catch (Exception e) {
        e.printStackTrace();
        }
        }
         */

        return pathItem;
        }
        eq PathItemObject.reversePath (PathItemOb pathItemOb) {
        PathItem path = new PathItem();
        PathItemObject p = (PathItemObject) pathItemOb;

        if (!p.getSummary().isEmpty())
        path.setSummary(p.getSummary());
        if (!p.getDescription().isEmpty())
        path.setDescription(p.getDescription());
        if (p.hasG())
        path.setGet(OperationObject.reverseOperation(p.getG().get_impl_o()));
        if (p.hasPut())
        path.setPut(OperationObject.reverseOperation(p.getPut().get_impl_o()));
        if (p.hasPost())
        path.setPost(OperationObject.reverseOperation(p.getPost().get_impl_o()));
        if (p.hasD())
        path.setDelete(OperationObject.reverseOperation(p.getD().get_impl_o()));
        if (p.hasO())
        path.setOptions(OperationObject.reverseOperation(p.getO().get_impl_o()));
        if (p.hasH())
        path.setHead(OperationObject.reverseOperation(p.getH().get_impl_o()));
        if (p.hasP())
        path.setPatch(OperationObject.reverseOperation(p.getP().get_impl_o()));
        if (p.getSList().size() != 0) {
        for (ServerObject s : p.getSList())
        path.addServersItem(ServerObject.reverseServer(s));
        }
        if (p.getPoList().size() != 0) {
        for (ParameterOb e : p.getPoList())
        path.addParametersItem(e.reverseParameter(e));
        }
        if (p.getExList().size() != 0) {
        Map<String, Object> extensionMap = new HashMap<>();
        for (Extension e : p.getExList())
        extensionMap.put(e.getKey(), e.getValue());
        path.setExtensions(extensionMap);
        }

        return path;
        }

  public static io.swagger.v3.oas.models.Operation OperationObject.reverseOperation (OperationObject operationObject){
        io.swagger.v3.oas.models.Operation operation = new io.swagger.v3.oas.models.Operation();

        if (operationObject.getTList().size() != 0) {
        for (de.tudresden.inf.st.openapi.ast.Tag t : operationObject.getTList())
        operation.addTagsItem(t.getTag());
        }
        if (!operationObject.getSummary().isEmpty())
        operation.setSummary(operationObject.getSummary());
        if (!operationObject.getDescription().isEmpty())
        operation.setDescription(operationObject.getDescription());
        if (operationObject.hasEd())
        operation.setExternalDocs(ExternalDocObject.reverseExternalDocs(operationObject.get_impl_ed()));
        if (!operationObject.getOperationID().isEmpty())
        operation.setOperationId(operationObject.getOperationID());
        if (operationObject.getPList().size() != 0) {
        for (ParameterOb p : operationObject.getPList())
        operation.addParametersItem(p.reverseParameter(p));
        }
        if (operationObject.hasRb())
        operation.setRequestBody(operationObject.get_impl_rb().reverseRequestBody(operationObject.get_impl_rb()));
        if (operationObject.getR().getRList().size() != 0) {
        ApiResponses responses = new ApiResponses();
        for (ResponseTuple t : operationObject.getR().getRList())
        responses.put(t.getKey(), t.get_impl_o().reverseResponse(t.get_impl_o()));
        operation.setResponses(responses);
        }
        if (operationObject.getCList().size() != 0) {
        Map<String, Callback> callbacks = new HashMap<>();
        for (CallbackTuple t : operationObject.getCList())
        callbacks.put(t.getKey(), t.get_impl_o().reverseCallback(t.get_impl_o()));
        operation.setCallbacks(callbacks);
        }
        if (operationObject.getDeprecatedBoolean() != null)
        operation.setDeprecated(operationObject.getDeprecatedBoolean());
        if (operationObject.getSrList().size() != 0) {
        for (SecurityRequirementObject s : operationObject.getSrList())
        operation.addSecurityItem(SecurityRequirementObject.reverseSecurityRequirement(s));
        }
        if (operationObject.getSList().size() != 0) {
        for (ServerObject s : operationObject.getSList())
        operation.addServersItem(ServerObject.reverseServer(s));
        }
        if (operationObject.getExList().size() != 0) {
        Map<String, Object> extensionMap = new HashMap<>();
        for (Extension e : operationObject.getExList())
        extensionMap.put(e.getKey(), e.getValue());
        operation.setExtensions(extensionMap);
        }

        return operation;
  }

  public static io.swagger.v3.oas.models.ExternalDocumentation ExternalDocObject.reverseExternalDocs (ExternalDocObject externalDocObject){
        ExternalDocumentation externalDocs = new ExternalDocumentation();

        if (!externalDocObject.getDescription().isEmpty())
        externalDocs.setDescription(externalDocObject.getDescription());
        if (!externalDocObject.getUrl().isEmpty())
        externalDocs.setUrl(externalDocObject.getUrl());
        if (externalDocObject.getExList().size() != 0) {
        Map<String, Object> extensionMap = new HashMap<>();
        for (Extension e : externalDocObject.getExList())
        extensionMap.put(e.getKey(), e.getValue());
        externalDocs.setExtensions(extensionMap);
        }

        return externalDocs;
  }

  syn io.swagger.v3.oas.models.parameters.Parameter ParameterOb.reverseParameter (ParameterOb parameterOb);
  eq ParameterReference.reverseParameter (ParameterOb parameterOb) {
        io.swagger.v3.oas.models.parameters.Parameter parameter = new io.swagger.v3.oas.models.parameters.Parameter();
        ParameterReference p = (ParameterReference) parameterOb;

        if (!p.getRef().isEmpty()) {
        parameter.set$ref(p.getRef());
        }

        return parameter;
  }
  eq ParameterObject.reverseParameter (ParameterOb parameterOb) {
        io.swagger.v3.oas.models.parameters.Parameter parameter = new io.swagger.v3.oas.models.parameters.Parameter();
        ParameterObject p = (ParameterObject) parameterOb;

        if (!p.getName().isEmpty())
        parameter.setName(p.getName());
        if (!p.getIn().isEmpty())
        parameter.setIn(p.getIn());
        if (p.getRequired() != null)
        parameter.setRequired(p.getRequired());
        if (!p.getDescription().isEmpty())
        parameter.setDescription(p.getDescription());
        if (p.getDeprecatedBoolean() != null)
        parameter.setDeprecated(p.getDeprecatedBoolean());
        if (!p.getStyle().isEmpty())
        parameter.setStyle(Parameter.StyleEnum.valueOf(p.getStyle()));
        if (p.getAllowReserved() != null)
        parameter.setAllowReserved(p.getAllowReserved());
        if (p.getExplode() != null)
        parameter.setExplode(p.getExplode());
        if (p.getS() != null)
        parameter.setSchema(p.get_impl_s().reverseSchema(p.get_impl_s()));
        if (p.getExample() != null)
        parameter.setExample(p.getExample());
        if (p.getEList().size() != 0) {
        Map<String, Example> exampleMap = new HashMap<>();
        for (ExampleTuple t : p.getEList())
        exampleMap.put(t.getKey(), ExampleObject.reverseExample(t.get_impl_o()));
        parameter.setExamples(exampleMap);
        }
        if (p.getCList().size() != 0) {
        io.swagger.v3.oas.models.media.Content content = new Content();
        for (ContentTuple t : p.getCList())
        content.put(t.getKey(), MediaTypeObject.reverseMediaType(t.get_impl_m()));
        parameter.setContent(content);
        }
        if (p.getRequired() != null)
        parameter.setRequired(p.getRequired());
        if (p.getExList().size() != 0) {
        Map<String, Object> extensionMap = new HashMap<>();
        for (Extension e : p.getExList())
        extensionMap.put(e.getKey(), e.getValue());
        parameter.setExtensions(extensionMap);
        }

        return parameter;
  }

  syn RequestBody RequestBodyOb.reverseRequestBody (RequestBodyOb requestBodyOb);
  eq RequestBodyReference.reverseRequestBody (RequestBodyOb requestBodyOb) {
    RequestBody requestBody = new RequestBody();
    RequestBodyReference r = (RequestBodyReference) requestBodyOb;

        if (!r.getRef().isEmpty()) {
        requestBody.set$ref(r.getRef());
        }

    return requestBody;
  }
  eq RequestBodyObject.reverseRequestBody (RequestBodyOb requestBodyOb) {
        RequestBody requestBody = new RequestBody();
        RequestBodyObject r = (RequestBodyObject) requestBodyOb;

        if (r.getCList().size() != 0) {
        io.swagger.v3.oas.models.media.Content contents = new Content();
        for (ContentTuple t : r.getCList())
        contents.put(t.getKey(), MediaTypeObject.reverseMediaType(t.get_impl_m()));
        requestBody.setContent(contents);
        }
        if (!r.getDescription().isEmpty())
        requestBody.setDescription(r.getDescription());
        if (r.getRequired() != null)
        requestBody.setRequired(r.getRequired());

        return requestBody;
  }

  public static io.swagger.v3.oas.models.media.MediaType MediaTypeObject.reverseMediaType (MediaTypeObject mediaTypeObject){
        MediaType mediaType = new MediaType();
        SchemaOb s;

        if (mediaTypeObject.get_impl_s() != null) {
        s = mediaTypeObject.get_impl_s();
        mediaType.setSchema(s.reverseSchema(s));
        }
        if (mediaTypeObject.getExample() != null)
        mediaType.setExample(mediaTypeObject.getExample());
        if (mediaTypeObject.getEList().size() != 0) {
        Map<String, Example> exampleMap = new HashMap<>();
        for (ExampleTuple t : mediaTypeObject.getEList())
        exampleMap.put(t.getKey(), ExampleObject.reverseExample(t.get_impl_o()));
        mediaType.setExamples(exampleMap);
        }
        if (mediaTypeObject.getEnList().size() != 0) {
        Map<String, io.swagger.v3.oas.models.media.Encoding> encodingMap = new HashMap<>();
        for (EncodingTuple t : mediaTypeObject.getEnList())
        encodingMap.put(t.getKey(), EncodingObject.reverseEncoding(t.get_impl_e()));
        mediaType.setEncoding(encodingMap);
        }

        return mediaType;
  }

  public static io.swagger.v3.oas.models.media.Encoding EncodingObject.reverseEncoding (EncodingObject encodingObject){
        io.swagger.v3.oas.models.media.Encoding encodingProperty = new io.swagger.v3.oas.models.media.Encoding();
        HeaderOb h;

        if (!encodingObject.getContentType().isEmpty())
        encodingProperty.setContentType(encodingObject.getContentType());
        if (encodingObject.get_impl_h().size() != 0) {
        Map<String, Header> headers = new HashMap<>();
        for (HeaderTuple t : encodingObject.get_impl_h()) {
        h = t.get_impl_o();
        headers.put(t.getKey(), h.reverseHeader(h));
        }
        encodingProperty.setHeaders(headers);
        }
        //if (!encodingObject.getStyle().isEmpty())
        //  encodingProperty.setStyle(Encoding.StyleEnum.valueOf());
        if (encodingObject.getExplode() != null)
        encodingProperty.setExplode(encodingObject.getExplode());
        if (encodingObject.getExList().size() != 0) {
        Map<String, Object> extensionMap = new HashMap<>();
        for (Extension e : encodingObject.getExList())
        extensionMap.put(e.getKey(), e.getValue());
        encodingProperty.setExtensions(extensionMap);
        }

        return encodingProperty;
  }

  syn ApiResponse ResponseOb.reverseResponse (ResponseOb responseOb);
  eq ResponseReference.reverseResponse (ResponseOb responseOb){
        ApiResponse response = new ApiResponse();
        ResponseReference r = (ResponseReference) responseOb;

        if (!r.getRef().isEmpty()) {
        response.set$ref(r.getRef());
        }

        return response;
  }
  eq ResponseObject.reverseResponse (ResponseOb responseOb){
        ApiResponse response = new ApiResponse();
        ResponseObject r = (ResponseObject) responseOb;

        if (!r.getDescription().isEmpty())
        response.setDescription(r.getDescription());
        if (r.get_impl_h().size() != 0) {
        Map<String, Header> headers = new HashMap<>();
        for (HeaderTuple t : r.get_impl_h())
        headers.put(t.getKey(), t.get_impl_o().reverseHeader(t.get_impl_o()));
        response.setHeaders(headers);
        }
        if (r.getCList().size() != 0) {
        io.swagger.v3.oas.models.media.Content contents = new io.swagger.v3.oas.models.media.Content();
        for (ContentTuple t : r.getCList())
        contents.put(t.getKey(), MediaTypeObject.reverseMediaType(t.get_impl_m()));
        response.setContent(contents);
        }
        if (r.get_impl_l().size() != 0) {
        Map<String, Link> links = new HashMap<>();
        for (LinkTuple t : r.get_impl_l())
        links.put(t.getKey(), t.get_impl_o().reverseLink(t.get_impl_o()));
        response.setLinks(links);
        }

        return response;
  }

  syn io.swagger.v3.oas.models.callbacks.Callback CallbackOb.reverseCallback (CallbackOb callbackOb);
  eq CallbackReference.reverseCallback (CallbackOb callbackOb) {
        io.swagger.v3.oas.models.callbacks.Callback callback = new io.swagger.v3.oas.models.callbacks.Callback();
        CallbackReference c = (CallbackReference) callbackOb;

        if (!c.getRef().isEmpty()) {
        callback.set$ref(c.getRef());
        }

        return callback;
  }
  eq CallbackObject.reverseCallback (CallbackOb callbackOb) {
        io.swagger.v3.oas.models.callbacks.Callback callback = new io.swagger.v3.oas.models.callbacks.Callback();
        CallbackObject c = (CallbackObject) callbackOb;

        if (c.getEList().size() != 0) {
        Map<String, Path> paths = new HashMap<>();
        PathItemOb p;
        for (Expression e : c.getEList())
        callback.addPathItem(e.getName(), e.get_impl_p().reversePath(e.get_impl_p()));
        }

        return callback;
  }

  public static Example ExampleObject.reverseExample (ExampleObject exampleObject){
        Example example = new Example();

        if (!exampleObject.getSummary().isEmpty())
        example.setSummary(exampleObject.getSummary());
        if (!exampleObject.getDescription().isEmpty())
        example.setDescription(exampleObject.getDescription());
        if (exampleObject.getValue() != null)
        example.setValue(exampleObject.getValue());
        if (!exampleObject.getExternalValue().isEmpty())
        example.setExternalValue(exampleObject.getExternalValue());
        if (exampleObject.getExList().size() != 0) {
        Map<String, Object> extension = new HashMap<>();
        for (Extension e : exampleObject.getExList())
        extension.put(e.getKey(), e.getValue());
        example.setExtensions(extension);
        }

        return example;
  }

  syn io.swagger.v3.oas.models.links.Link LinkOb.reverseLink (LinkOb linkOb);
  eq LinkReference.reverseLink (LinkOb linkOb){
        io.swagger.v3.oas.models.links.Link link = new io.swagger.v3.oas.models.links.Link();
        LinkReference l = (LinkReference) linkOb;

        if (!l.getRef().isEmpty())
        link.set$ref(l.getRef());

        return link;
  }
  eq LinkObject.reverseLink (LinkOb linkOb){
        io.swagger.v3.oas.models.links.Link link = new io.swagger.v3.oas.models.links.Link();
        LinkObject l = (LinkObject) linkOb;

        if (!l.getOperationRef().isEmpty())
        link.setOperationRef(l.getOperationRef());
        if (!l.getOperationID().isEmpty())
        link.setOperationId(l.getOperationID());
        if (l.get_impl_l().size() != 0) {
        Map<String, String> parameters = new HashMap<>();
        for (LinkParameterTuple t : l.get_impl_l())
        parameters.put(t.getKey(), t.getValue());
        link.setParameters(parameters);
        }
        if (!l.getDescription().isEmpty())
        link.setDescription(l.getDescription());
        if (l.hasS())
        link.setServer(ServerObject.reverseServer(l.get_impl_s()));
        if (l.getExList().size() != 0){
        for(Extension e : l.getExList())
        link.addExtension(e.getKey(), e.getValue());
        }

        return link;
  }

  syn io.swagger.v3.oas.models.headers.Header HeaderOb.reverseHeader (HeaderOb headerOb);
  eq HeaderReference.reverseHeader (HeaderOb headerOb) {
        io.swagger.v3.oas.models.headers.Header header = new io.swagger.v3.oas.models.headers.Header();
        HeaderReference h = new HeaderReference();

        if (!h.getRef().isEmpty()) {
        header.set$ref(h.getRef());
        }

        return header;
  }
  eq HeaderObject.reverseHeader (HeaderOb headerOb) {
        io.swagger.v3.oas.models.headers.Header header = new io.swagger.v3.oas.models.headers.Header();
        HeaderObject h = (HeaderObject) headerOb;

        if (h.getRequired() != null)
        header.setRequired(h.getRequired());
        if (!h.getDescription().isEmpty())
        header.setDescription(h.getDescription());
        if (!h.getStyle().isEmpty())
        header.setStyle(Header.StyleEnum.valueOf(h.getStyle()));
        if (h.getExplode() != null)
        header.setExplode(h.getExplode());
        //if (h.getAllowReserved() != null)
        //  header.setAllowReserved(h.getAllowReserved());
        if (h.getExample() != null)
        header.setExample(h.getExample());
        if (h.getEList().size() != 0) {
        Map<String, Example> examples = new HashMap<>();
        for (ExampleTuple t : h.getEList())
        examples.put(t.getKey(), ExampleObject.reverseExample(t.get_impl_o()));
        header.setExample(examples);
        }
        if (h.getCList().size() != 0) {
        io.swagger.v3.oas.models.media.Content contents = new io.swagger.v3.oas.models.media.Content();
        for (ContentTuple t : h.getCList())
        contents.put(t.getKey(), MediaTypeObject.reverseMediaType(t.get_impl_m()));
        header.setContent(contents);
        }
        if (h.hasS())
        header.setSchema(h.get_impl_s().reverseSchema(h.get_impl_s()));

        return header;
  }

  public static io.swagger.v3.oas.models.tags.Tag TagObject.reverseTag (TagObject tagObject){
        io.swagger.v3.oas.models.tags.Tag tag = new io.swagger.v3.oas.models.tags.Tag();

        tag.setName(tagObject.getName());

        if (!tagObject.getDescription().isEmpty())
        tag.setDescription(tagObject.getDescription());
        if (tagObject.hasE())
        tag.setExternalDocs(ExternalDocObject.reverseExternalDocs(tagObject.get_impl_e()));
        if (tagObject.getExList().size() != 0) {
        Map<String, Object> extensionMap = new HashMap<>();
        for (Extension e : tagObject.getExList())
        extensionMap.put(e.getKey(), e.getValue());
        tag.setExtensions(extensionMap);
        }

        return tag;
  }

  /*
  syn org.openapi4j.parser.model.v3.Schema SchemaOb.reverseSchema (SchemaOb schemaOb);
  eq SchemaReference.reverseSchema (SchemaOb schemaOb){
    org.openapi4j.parser.model.v3.Schema schema = new org.openapi4j.parser.model.v3.Schema();
    SchemaReference s = (SchemaReference) schemaOb;

    if (!s.getRef().isEmpty()) {
      try {
        schema.setReference(new org.openapi4j.core.model.v3.OAI3Context(new URL("")), new URL(""), s.getRef());
      } catch (Exception e) {
        e.printStackTrace();
      }
    }

    return schema;
  }
  eq SchemaObject.reverseSchema (SchemaOb schemaOb){
    org.openapi4j.parser.model.v3.Schema schema = new org.openapi4j.parser.model.v3.Schema();
    SchemaObject s = (SchemaObject) schemaOb;

    if (s.hasAdditionalProperties()) {
      SchemaOb o = s.getAdditionalProperties().getSchemaOb();
      if (o instanceof SchemaObject)
        schema.setAdditionalProperties(((SchemaObject) o).reverseSchema(o, map));
      else
        schema.setAdditionalProperties(((SchemaReference) o).reverseSchema(o, map));
    }
    if (s.getAdditionalPropertiesAllowed() != null)
      schema.setAdditionalPropertiesAllowed(s.getAdditionalPropertiesAllowed());
    if (s.getDefaultValue() != null)
      schema.setDefault(s.getDefaultValue());
    if (!s.getDescription().isEmpty())
      schema.setDescription(s.getDescription());
    if (s.getDeprecatedBoolean() != null)
      schema.setDeprecated(s.getDeprecatedBoolean());
    if (s.hasDiscriminatorObject())
      schema.setDiscriminator(DiscriminatorObject.reverseDiscriminator(s.getDiscriminatorObject(), map));
    if (s.getNumEnumObj() != 0) {
      for (EnumObj e : s.getEnumObjs())
        schema.addEnum(e.getEnumOb());
    }

    if (s.getExample() != null)
      schema.setExample(s.getExample());
    if (s.getExclusiveMaximum() != null)
      schema.setExclusiveMaximum(s.getExclusiveMaximum());
    if (s.getExclusiveMinimum() != null)
      schema.setExclusiveMinimum(s.getExclusiveMinimum());
    if (s.hasExternalDocObject())
      schema.setExternalDocs(ExternalDocObject.reverseExternalDocs(s.getExternalDocObject(), map));
    if (!s.getFormat().isEmpty())
      schema.setFormat(s.getFormat());
    if (s.hasItemsSchema()) {
      if (s.getItemsSchema().getSchemaOb() instanceof SchemaObject)
        schema.setItemsSchema(((SchemaObject) s.getItemsSchema().getSchemaOb()).reverseSchema(s.getItemsSchema().getSchemaOb(), map));
      else
        schema.setItemsSchema(((SchemaReference) s.getItemsSchema().getSchemaOb()).reverseSchema(s.getItemsSchema().getSchemaOb(), map));
    }
    if (s.getMaximum() != null)
      schema.setMaximum(s.getMaximum());
    if (s.getMinimum() != null)
      schema.setMinimum(s.getMinimum());
    if (s.getMaxItems() != null)
      schema.setMaxItems(s.getMaxItems());
    if (s.getMinItems() != null)
      schema.setMinItems(s.getMinItems());
    if (s.getMaxLength() != null)
      schema.setMaxLength(s.getMaxLength());
    if (s.getMinLength() != null)
      schema.setMinLength(s.getMinLength());
    if (s.getMaxProperties() != null)
      schema.setMaxProperties(s.getMaxProperties());
    if (s.getMinProperties() != null)
      schema.setMinProperties(s.getMinProperties());
    if (s.getMultipleOf() != null)
      schema.setMultipleOf(s.getMultipleOf());
    if (s.hasNotSchema()) {
      if (s.getNotSchema().getSchemaOb() instanceof SchemaObject)
        schema.setNotSchema(((SchemaObject) s.getNotSchema().getSchemaOb()).reverseSchema(s.getNotSchema().getSchemaOb(), map));
      else
        schema.setNotSchema(((SchemaReference) s.getNotSchema().getSchemaOb()).reverseSchema(s.getNotSchema().getSchemaOb(), map));
    }
    if (s.getNullable() != null)
      schema.setNullable(s.getNullable());
    if (!s.getPattern().isEmpty())
      schema.setPattern(s.getPattern());
    if (s.getNumPropertyItem() != 0) {
      Map<String, org.openapi4j.parser.model.v3.Schema> properties = new HashMap<>();
      for (PropertyItem p : s.getPropertyItemList()) {
        if (p.getSchemaOb() instanceof SchemaObject)
          properties.put(p.getName(), ((SchemaObject) p.getSchemaOb()).reverseSchema(p.getSchemaOb(), map));
        else
          properties.put(p.getName(), ((SchemaReference) p.getSchemaOb()).reverseSchema(p.getSchemaOb(), map));
      }
      schema.setProperties(properties);
    }
    if (s.getNumRequiredField() != 0) {
      for (RequiredField r : s.getRequiredFields())
        schema.addRequiredField(r.getValue());
    }
    if (s.getNumAllOfSchema() != 0) {
      for (AllOfSchema a : s.getAllOfSchemas()) {
        if (a.getSchemaOb() instanceof SchemaObject)
          schema.addAllOfSchema(((SchemaObject) a.getSchemaOb()).reverseSchema(a.getSchemaOb(), map));
        else
          schema.addAllOfSchema(((SchemaReference) a.getSchemaOb()).reverseSchema(a.getSchemaOb(), map));
      }
    }
    if (s.getNumAnyOfSchema() != 0) {
      for (AnyOfSchema a : s.getAnyOfSchemas()) {
        if (a.getSchemaOb() instanceof SchemaObject)
          schema.addAnyOfSchema(((SchemaObject) a.getSchemaOb()).reverseSchema(a.getSchemaOb(), map));
        else
          schema.addAnyOfSchema(((SchemaReference) a.getSchemaOb()).reverseSchema(a.getSchemaOb(), map));
      }
    }
    if (s.getNumOneOfSchema() != 0) {
      for (OneOfSchema o : s.getOneOfSchemas()) {
        if (o.getSchemaOb() instanceof SchemaObject)
          schema.addOneOfSchema(((SchemaObject) o.getSchemaOb()).reverseSchema(o.getSchemaOb(), map));
        else
          schema.addOneOfSchema(((SchemaReference) o.getSchemaOb()).reverseSchema(o.getSchemaOb(), map));
      }
    }
    if (s.getReadOnly() != null)
      schema.setReadOnly(s.getReadOnly());
    if (s.getWriteOnly() != null)
      schema.setWriteOnly(s.getWriteOnly());
    if (!s.getType().isEmpty())
      schema.setType(s.getType());
    if (!s.getTitle().isEmpty())
      schema.setTitle(s.getTitle());
    if (s.getUniqueItems() != null)
      schema.setUniqueItems(s.getUniqueItems());
    if (s.hasXmlObject())
      schema.setXml(XmlObject.reverseXml(s.getXmlObject(), map));
    if (s.getNumExtension() != 0) {
      Map<String, Object> extensionMap = new HashMap<>();
      for (Extension e : s.getExtensions())
        extensionMap.put(e.getKey(), e.getValue());
      schema.setExtensions(extensionMap);
    }

    return schema;
  }
   */

  public static io.swagger.v3.oas.models.media.Discriminator DiscriminatorObject.reverseDiscriminator (DiscriminatorObject discriminatorObject) {
        io.swagger.v3.oas.models.media.Discriminator discriminator = new io.swagger.v3.oas.models.media.Discriminator();

        if (!discriminatorObject.getPropertyName().isEmpty())
        discriminator.setPropertyName(discriminatorObject.getPropertyName());
        if (discriminatorObject.get_impl_m().size() != 0) {
        Map<String, String> mapping = new HashMap<>();
        for (MappingTuple m : discriminatorObject.get_impl_m())
        mapping.put(m.getKey(), m.getValue());
        discriminator.setMapping(mapping);
        }

        return discriminator;
  }

  public static io.swagger.v3.oas.models.media.XML XmlObject.reverseXml (XmlObject xmlObject) {
        io.swagger.v3.oas.models.media.XML xml = new io.swagger.v3.oas.models.media.XML();

        if (!xmlObject.getName().isEmpty())
        xml.setName(xmlObject.getName());
        if (!xmlObject.getNamespace().isEmpty())
        xml.setNamespace(xmlObject.getNamespace());
        if (!xmlObject.getPrefix().isEmpty())
        xml.setPrefix(xmlObject.getPrefix());
        if (xmlObject.getAttribute() != null)
        xml.setAttribute(xmlObject.getAttribute());
        if (xmlObject.getWrapped() != null)
        xml.setWrapped(xmlObject.getWrapped());

        return xml;
  }

  syn io.swagger.v3.oas.models.security.SecurityScheme SecuritySchemeOb.reverseSecurityScheme (SecuritySchemeOb securitySchemeOb);
  eq SecuritySchemeReference.reverseSecurityScheme (SecuritySchemeOb securitySchemeOb){
        io.swagger.v3.oas.models.security.SecurityScheme securityScheme = new io.swagger.v3.oas.models.security.SecurityScheme();
        SecuritySchemeReference s = (SecuritySchemeReference) securitySchemeOb;

        if (!s.getRef().isEmpty()) {securityScheme.set$ref(s.getRef());
        }

        return securityScheme;
  }
  eq SecuritySchemeObject.reverseSecurityScheme (SecuritySchemeOb securitySchemeOb){
        io.swagger.v3.oas.models.security.SecurityScheme securityScheme = new io.swagger.v3.oas.models.security.SecurityScheme();
        SecuritySchemeObject s = (SecuritySchemeObject) securitySchemeOb;

        if (!s.getType().isEmpty())
        securityScheme.setType(SecurityScheme.Type.valueOf(s.getType()));
        if (!s.getName().isEmpty())
        securityScheme.setName(s.getName());
        if (!s.getIn().isEmpty())
        securityScheme.setIn(SecurityScheme.In.valueOf(s.getIn()));
        if (!s.getScheme().isEmpty())
        securityScheme.setScheme(s.getScheme());
        if (!s.getOpenIdConnectUrl().isEmpty())
        securityScheme.setOpenIdConnectUrl(s.getOpenIdConnectUrl());
        if (s.get_impl_o() != null)
        securityScheme.setFlows(OAuthFlowsObject.reverseOAuthFlows(s.get_impl_o()));
        if (!s.getDescription().isEmpty())
        securityScheme.setDescription(s.getDescription());
        if (!s.getBearerFormat().isEmpty())
        securityScheme.setBearerFormat(s.getBearerFormat());
        if (s.getExList().size() != 0) {
        Map<String, Object> extensionMap = new HashMap<>();
        for (Extension e : s.getExList())
        extensionMap.put(e.getKey(), e.getValue());
        securityScheme.setExtensions(extensionMap);
        }

        return securityScheme;
  }

  public static io.swagger.v3.oas.models.security.OAuthFlows OAuthFlowsObject.reverseOAuthFlows (OAuthFlowsObject oAuthFlowsObject){
        io.swagger.v3.oas.models.security.OAuthFlows oAuthFlows = new io.swagger.v3.oas.models.security.OAuthFlows();

        if (oAuthFlowsObject.hasI())
        oAuthFlows.setImplicit(OAuthFlowObject.reverseOAuthFlow(oAuthFlowsObject.get_impl_i().get_impl_o()));
        if (oAuthFlowsObject.hasP())
        oAuthFlows.setPassword(OAuthFlowObject.reverseOAuthFlow(oAuthFlowsObject.get_impl_p().get_impl_o()));
        if (oAuthFlowsObject.hasC())
        oAuthFlows.setClientCredentials(OAuthFlowObject.reverseOAuthFlow(oAuthFlowsObject.get_impl_c().get_impl_o()));
        if (oAuthFlowsObject.hasA())
        oAuthFlows.setAuthorizationCode(OAuthFlowObject.reverseOAuthFlow(oAuthFlowsObject.get_impl_a().get_impl_o()));

        return oAuthFlows;
  }

  public static io.swagger.v3.oas.models.security.OAuthFlow OAuthFlowObject.reverseOAuthFlow (OAuthFlowObject oAuthFlowObject){
        io.swagger.v3.oas.models.security.OAuthFlow oAuthFlow = new io.swagger.v3.oas.models.security.OAuthFlow();
        Scopes scopes = new Scopes();

        if (oAuthFlowObject.getAuthorizationUrl() != null)
        oAuthFlow.setAuthorizationUrl(oAuthFlowObject.getAuthorizationUrl());
        if (oAuthFlowObject.getTokenUrl() != null)
        oAuthFlow.setTokenUrl(oAuthFlowObject.getTokenUrl());
        for (ScopesTuple t : oAuthFlowObject.getSList())
        scopes.put(t.getScopesKey(), t.getScopesValue());
        oAuthFlow.setScopes(scopes);
        if (oAuthFlowObject.getRefreshUrl() != null)
        oAuthFlow.setRefreshUrl(oAuthFlowObject.getRefreshUrl());

        return oAuthFlow;
  }

  public static io.swagger.v3.oas.models.security.SecurityRequirement SecurityRequirementObject.reverseSecurityRequirement (SecurityRequirementObject securityRequirementObject){
        io.swagger.v3.oas.models.security.SecurityRequirement securityRequirement = new io.swagger.v3.oas.models.security.SecurityRequirement();

        if (securityRequirementObject.get_impl_t().size() != 0) {
        Map<String, List<String>> requirements = new HashMap<>();
        for (SecurityRequirementTuple t : securityRequirementObject.get_impl_t()) {
        List<String> values = new ArrayList<>();
        for (SecurityRequirementValue v : t.get_impl_v())
        values.add(v.getValue());
        securityRequirement.addList(t.getName(), values);
        }
        }

        return securityRequirement;
}