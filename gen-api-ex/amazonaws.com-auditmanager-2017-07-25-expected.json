{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "mike.ralphson@gmail.com",
      "name" : "Mike Ralphson",
      "url" : "https://github.com/mermade/aws2openapi",
      "x-twitter" : "PermittedSoc"
    },
    "description" : "<p>Welcome to the Audit Manager API reference. This guide is for developers who need detailed information about the Audit Manager API operations, data types, and errors. </p> <p>Audit Manager is a service that provides automated evidence collection so that you can continuously audit your Amazon Web Services usage, and assess the effectiveness of your controls to better manage risk and simplify compliance.</p> <p>Audit Manager provides pre-built frameworks that structure and automate assessments for a given compliance standard. Frameworks include a pre-built collection of controls with descriptions and testing procedures, which are grouped according to the requirements of the specified compliance standard or regulation. You can also customize frameworks and controls to support internal audits with unique requirements. </p> <p>Use the following links to get started with the Audit Manager API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Audit Manager API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Audit Manager data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Audit Manager, we recommend that you review the <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html\"> Audit Manager User Guide</a>.</p>",
    "license" : {
      "name" : "Apache 2.0 License",
      "url" : "http://www.apache.org/licenses/"
    },
    "termsOfService" : "https://aws.amazon.com/service-terms/",
    "title" : "AWS Audit Manager",
    "version" : "2017-07-25",
    "x-providerName" : "amazonaws.com",
    "x-logo" : {
      "url" : "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png",
      "backgroundColor" : "#FFFFFF"
    },
    "x-aws-signingName" : "auditmanager",
    "x-apiClientRegistration" : {
      "url" : "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-preferred" : true,
    "x-release" : "v4",
    "x-apisguru-categories" : [ "cloud" ],
    "x-serviceName" : "auditmanager",
    "x-origin" : [ {
      "contentType" : "application/json",
      "url" : "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/auditmanager-2017-07-25.normal.json",
      "converter" : {
        "url" : "https://github.com/mermade/aws2openapi",
        "version" : "1.0.0"
      },
      "x-apisguru-driver" : "external"
    } ]
  },
  "servers" : [ {
    "url" : "http://auditmanager.{region}.amazonaws.com",
    "description" : "The AWS Audit Manager multi-region endpoint",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "us-east-1",
        "enum" : [ "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-west-1", "us-gov-east-1", "ca-central-1", "eu-north-1", "eu-west-1", "eu-west-2", "eu-west-3", "eu-central-1", "eu-south-1", "af-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ap-east-1", "ap-south-1", "sa-east-1", "me-south-1" ]
      }
    }
  }, {
    "url" : "https://auditmanager.{region}.amazonaws.com",
    "description" : "The AWS Audit Manager multi-region endpoint",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "us-east-1",
        "enum" : [ "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-west-1", "us-gov-east-1", "ca-central-1", "eu-north-1", "eu-west-1", "eu-west-2", "eu-west-3", "eu-central-1", "eu-south-1", "af-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ap-east-1", "ap-south-1", "sa-east-1", "me-south-1" ]
      }
    }
  }, {
    "url" : "http://auditmanager.{region}.amazonaws.com.cn",
    "description" : "The AWS Audit Manager endpoint for China (Beijing) and China (Ningxia)",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "cn-north-1",
        "enum" : [ "cn-north-1", "cn-northwest-1" ]
      }
    }
  }, {
    "url" : "https://auditmanager.{region}.amazonaws.com.cn",
    "description" : "The AWS Audit Manager endpoint for China (Beijing) and China (Ningxia)",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "cn-north-1",
        "enum" : [ "cn-north-1", "cn-northwest-1" ]
      }
    }
  } ],
  "paths" : {
    "/assessments/{assessmentId}/associateToAssessmentReport" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "put" : {
        "description" : " Associates an evidence folder to the specified assessment report in Audit Manager. ",
        "operationId" : "AssociateAssessmentReportEvidenceFolder",
        "parameters" : [ {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "evidenceFolderId" : {
                    "description" : " The identifier for the folder in which evidence is stored. ",
                    "maxLength" : 36,
                    "minLength" : 36,
                    "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "evidenceFolderId" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociateAssessmentReportEvidenceFolderResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          }
        }
      }
    },
    "/assessments/{assessmentId}/batchAssociateToAssessmentReport" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "put" : {
        "description" : " Associates a list of evidence to an assessment report in an Audit Manager assessment. ",
        "operationId" : "BatchAssociateAssessmentReportEvidence",
        "parameters" : [ {
          "description" : " The unique identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "evidenceFolderId" : {
                    "description" : " The identifier for the folder in which the evidence is stored. ",
                    "maxLength" : 36,
                    "minLength" : 36,
                    "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
                    "type" : "string"
                  },
                  "evidenceIds" : {
                    "description" : " The list of evidence identifiers. ",
                    "maxItems" : 50,
                    "minItems" : 0,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/UUID"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "evidenceFolderId", "evidenceIds" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchAssociateAssessmentReportEvidenceResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          }
        }
      }
    },
    "/assessments/{assessmentId}/delegations" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "put" : {
        "description" : " Deletes the delegations in the specified Audit Manager assessment. ",
        "operationId" : "BatchDeleteDelegationByAssessment",
        "parameters" : [ {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "delegationIds" : {
                    "description" : " The identifiers for the specified delegations. ",
                    "maxItems" : 50,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/UUID"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "delegationIds" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchDeleteDelegationByAssessmentResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : " Create a batch of delegations for a specified assessment in Audit Manager. ",
        "operationId" : "BatchCreateDelegationByAssessment",
        "parameters" : [ {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "createDelegationRequests" : {
                    "description" : " The API request to batch create delegations in Audit Manager. ",
                    "maxItems" : 50,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/CreateDelegationRequest"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "createDelegationRequests" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchCreateDelegationByAssessmentResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/assessments/{assessmentId}/batchDisassociateFromAssessmentReport" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "put" : {
        "description" : " Disassociates a list of evidence from the specified assessment report in Audit Manager. ",
        "operationId" : "BatchDisassociateAssessmentReportEvidence",
        "parameters" : [ {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "evidenceFolderId" : {
                    "description" : " The identifier for the folder in which evidence is stored. ",
                    "maxLength" : 36,
                    "minLength" : 36,
                    "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
                    "type" : "string"
                  },
                  "evidenceIds" : {
                    "description" : " The list of evidence identifiers. ",
                    "maxItems" : 50,
                    "minItems" : 0,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/UUID"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "evidenceFolderId", "evidenceIds" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchDisassociateAssessmentReportEvidenceResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          }
        }
      }
    },
    "/assessments/{assessmentId}/controlSets/{controlSetId}/controls/{controlId}/evidence" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : " Uploads one or more pieces of evidence to the specified control in the assessment in Audit Manager. ",
        "operationId" : "BatchImportEvidenceToAssessmentControl",
        "parameters" : [ {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        }, {
          "description" : " The identifier for the specified control set. ",
          "required" : true,
          "schema" : {
            "maxLength" : 300,
            "minLength" : 1,
            "pattern" : "^[\\w\\W\\s\\S]*$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "controlSetId"
        }, {
          "description" : " The identifier for the specified control. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "controlId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "manualEvidence" : {
                    "description" : " The list of manual evidence objects. ",
                    "maxItems" : 50,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/ManualEvidence"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "manualEvidence" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchImportEvidenceToAssessmentControlResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/assessments" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns a list of current and past assessments from Audit Manager. ",
        "operationId" : "ListAssessments",
        "parameters" : [ {
          "description" : " The pagination token used to fetch the next set of results. ",
          "required" : false,
          "schema" : {
            "maxLength" : 1000,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9+\\/=]*$",
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : " Represents the maximum number of results per page, or per API request call. ",
          "required" : false,
          "schema" : {
            "description" : "Max results in the page.",
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListAssessmentsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : " Creates an assessment in Audit Manager. ",
        "operationId" : "CreateAssessment",
        "parameters" : [ ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "name" : {
                    "description" : " The name of the assessment to be created. ",
                    "maxLength" : 300,
                    "minLength" : 1,
                    "pattern" : "^[^\\\\]*$",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : " The optional description of the assessment to be created. ",
                    "maxLength" : 1000,
                    "pattern" : "^[\\w\\W\\s\\S]*$",
                    "type" : "string"
                  },
                  "assessmentReportsDestination" : {
                    "description" : " The location in which Audit Manager saves assessment reports for the given assessment. ",
                    "properties" : {
                      "destinationType" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/AssessmentReportDestinationType"
                        }, {
                          "description" : " The destination type, such as Amazon S3. "
                        } ]
                      },
                      "destination" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/S3Url"
                        }, {
                          "description" : " The destination of the assessment report. "
                        } ]
                      }
                    },
                    "type" : "object"
                  },
                  "scope" : {
                    "description" : " The wrapper that contains the accounts and services in scope for the assessment. ",
                    "properties" : {
                      "awsAccounts" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/AWSAccounts"
                        }, {
                          "description" : " The accounts included in the scope of the assessment. "
                        } ]
                      },
                      "awsServices" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/AWSServices"
                        }, {
                          "description" : " The Amazon Web Services services included in the scope of the assessment. "
                        } ]
                      }
                    },
                    "type" : "object"
                  },
                  "roles" : {
                    "description" : " The list of roles for the specified assessment. ",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Role"
                    }
                  },
                  "frameworkId" : {
                    "description" : " The identifier for the specified framework. ",
                    "maxLength" : 36,
                    "minLength" : 36,
                    "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
                    "type" : "string"
                  },
                  "tags" : {
                    "description" : " The tags associated with the assessment. ",
                    "maxProperties" : 50,
                    "minProperties" : 0,
                    "type" : "object",
                    "additionalProperties" : {
                      "$ref" : "#/components/schemas/TagValue"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "name", "assessmentReportsDestination", "scope", "roles", "frameworkId" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateAssessmentResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/assessmentFrameworks" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : " Creates a custom framework in Audit Manager. ",
        "operationId" : "CreateAssessmentFramework",
        "parameters" : [ ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "name" : {
                    "description" : " The name of the new custom framework. ",
                    "maxLength" : 300,
                    "minLength" : 1,
                    "pattern" : "^[^\\\\]*$",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : " An optional description for the new custom framework. ",
                    "maxLength" : 1000,
                    "minLength" : 1,
                    "pattern" : "^[\\w\\W\\s\\S]*$",
                    "type" : "string"
                  },
                  "complianceType" : {
                    "description" : " The compliance type that the new custom framework supports, such as CIS or HIPAA. ",
                    "maxLength" : 100,
                    "pattern" : "^[\\w\\W\\s\\S]*$",
                    "type" : "string"
                  },
                  "controlSets" : {
                    "description" : " The control sets to be associated with the framework. ",
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/CreateAssessmentFrameworkControlSet"
                    }
                  },
                  "tags" : {
                    "description" : " The tags associated with the framework. ",
                    "maxProperties" : 50,
                    "minProperties" : 0,
                    "type" : "object",
                    "additionalProperties" : {
                      "$ref" : "#/components/schemas/TagValue"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "name", "controlSets" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateAssessmentFrameworkResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/assessments/{assessmentId}/reports" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : " Creates an assessment report for the specified assessment. ",
        "operationId" : "CreateAssessmentReport",
        "parameters" : [ {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "name" : {
                    "description" : " The name of the new assessment report. ",
                    "maxLength" : 300,
                    "minLength" : 1,
                    "pattern" : "^[a-zA-Z0-9-_\\.]+$",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : " The description of the assessment report. ",
                    "maxLength" : 1000,
                    "pattern" : "^[\\w\\W\\s\\S]*$",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateAssessmentReportResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          }
        }
      }
    },
    "/controls" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : " Creates a new custom control in Audit Manager. ",
        "operationId" : "CreateControl",
        "parameters" : [ ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "name" : {
                    "description" : " The name of the control. ",
                    "maxLength" : 300,
                    "minLength" : 1,
                    "pattern" : "^[^\\\\]*$",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : " The description of the control. ",
                    "maxLength" : 1000,
                    "pattern" : "^[\\w\\W\\s\\S]*$",
                    "type" : "string"
                  },
                  "testingInformation" : {
                    "description" : " The steps to follow to determine if the control has been satisfied. ",
                    "maxLength" : 1000,
                    "pattern" : "^[\\w\\W\\s\\S]*$",
                    "type" : "string"
                  },
                  "actionPlanTitle" : {
                    "description" : " The title of the action plan for remediating the control. ",
                    "maxLength" : 300,
                    "pattern" : "^[\\w\\W\\s\\S]*$",
                    "type" : "string"
                  },
                  "actionPlanInstructions" : {
                    "description" : " The recommended actions to carry out if the control is not fulfilled. ",
                    "maxLength" : 1000,
                    "pattern" : "^[\\w\\W\\s\\S]*$",
                    "type" : "string"
                  },
                  "controlMappingSources" : {
                    "description" : " The data mapping sources for the specified control. ",
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/CreateControlMappingSource"
                    }
                  },
                  "tags" : {
                    "description" : " The tags associated with the control. ",
                    "maxProperties" : 50,
                    "minProperties" : 0,
                    "type" : "object",
                    "additionalProperties" : {
                      "$ref" : "#/components/schemas/TagValue"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "name", "controlMappingSources" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateControlResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/assessments/{assessmentId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns an assessment from Audit Manager. ",
        "operationId" : "GetAssessment",
        "parameters" : [ {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAssessmentResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : " Edits an Audit Manager assessment. ",
        "operationId" : "UpdateAssessment",
        "parameters" : [ {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "assessmentName" : {
                    "description" : " The name of the specified assessment to be updated. ",
                    "maxLength" : 300,
                    "minLength" : 1,
                    "pattern" : "^[^\\\\]*$",
                    "type" : "string"
                  },
                  "assessmentDescription" : {
                    "description" : " The description of the specified assessment. ",
                    "maxLength" : 1000,
                    "pattern" : "^[\\w\\W\\s\\S]*$",
                    "type" : "string"
                  },
                  "scope" : {
                    "description" : " The wrapper that contains the accounts and services in scope for the assessment. ",
                    "properties" : {
                      "awsAccounts" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/AWSAccounts"
                        }, {
                          "description" : " The accounts included in the scope of the assessment. "
                        } ]
                      },
                      "awsServices" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/AWSServices"
                        }, {
                          "description" : " The Amazon Web Services services included in the scope of the assessment. "
                        } ]
                      }
                    },
                    "type" : "object"
                  },
                  "assessmentReportsDestination" : {
                    "description" : " The location in which Audit Manager saves assessment reports for the given assessment. ",
                    "properties" : {
                      "destinationType" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/AssessmentReportDestinationType"
                        }, {
                          "description" : " The destination type, such as Amazon S3. "
                        } ]
                      },
                      "destination" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/S3Url"
                        }, {
                          "description" : " The destination of the assessment report. "
                        } ]
                      }
                    },
                    "type" : "object"
                  },
                  "roles" : {
                    "description" : " The list of roles for the specified assessment. ",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Role"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "scope" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateAssessmentResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : " Deletes an assessment in Audit Manager. ",
        "operationId" : "DeleteAssessment",
        "parameters" : [ {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteAssessmentResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/assessmentFrameworks/{frameworkId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns a framework from Audit Manager. ",
        "operationId" : "GetAssessmentFramework",
        "parameters" : [ {
          "description" : " The identifier for the specified framework. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "frameworkId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAssessmentFrameworkResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : " Updates a custom framework in Audit Manager. ",
        "operationId" : "UpdateAssessmentFramework",
        "parameters" : [ {
          "description" : " The identifier for the specified framework. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "frameworkId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "name" : {
                    "description" : " The name of the framework to be updated. ",
                    "maxLength" : 300,
                    "minLength" : 1,
                    "pattern" : "^[^\\\\]*$",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : " The description of the framework that is to be updated. ",
                    "maxLength" : 1000,
                    "minLength" : 1,
                    "pattern" : "^[\\w\\W\\s\\S]*$",
                    "type" : "string"
                  },
                  "complianceType" : {
                    "description" : " The compliance type that the new custom framework supports, such as CIS or HIPAA. ",
                    "maxLength" : 100,
                    "pattern" : "^[\\w\\W\\s\\S]*$",
                    "type" : "string"
                  },
                  "controlSets" : {
                    "description" : " The control sets associated with the framework. ",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/UpdateAssessmentFrameworkControlSet"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "name", "controlSets" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateAssessmentFrameworkResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : " Deletes a custom framework in Audit Manager. ",
        "operationId" : "DeleteAssessmentFramework",
        "parameters" : [ {
          "description" : " The identifier for the specified framework. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "frameworkId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteAssessmentFrameworkResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/assessments/{assessmentId}/reports/{assessmentReportId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "delete" : {
        "description" : " Deletes an assessment report from an assessment in Audit Manager. ",
        "operationId" : "DeleteAssessmentReport",
        "parameters" : [ {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        }, {
          "description" : " The unique identifier for the assessment report. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentReportId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteAssessmentReportResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          }
        }
      }
    },
    "/controls/{controlId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns a control from Audit Manager. ",
        "operationId" : "GetControl",
        "parameters" : [ {
          "description" : " The identifier for the specified control. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "controlId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetControlResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : " Updates a custom control in Audit Manager. ",
        "operationId" : "UpdateControl",
        "parameters" : [ {
          "description" : " The identifier for the specified control. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "controlId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "name" : {
                    "description" : " The name of the control to be updated. ",
                    "maxLength" : 300,
                    "minLength" : 1,
                    "pattern" : "^[^\\\\]*$",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : " The optional description of the control. ",
                    "maxLength" : 1000,
                    "pattern" : "^[\\w\\W\\s\\S]*$",
                    "type" : "string"
                  },
                  "testingInformation" : {
                    "description" : " The steps that to follow to determine if the control has been satisfied. ",
                    "maxLength" : 1000,
                    "pattern" : "^[\\w\\W\\s\\S]*$",
                    "type" : "string"
                  },
                  "actionPlanTitle" : {
                    "description" : " The title of the action plan for remediating the control. ",
                    "maxLength" : 300,
                    "pattern" : "^[\\w\\W\\s\\S]*$",
                    "type" : "string"
                  },
                  "actionPlanInstructions" : {
                    "description" : " The recommended actions to carry out if the control is not fulfilled. ",
                    "maxLength" : 1000,
                    "pattern" : "^[\\w\\W\\s\\S]*$",
                    "type" : "string"
                  },
                  "controlMappingSources" : {
                    "description" : " The data mapping sources for the specified control. ",
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/ControlMappingSource"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "name", "controlMappingSources" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateControlResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : " Deletes a custom control in Audit Manager. ",
        "operationId" : "DeleteControl",
        "parameters" : [ {
          "description" : " The identifier for the specified control. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "controlId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteControlResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/account/deregisterAccount" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : " Deregisters an account in Audit Manager. ",
        "operationId" : "DeregisterAccount",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeregisterAccountResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          }
        }
      }
    },
    "/account/deregisterOrganizationAdminAccount" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "<p>Removes the specified member account as a delegated administrator for Audit Manager. </p> <important> <p>When you remove a delegated administrator from your Audit Manager settings, or when you deregister a delegated administrator from Organizations, you continue to have access to the evidence that you previously collected under that account. However, Audit Manager will stop collecting and attaching evidence to that delegated administrator account moving forward.</p> </important>",
        "operationId" : "DeregisterOrganizationAdminAccount",
        "parameters" : [ ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "adminAccountId" : {
                    "description" : " The identifier for the specified administrator account. ",
                    "maxLength" : 12,
                    "minLength" : 12,
                    "pattern" : "^[0-9]{12}$",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeregisterOrganizationAdminAccountResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          }
        }
      }
    },
    "/assessments/{assessmentId}/disassociateFromAssessmentReport" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "put" : {
        "description" : " Disassociates an evidence folder from the specified assessment report in Audit Manager. ",
        "operationId" : "DisassociateAssessmentReportEvidenceFolder",
        "parameters" : [ {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "evidenceFolderId" : {
                    "description" : " The identifier for the folder in which evidence is stored. ",
                    "maxLength" : 36,
                    "minLength" : 36,
                    "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "evidenceFolderId" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DisassociateAssessmentReportEvidenceFolderResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          }
        }
      }
    },
    "/account/status" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns the registration status of an account in Audit Manager. ",
        "operationId" : "GetAccountStatus",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAccountStatusResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/assessments/{assessmentId}/reports/{assessmentReportId}/url" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns the URL of a specified assessment report in Audit Manager. ",
        "operationId" : "GetAssessmentReportUrl",
        "parameters" : [ {
          "description" : " The identifier for the assessment report. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentReportId"
        }, {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAssessmentReportUrlResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          }
        }
      }
    },
    "/assessments/{assessmentId}/changelogs" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns a list of changelogs from Audit Manager. ",
        "operationId" : "GetChangeLogs",
        "parameters" : [ {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        }, {
          "description" : " The identifier for the specified control set. ",
          "required" : false,
          "schema" : {
            "maxLength" : 300,
            "minLength" : 1,
            "pattern" : "^[\\w\\W\\s\\S]*$",
            "type" : "string"
          },
          "in" : "query",
          "name" : "controlSetId"
        }, {
          "description" : " The identifier for the specified control. ",
          "required" : false,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "query",
          "name" : "controlId"
        }, {
          "description" : " The pagination token used to fetch the next set of results. ",
          "required" : false,
          "schema" : {
            "maxLength" : 1000,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9+\\/=]*$",
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : " Represents the maximum number of results per page, or per API request call. ",
          "required" : false,
          "schema" : {
            "description" : "Max results in the page.",
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetChangeLogsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/delegations" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns a list of delegations from an audit owner to a delegate. ",
        "operationId" : "GetDelegations",
        "parameters" : [ {
          "description" : " The pagination token used to fetch the next set of results. ",
          "required" : false,
          "schema" : {
            "maxLength" : 1000,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9+\\/=]*$",
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : " Represents the maximum number of results per page, or per API request call. ",
          "required" : false,
          "schema" : {
            "description" : "Max results in the page.",
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetDelegationsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/assessments/{assessmentId}/controlSets/{controlSetId}/evidenceFolders/{evidenceFolderId}/evidence/{evidenceId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns evidence from Audit Manager. ",
        "operationId" : "GetEvidence",
        "parameters" : [ {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        }, {
          "description" : " The identifier for the specified control set. ",
          "required" : true,
          "schema" : {
            "maxLength" : 300,
            "minLength" : 1,
            "pattern" : "^[\\w\\W\\s\\S]*$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "controlSetId"
        }, {
          "description" : " The identifier for the folder in which the evidence is stored. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "evidenceFolderId"
        }, {
          "description" : " The identifier for the evidence. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "evidenceId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetEvidenceResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/assessments/{assessmentId}/controlSets/{controlSetId}/evidenceFolders/{evidenceFolderId}/evidence" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns all evidence from a specified evidence folder in Audit Manager. ",
        "operationId" : "GetEvidenceByEvidenceFolder",
        "parameters" : [ {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        }, {
          "description" : " The identifier for the control set. ",
          "required" : true,
          "schema" : {
            "maxLength" : 300,
            "minLength" : 1,
            "pattern" : "^[\\w\\W\\s\\S]*$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "controlSetId"
        }, {
          "description" : " The unique identifier for the folder in which the evidence is stored. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "evidenceFolderId"
        }, {
          "description" : " The pagination token used to fetch the next set of results. ",
          "required" : false,
          "schema" : {
            "maxLength" : 1000,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9+\\/=]*$",
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : " Represents the maximum number of results per page, or per API request call. ",
          "required" : false,
          "schema" : {
            "description" : "Max results in the page.",
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetEvidenceByEvidenceFolderResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/assessments/{assessmentId}/controlSets/{controlSetId}/evidenceFolders/{evidenceFolderId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns an evidence folder from the specified assessment in Audit Manager. ",
        "operationId" : "GetEvidenceFolder",
        "parameters" : [ {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        }, {
          "description" : " The identifier for the specified control set. ",
          "required" : true,
          "schema" : {
            "maxLength" : 300,
            "minLength" : 1,
            "pattern" : "^[\\w\\W\\s\\S]*$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "controlSetId"
        }, {
          "description" : " The identifier for the folder in which the evidence is stored. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "evidenceFolderId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetEvidenceFolderResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/assessments/{assessmentId}/evidenceFolders" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns the evidence folders from a specified assessment in Audit Manager. ",
        "operationId" : "GetEvidenceFoldersByAssessment",
        "parameters" : [ {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        }, {
          "description" : " The pagination token used to fetch the next set of results. ",
          "required" : false,
          "schema" : {
            "maxLength" : 1000,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9+\\/=]*$",
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : " Represents the maximum number of results per page, or per API request call. ",
          "required" : false,
          "schema" : {
            "description" : "Max results in the page.",
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetEvidenceFoldersByAssessmentResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/assessments/{assessmentId}/evidenceFolders-by-assessment-control/{controlSetId}/{controlId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns a list of evidence folders associated with a specified control of an assessment in Audit Manager. ",
        "operationId" : "GetEvidenceFoldersByAssessmentControl",
        "parameters" : [ {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        }, {
          "description" : " The identifier for the specified control set. ",
          "required" : true,
          "schema" : {
            "maxLength" : 300,
            "minLength" : 1,
            "pattern" : "^[\\w\\W\\s\\S]*$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "controlSetId"
        }, {
          "description" : " The identifier for the specified control. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "controlId"
        }, {
          "description" : " The pagination token used to fetch the next set of results. ",
          "required" : false,
          "schema" : {
            "maxLength" : 1000,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9+\\/=]*$",
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : " Represents the maximum number of results per page, or per API request call. ",
          "required" : false,
          "schema" : {
            "description" : "Max results in the page.",
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetEvidenceFoldersByAssessmentControlResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/account/organizationAdminAccount" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns the name of the delegated Amazon Web Services administrator account for the organization. ",
        "operationId" : "GetOrganizationAdminAccount",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetOrganizationAdminAccountResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          }
        }
      }
    },
    "/services" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns a list of the in-scope Amazon Web Services services for the specified assessment. ",
        "operationId" : "GetServicesInScope",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetServicesInScopeResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/settings/{attribute}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns the settings for the specified account. ",
        "operationId" : "GetSettings",
        "parameters" : [ {
          "description" : " The list of <code>SettingAttribute</code> enum values. ",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ALL", "IS_AWS_ORG_ENABLED", "SNS_TOPIC", "DEFAULT_ASSESSMENT_REPORTS_DESTINATION", "DEFAULT_PROCESS_OWNERS" ]
          },
          "in" : "path",
          "name" : "attribute"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetSettingsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/assessmentFrameworks#frameworkType" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns a list of the frameworks available in the Audit Manager framework library. ",
        "operationId" : "ListAssessmentFrameworks",
        "parameters" : [ {
          "description" : " The type of framework, such as standard or custom. ",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Standard", "Custom" ]
          },
          "in" : "query",
          "name" : "frameworkType"
        }, {
          "description" : " The pagination token used to fetch the next set of results. ",
          "required" : false,
          "schema" : {
            "maxLength" : 1000,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9+\\/=]*$",
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : " Represents the maximum number of results per page, or per API request call. ",
          "required" : false,
          "schema" : {
            "description" : "Max results in the page.",
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListAssessmentFrameworksResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/assessmentReports" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns a list of assessment reports created in Audit Manager. ",
        "operationId" : "ListAssessmentReports",
        "parameters" : [ {
          "description" : " The pagination token used to fetch the next set of results. ",
          "required" : false,
          "schema" : {
            "maxLength" : 1000,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9+\\/=]*$",
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : " Represents the maximum number of results per page, or per API request call. ",
          "required" : false,
          "schema" : {
            "description" : "Max results in the page.",
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListAssessmentReportsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/controls#controlType" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns a list of controls from Audit Manager. ",
        "operationId" : "ListControls",
        "parameters" : [ {
          "description" : " The type of control, such as standard or custom. ",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Standard", "Custom" ]
          },
          "in" : "query",
          "name" : "controlType"
        }, {
          "description" : " The pagination token used to fetch the next set of results. ",
          "required" : false,
          "schema" : {
            "maxLength" : 1000,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9+\\/=]*$",
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : " Represents the maximum number of results per page, or per API request call. ",
          "required" : false,
          "schema" : {
            "description" : "Max results in the page.",
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListControlsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/dataSourceKeywords#source" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns a list of keywords that pre-mapped to the specified control data source. ",
        "operationId" : "ListKeywordsForDataSource",
        "parameters" : [ {
          "description" : " The control mapping data source to which the keywords apply. ",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "AWS_Cloudtrail", "AWS_Config", "AWS_Security_Hub", "AWS_API_Call", "MANUAL" ]
          },
          "in" : "query",
          "name" : "source"
        }, {
          "description" : " The pagination token used to fetch the next set of results. ",
          "required" : false,
          "schema" : {
            "maxLength" : 1000,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9+\\/=]*$",
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : " Represents the maximum number of results per page, or per API request call. ",
          "required" : false,
          "schema" : {
            "description" : "Max results in the page.",
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListKeywordsForDataSourceResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/notifications" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns a list of all Audit Manager notifications. ",
        "operationId" : "ListNotifications",
        "parameters" : [ {
          "description" : " The pagination token used to fetch the next set of results. ",
          "required" : false,
          "schema" : {
            "maxLength" : 1000,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9+\\/=]*$",
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : " Represents the maximum number of results per page, or per API request call. ",
          "required" : false,
          "schema" : {
            "description" : "Max results in the page.",
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListNotificationsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/tags/{resourceArn}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns a list of tags for the specified resource in Audit Manager. ",
        "operationId" : "ListTagsForResource",
        "parameters" : [ {
          "description" : " The Amazon Resource Name (ARN) of the specified resource. ",
          "required" : true,
          "schema" : {
            "maxLength" : 2048,
            "minLength" : 20,
            "pattern" : "^arn:.*:auditmanager:.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "resourceArn"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListTagsForResourceResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : " Tags the specified resource in Audit Manager. ",
        "operationId" : "TagResource",
        "parameters" : [ {
          "description" : " The Amazon Resource Name (ARN) of the specified resource. ",
          "required" : true,
          "schema" : {
            "maxLength" : 2048,
            "minLength" : 20,
            "pattern" : "^arn:.*:auditmanager:.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "resourceArn"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "tags" : {
                    "description" : " The tags to be associated with the resource. ",
                    "maxProperties" : 50,
                    "minProperties" : 0,
                    "type" : "object",
                    "additionalProperties" : {
                      "$ref" : "#/components/schemas/TagValue"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "tags" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TagResourceResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          }
        }
      }
    },
    "/account/registerAccount" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : " Enables Audit Manager for the specified account. ",
        "operationId" : "RegisterAccount",
        "parameters" : [ ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "kmsKey" : {
                    "description" : " The KMS key details. ",
                    "maxLength" : 2048,
                    "minLength" : 7,
                    "pattern" : "^arn:.*:kms:.*|DEFAULT",
                    "type" : "string"
                  },
                  "delegatedAdminAccount" : {
                    "description" : " The delegated administrator account for Audit Manager. ",
                    "maxLength" : 12,
                    "minLength" : 12,
                    "pattern" : "^[0-9]{12}$",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegisterAccountResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          }
        }
      }
    },
    "/account/registerOrganizationAdminAccount" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : " Enables an account within the organization as the delegated administrator for Audit Manager. ",
        "operationId" : "RegisterOrganizationAdminAccount",
        "parameters" : [ ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "adminAccountId" : {
                    "description" : " The identifier for the specified delegated administrator account. ",
                    "maxLength" : 12,
                    "minLength" : 12,
                    "pattern" : "^[0-9]{12}$",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "adminAccountId" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegisterOrganizationAdminAccountResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          }
        }
      }
    },
    "/tags/{resourceArn}#tagKeys" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "delete" : {
        "description" : " Removes a tag from a resource in Audit Manager. ",
        "operationId" : "UntagResource",
        "parameters" : [ {
          "description" : " The Amazon Resource Name (ARN) of the specified resource. ",
          "required" : true,
          "schema" : {
            "maxLength" : 2048,
            "minLength" : 20,
            "pattern" : "^arn:.*:auditmanager:.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "resourceArn"
        }, {
          "description" : " The name or key of the tag. ",
          "required" : true,
          "schema" : {
            "maxItems" : 50,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TagKey"
            }
          },
          "in" : "query",
          "name" : "tagKeys"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UntagResourceResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          }
        }
      }
    },
    "/assessments/{assessmentId}/controlSets/{controlSetId}/controls/{controlId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "put" : {
        "description" : " Updates a control within an assessment in Audit Manager. ",
        "operationId" : "UpdateAssessmentControl",
        "parameters" : [ {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        }, {
          "description" : " The identifier for the specified control set. ",
          "required" : true,
          "schema" : {
            "maxLength" : 300,
            "minLength" : 1,
            "pattern" : "^[\\w\\W\\s\\S]*$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "controlSetId"
        }, {
          "description" : " The identifier for the specified control. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "controlId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "controlStatus" : {
                    "description" : " The status of the specified control. ",
                    "type" : "string",
                    "enum" : [ "UNDER_REVIEW", "REVIEWED", "INACTIVE" ]
                  },
                  "commentBody" : {
                    "description" : " The comment body text for the specified control. ",
                    "maxLength" : 500,
                    "pattern" : "^[\\w\\W\\s\\S]*$",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateAssessmentControlResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/assessments/{assessmentId}/controlSets/{controlSetId}/status" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "put" : {
        "description" : " Updates the status of a control set in an Audit Manager assessment. ",
        "operationId" : "UpdateAssessmentControlSetStatus",
        "parameters" : [ {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        }, {
          "description" : " The identifier for the specified control set. ",
          "required" : true,
          "schema" : {
            "maxLength" : 2048,
            "minLength" : 0,
            "pattern" : ".*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "controlSetId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "status" : {
                    "description" : " The status of the control set that is being updated. ",
                    "type" : "string",
                    "enum" : [ "ACTIVE", "UNDER_REVIEW", "REVIEWED" ]
                  },
                  "comment" : {
                    "description" : " The comment related to the status update. ",
                    "maxLength" : 350,
                    "pattern" : "^[\\w\\W\\s\\S]*$",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "status", "comment" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateAssessmentControlSetStatusResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/assessments/{assessmentId}/status" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "put" : {
        "description" : " Updates the status of an assessment in Audit Manager. ",
        "operationId" : "UpdateAssessmentStatus",
        "parameters" : [ {
          "description" : " The identifier for the specified assessment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 36,
            "minLength" : 36,
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "type" : "string"
          },
          "in" : "path",
          "name" : "assessmentId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "status" : {
                    "description" : " The current status of the specified assessment. ",
                    "type" : "string",
                    "enum" : [ "ACTIVE", "INACTIVE" ]
                  }
                },
                "type" : "object",
                "required" : [ "status" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateAssessmentStatusResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/settings" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "put" : {
        "description" : " Updates Audit Manager settings for the current user account. ",
        "operationId" : "UpdateSettings",
        "parameters" : [ ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "snsTopic" : {
                    "description" : " The Amazon Simple Notification Service (Amazon SNS) topic to which Audit Manager sends notifications. ",
                    "maxLength" : 2048,
                    "minLength" : 20,
                    "pattern" : "^arn:.*:sns:.*",
                    "type" : "string"
                  },
                  "defaultAssessmentReportsDestination" : {
                    "description" : " The location in which Audit Manager saves assessment reports for the given assessment. ",
                    "properties" : {
                      "destinationType" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/AssessmentReportDestinationType"
                        }, {
                          "description" : " The destination type, such as Amazon S3. "
                        } ]
                      },
                      "destination" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/S3Url"
                        }, {
                          "description" : " The destination of the assessment report. "
                        } ]
                      }
                    },
                    "type" : "object"
                  },
                  "defaultProcessOwners" : {
                    "description" : " A list of the default audit owners. ",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Role"
                    }
                  },
                  "kmsKey" : {
                    "description" : " The KMS key details. ",
                    "maxLength" : 2048,
                    "minLength" : 7,
                    "pattern" : "^arn:.*:kms:.*|DEFAULT",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateSettingsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/assessmentReports/integrity" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : " Validates the integrity of an assessment report in Audit Manager. ",
        "operationId" : "ValidateAssessmentReportIntegrity",
        "parameters" : [ ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "s3RelativePath" : {
                    "description" : " The relative path of the specified Amazon S3 bucket in which the assessment report is stored. ",
                    "maxLength" : 1024,
                    "minLength" : 1,
                    "pattern" : "^(S|s)3:\\/\\/[a-zA-Z0-9\\-\\.\\(\\)\\'\\*\\_\\!\\/]+$",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "s3RelativePath" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidateAssessmentReportIntegrityResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "parameters" : {
      "X-Amz-Content-Sha256" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Content-Sha256"
      },
      "X-Amz-Date" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Date"
      },
      "X-Amz-Algorithm" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Algorithm"
      },
      "X-Amz-Credential" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Credential"
      },
      "X-Amz-Security-Token" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Security-Token"
      },
      "X-Amz-Signature" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-SignedHeaders"
      }
    },
    "schemas" : {
      "AssociateAssessmentReportEvidenceFolderResponse" : {
        "properties" : { },
        "type" : "object"
      },
      "ValidationException" : { },
      "AccessDeniedException" : { },
      "InternalServerException" : { },
      "ResourceNotFoundException" : { },
      "BatchAssociateAssessmentReportEvidenceResponse" : {
        "properties" : {
          "evidenceIds" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EvidenceIds"
            }, {
              "description" : " The identifier for the evidence. "
            } ]
          },
          "errors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentReportEvidenceErrors"
            }, {
              "description" : " A list of errors returned by the <code>BatchAssociateAssessmentReportEvidence</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "UUID" : {
        "maxLength" : 36,
        "minLength" : 36,
        "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
        "type" : "string"
      },
      "BatchCreateDelegationByAssessmentResponse" : {
        "properties" : {
          "delegations" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Delegations"
            }, {
              "description" : " The delegations associated with the assessment. "
            } ]
          },
          "errors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BatchCreateDelegationByAssessmentErrors"
            }, {
              "description" : " A list of errors returned by the <code>BatchCreateDelegationByAssessment</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "CreateDelegationRequest" : {
        "description" : " A collection of attributes used to create a delegation for an assessment in Audit Manager. ",
        "properties" : {
          "comment" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DelegationComment"
            }, {
              "description" : " A comment related to the delegation request. "
            } ]
          },
          "controlSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlSetId"
            }, {
              "description" : " The unique identifier for the control set. "
            } ]
          },
          "roleArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/IamArn"
            }, {
              "description" : " The Amazon Resource Name (ARN) of the IAM role. "
            } ]
          },
          "roleType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RoleType"
            }, {
              "description" : "<p> The type of customer persona. </p> <note> <p>In <code>CreateAssessment</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>. </p> <p>In <code>UpdateSettings</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>.</p> <p>In <code>BatchCreateDelegationByAssessment</code>, <code>roleType</code> can only be <code>RESOURCE_OWNER</code>.</p> </note>"
            } ]
          }
        },
        "type" : "object"
      },
      "BatchDeleteDelegationByAssessmentResponse" : {
        "properties" : {
          "errors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BatchDeleteDelegationByAssessmentErrors"
            }, {
              "description" : " A list of errors returned by the <code>BatchDeleteDelegationByAssessment</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "BatchDisassociateAssessmentReportEvidenceResponse" : {
        "properties" : {
          "evidenceIds" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EvidenceIds"
            }, {
              "description" : " The identifier for the evidence. "
            } ]
          },
          "errors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentReportEvidenceErrors"
            }, {
              "description" : " A list of errors returned by the <code>BatchDisassociateAssessmentReportEvidence</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "BatchImportEvidenceToAssessmentControlResponse" : {
        "properties" : {
          "errors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BatchImportEvidenceToAssessmentControlErrors"
            }, {
              "description" : " A list of errors returned by the <code>BatchImportEvidenceToAssessmentControl</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "ManualEvidence" : {
        "description" : " Evidence that is uploaded to Audit Manager manually. ",
        "properties" : {
          "s3ResourcePath" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/S3Url"
            }, {
              "description" : " The Amazon S3 URL that points to a manual evidence object. "
            } ]
          }
        },
        "type" : "object"
      },
      "CreateAssessmentResponse" : {
        "properties" : {
          "assessment" : {
            "$ref" : "#/components/schemas/Assessment"
          }
        },
        "type" : "object"
      },
      "AssessmentReportDestinationType" : {
        "type" : "string",
        "enum" : [ "S3" ]
      },
      "S3Url" : {
        "maxLength" : 1024,
        "minLength" : 1,
        "pattern" : "^(S|s)3:\\/\\/[a-zA-Z0-9\\-\\.\\(\\)\\'\\*\\_\\!\\/]+$",
        "type" : "string"
      },
      "AWSAccounts" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AWSAccount"
        }
      },
      "AWSServices" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AWSService"
        }
      },
      "Role" : {
        "description" : " The wrapper that contains the Audit Manager role information of the current user, such as the role type and IAM Amazon Resource Name (ARN). ",
        "properties" : {
          "roleType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RoleType"
            }, {
              "description" : "<p> The type of customer persona. </p> <note> <p>In <code>CreateAssessment</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>. </p> <p>In <code>UpdateSettings</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>.</p> <p>In <code>BatchCreateDelegationByAssessment</code>, <code>roleType</code> can only be <code>RESOURCE_OWNER</code>.</p> </note>"
            } ]
          },
          "roleArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/IamArn"
            }, {
              "description" : " The Amazon Resource Name (ARN) of the IAM role. "
            } ]
          }
        },
        "type" : "object"
      },
      "TagValue" : {
        "maxLength" : 256,
        "minLength" : 0,
        "pattern" : ".{0,255}",
        "type" : "string"
      },
      "CreateAssessmentFrameworkResponse" : {
        "properties" : {
          "framework" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Framework"
            }, {
              "description" : " The name of the new framework returned by the <code>CreateAssessmentFramework</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "CreateAssessmentFrameworkControlSet" : {
        "description" : " A <code>controlSet</code> entity that represents a collection of controls in Audit Manager. This does not contain the control set ID. ",
        "properties" : {
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlSetName"
            }, {
              "description" : " The name of the specified control set. "
            } ]
          },
          "controls" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateAssessmentFrameworkControls"
            }, {
              "description" : " The list of controls within the control set. This does not contain the control set ID. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "name" ]
      },
      "CreateAssessmentReportResponse" : {
        "properties" : {
          "assessmentReport" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentReport"
            }, {
              "description" : " The new assessment report returned by the <code>CreateAssessmentReport</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "CreateControlResponse" : {
        "properties" : {
          "control" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Control"
            }, {
              "description" : " The new control returned by the <code>CreateControl</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "CreateControlMappingSource" : {
        "description" : " Control mapping fields that represent the source for evidence collection, along with related parameters and metadata. This does not contain <code>mappingID</code>. ",
        "properties" : {
          "sourceName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SourceName"
            }, {
              "description" : " The name of the control mapping data source. "
            } ]
          },
          "sourceDescription" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SourceDescription"
            }, {
              "description" : " The description of the data source that determines from where Audit Manager collects evidence for the control. "
            } ]
          },
          "sourceSetUpOption" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SourceSetUpOption"
            }, {
              "description" : " The setup option for the data source, which reflects if the evidence collection is automated or manual. "
            } ]
          },
          "sourceType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SourceType"
            }, {
              "description" : " Specifies one of the five types of data sources for evidence collection. "
            } ]
          },
          "sourceKeyword" : {
            "$ref" : "#/components/schemas/SourceKeyword"
          },
          "sourceFrequency" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SourceFrequency"
            }, {
              "description" : " The frequency of evidence collection for the specified control mapping source. "
            } ]
          },
          "troubleshootingText" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TroubleshootingText"
            }, {
              "description" : " The instructions for troubleshooting the specified control. "
            } ]
          }
        },
        "type" : "object"
      },
      "DeleteAssessmentResponse" : {
        "properties" : { },
        "type" : "object"
      },
      "DeleteAssessmentFrameworkResponse" : {
        "properties" : { },
        "type" : "object"
      },
      "DeleteAssessmentReportResponse" : {
        "properties" : { },
        "type" : "object"
      },
      "DeleteControlResponse" : {
        "properties" : { },
        "type" : "object"
      },
      "DeregisterAccountResponse" : {
        "properties" : {
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountStatus"
            }, {
              "description" : " The registration status of the account. "
            } ]
          }
        },
        "type" : "object"
      },
      "DeregisterOrganizationAdminAccountResponse" : {
        "properties" : { },
        "type" : "object"
      },
      "DisassociateAssessmentReportEvidenceFolderResponse" : {
        "properties" : { },
        "type" : "object"
      },
      "GetAccountStatusResponse" : {
        "properties" : {
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountStatus"
            }, {
              "description" : " The status of the specified account. "
            } ]
          }
        },
        "type" : "object"
      },
      "GetAssessmentResponse" : {
        "properties" : {
          "assessment" : {
            "$ref" : "#/components/schemas/Assessment"
          },
          "userRole" : {
            "$ref" : "#/components/schemas/Role"
          }
        },
        "type" : "object"
      },
      "GetAssessmentFrameworkResponse" : {
        "properties" : {
          "framework" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Framework"
            }, {
              "description" : " The framework returned by the <code>GetAssessmentFramework</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "GetAssessmentReportUrlResponse" : {
        "properties" : {
          "preSignedUrl" : {
            "$ref" : "#/components/schemas/URL"
          }
        },
        "type" : "object"
      },
      "GetChangeLogsResponse" : {
        "properties" : {
          "changeLogs" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChangeLogs"
            }, {
              "description" : " The list of user activity for the control. "
            } ]
          },
          "nextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : " The pagination token used to fetch the next set of results. "
            } ]
          }
        },
        "type" : "object"
      },
      "GetControlResponse" : {
        "properties" : {
          "control" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Control"
            }, {
              "description" : " The name of the control returned by the <code>GetControl</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "GetDelegationsResponse" : {
        "properties" : {
          "delegations" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DelegationMetadataList"
            }, {
              "description" : " The list of delegations returned by the <code>GetDelegations</code> API. "
            } ]
          },
          "nextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : " The pagination token used to fetch the next set of results. "
            } ]
          }
        },
        "type" : "object"
      },
      "GetEvidenceResponse" : {
        "properties" : {
          "evidence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Evidence"
            }, {
              "description" : " The evidence returned by the <code>GetEvidenceResponse</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "GetEvidenceByEvidenceFolderResponse" : {
        "properties" : {
          "evidence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EvidenceList"
            }, {
              "description" : " The list of evidence returned by the <code>GetEvidenceByEvidenceFolder</code> API. "
            } ]
          },
          "nextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : " The pagination token used to fetch the next set of results. "
            } ]
          }
        },
        "type" : "object"
      },
      "GetEvidenceFolderResponse" : {
        "properties" : {
          "evidenceFolder" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentEvidenceFolder"
            }, {
              "description" : " The folder in which evidence is stored. "
            } ]
          }
        },
        "type" : "object"
      },
      "GetEvidenceFoldersByAssessmentResponse" : {
        "properties" : {
          "evidenceFolders" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentEvidenceFolders"
            }, {
              "description" : " The list of evidence folders returned by the <code>GetEvidenceFoldersByAssessment</code> API. "
            } ]
          },
          "nextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : " The pagination token used to fetch the next set of results. "
            } ]
          }
        },
        "type" : "object"
      },
      "GetEvidenceFoldersByAssessmentControlResponse" : {
        "properties" : {
          "evidenceFolders" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentEvidenceFolders"
            }, {
              "description" : " The list of evidence folders returned by the <code>GetEvidenceFoldersByAssessmentControl</code> API. "
            } ]
          },
          "nextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : " The pagination token used to fetch the next set of results. "
            } ]
          }
        },
        "type" : "object"
      },
      "GetOrganizationAdminAccountResponse" : {
        "properties" : {
          "adminAccountId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountId"
            }, {
              "description" : " The identifier for the specified administrator account. "
            } ]
          },
          "organizationId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/organizationId"
            }, {
              "description" : " The identifier for the specified organization. "
            } ]
          }
        },
        "type" : "object"
      },
      "GetServicesInScopeResponse" : {
        "properties" : {
          "serviceMetadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ServiceMetadataList"
            }, {
              "description" : " The metadata associated with the Amazon Web Service. "
            } ]
          }
        },
        "type" : "object"
      },
      "GetSettingsResponse" : {
        "properties" : {
          "settings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Settings"
            }, {
              "description" : " The settings object that holds all supported Audit Manager settings. "
            } ]
          }
        },
        "type" : "object"
      },
      "ListAssessmentFrameworksResponse" : {
        "properties" : {
          "frameworkMetadataList" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/FrameworkMetadataList"
            }, {
              "description" : " The list of metadata objects for the specified framework. "
            } ]
          },
          "nextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : " The pagination token used to fetch the next set of results. "
            } ]
          }
        },
        "type" : "object"
      },
      "ListAssessmentReportsResponse" : {
        "properties" : {
          "assessmentReports" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentReportsMetadata"
            }, {
              "description" : " The list of assessment reports returned by the <code>ListAssessmentReports</code> API. "
            } ]
          },
          "nextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : " The pagination token used to fetch the next set of results. "
            } ]
          }
        },
        "type" : "object"
      },
      "ListAssessmentsResponse" : {
        "properties" : {
          "assessmentMetadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListAssessmentMetadata"
            }, {
              "description" : " The metadata associated with the assessment. "
            } ]
          },
          "nextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : " The pagination token used to fetch the next set of results. "
            } ]
          }
        },
        "type" : "object"
      },
      "ListControlsResponse" : {
        "properties" : {
          "controlMetadataList" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlMetadataList"
            }, {
              "description" : " The list of control metadata objects returned by the <code>ListControls</code> API. "
            } ]
          },
          "nextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : " The pagination token used to fetch the next set of results. "
            } ]
          }
        },
        "type" : "object"
      },
      "ListKeywordsForDataSourceResponse" : {
        "properties" : {
          "keywords" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Keywords"
            }, {
              "description" : " The list of keywords for the specified event mapping source. "
            } ]
          },
          "nextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : " The pagination token used to fetch the next set of results. "
            } ]
          }
        },
        "type" : "object"
      },
      "ListNotificationsResponse" : {
        "properties" : {
          "notifications" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Notifications"
            }, {
              "description" : " The returned list of notifications. "
            } ]
          },
          "nextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : " The pagination token used to fetch the next set of results. "
            } ]
          }
        },
        "type" : "object"
      },
      "ListTagsForResourceResponse" : {
        "properties" : {
          "tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagMap"
            }, {
              "description" : " The list of tags returned by the <code>ListTagsForResource</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "RegisterAccountResponse" : {
        "properties" : {
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountStatus"
            }, {
              "description" : " The status of the account registration request. "
            } ]
          }
        },
        "type" : "object"
      },
      "RegisterOrganizationAdminAccountResponse" : {
        "properties" : {
          "adminAccountId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountId"
            }, {
              "description" : " The identifier for the specified delegated administrator account. "
            } ]
          },
          "organizationId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/organizationId"
            }, {
              "description" : " The identifier for the specified organization. "
            } ]
          }
        },
        "type" : "object"
      },
      "TagResourceResponse" : {
        "properties" : { },
        "type" : "object"
      },
      "UntagResourceResponse" : {
        "properties" : { },
        "type" : "object"
      },
      "TagKey" : {
        "maxLength" : 128,
        "minLength" : 1,
        "pattern" : "^(?!aws:)[a-zA-Z+-=._:/]+$",
        "type" : "string"
      },
      "UpdateAssessmentResponse" : {
        "properties" : {
          "assessment" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Assessment"
            }, {
              "description" : " The response object (name of the updated assessment) for the <code>UpdateAssessmentRequest</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateAssessmentControlResponse" : {
        "properties" : {
          "control" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentControl"
            }, {
              "description" : " The name of the updated control set returned by the <code>UpdateAssessmentControl</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateAssessmentControlSetStatusResponse" : {
        "properties" : {
          "controlSet" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentControlSet"
            }, {
              "description" : " The name of the updated control set returned by the <code>UpdateAssessmentControlSetStatus</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateAssessmentFrameworkResponse" : {
        "properties" : {
          "framework" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Framework"
            }, {
              "description" : " The name of the specified framework. "
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateAssessmentFrameworkControlSet" : {
        "description" : " A <code>controlSet</code> entity that represents a collection of controls in Audit Manager. This does not contain the control set ID. ",
        "properties" : {
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlSetName"
            }, {
              "description" : " The unique identifier for the control set. "
            } ]
          },
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlSetName"
            }, {
              "description" : " The name of the control set. "
            } ]
          },
          "controls" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateAssessmentFrameworkControls"
            }, {
              "description" : " The list of controls contained within the control set. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "name" ]
      },
      "UpdateAssessmentStatusResponse" : {
        "properties" : {
          "assessment" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Assessment"
            }, {
              "description" : " The name of the updated assessment returned by the <code>UpdateAssessmentStatus</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateControlResponse" : {
        "properties" : {
          "control" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Control"
            }, {
              "description" : " The name of the updated control set returned by the <code>UpdateControl</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "ControlMappingSource" : {
        "description" : " The data source that determines from where Audit Manager collects evidence for the control. ",
        "properties" : {
          "sourceId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The unique identifier for the specified source. "
            } ]
          },
          "sourceName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SourceName"
            }, {
              "description" : " The name of the specified source. "
            } ]
          },
          "sourceDescription" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SourceDescription"
            }, {
              "description" : " The description of the specified source. "
            } ]
          },
          "sourceSetUpOption" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SourceSetUpOption"
            }, {
              "description" : " The setup option for the data source, which reflects if the evidence collection is automated or manual. "
            } ]
          },
          "sourceType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SourceType"
            }, {
              "description" : " Specifies one of the five types of data sources for evidence collection. "
            } ]
          },
          "sourceKeyword" : {
            "$ref" : "#/components/schemas/SourceKeyword"
          },
          "sourceFrequency" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SourceFrequency"
            }, {
              "description" : " The frequency of evidence collection for the specified control mapping source. "
            } ]
          },
          "troubleshootingText" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TroubleshootingText"
            }, {
              "description" : " The instructions for troubleshooting the specified control. "
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateSettingsResponse" : {
        "properties" : {
          "settings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Settings"
            }, {
              "description" : " The current list of settings. "
            } ]
          }
        },
        "type" : "object"
      },
      "ValidateAssessmentReportIntegrityResponse" : {
        "properties" : {
          "signatureValid" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Boolean"
            }, {
              "description" : " Specifies whether the signature key is valid. "
            } ]
          },
          "signatureAlgorithm" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : " The signature algorithm used to code sign the assessment report file. "
            } ]
          },
          "signatureDateTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : " The date and time signature that specifies when the assessment report was created. "
            } ]
          },
          "signatureKeyId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : " The unique identifier for the validation signature key. "
            } ]
          },
          "validationErrors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ValidationErrors"
            }, {
              "description" : " Represents any errors that occurred when validating the assessment report. "
            } ]
          }
        },
        "type" : "object"
      },
      "AccountId" : {
        "maxLength" : 12,
        "minLength" : 12,
        "pattern" : "^[0-9]{12}$",
        "type" : "string"
      },
      "EmailAddress" : {
        "maxLength" : 320,
        "minLength" : 1,
        "pattern" : "^.*@.*$",
        "type" : "string"
      },
      "AccountName" : {
        "maxLength" : 50,
        "minLength" : 1,
        "pattern" : "^[\\u0020-\\u007E]+$",
        "type" : "string"
      },
      "AWSAccount" : {
        "description" : " The wrapper of account details, such as account ID, email address, and so on. ",
        "properties" : {
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountId"
            }, {
              "description" : " The identifier for the specified account. "
            } ]
          },
          "emailAddress" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EmailAddress"
            }, {
              "description" : " The email address associated with the specified account. "
            } ]
          },
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountName"
            }, {
              "description" : " The name of the specified account. "
            } ]
          }
        },
        "type" : "object"
      },
      "AWSServiceName" : {
        "maxLength" : 40,
        "minLength" : 1,
        "pattern" : "^[a-zA-Z0-9-\\s().]+$",
        "type" : "string"
      },
      "AWSService" : {
        "description" : " An Amazon Web Service such as Amazon S3, CloudTrail, and so on. ",
        "properties" : {
          "serviceName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AWSServiceName"
            }, {
              "description" : " The name of the Amazon Web Service. "
            } ]
          }
        },
        "type" : "object"
      },
      "AccountStatus" : {
        "type" : "string",
        "enum" : [ "ACTIVE", "INACTIVE", "PENDING_ACTIVATION" ]
      },
      "ActionEnum" : {
        "type" : "string",
        "enum" : [ "CREATE", "UPDATE_METADATA", "ACTIVE", "INACTIVE", "DELETE", "UNDER_REVIEW", "REVIEWED", "IMPORT_EVIDENCE" ]
      },
      "ActionPlanInstructions" : {
        "maxLength" : 1000,
        "pattern" : "^[\\w\\W\\s\\S]*$",
        "type" : "string"
      },
      "ActionPlanTitle" : {
        "maxLength" : 300,
        "pattern" : "^[\\w\\W\\s\\S]*$",
        "type" : "string"
      },
      "AuditManagerArn" : {
        "maxLength" : 2048,
        "minLength" : 20,
        "pattern" : "^arn:.*:auditmanager:.*",
        "type" : "string"
      },
      "AssessmentMetadata" : {
        "description" : " The metadata associated with the specified assessment. ",
        "properties" : {
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentName"
            }, {
              "description" : " The name of the assessment. "
            } ]
          },
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The unique identifier for the assessment. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentDescription"
            }, {
              "description" : " The description of the assessment. "
            } ]
          },
          "complianceType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ComplianceType"
            }, {
              "description" : " The name of a compliance standard related to the assessment, such as PCI-DSS. "
            } ]
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentStatus"
            }, {
              "description" : " The overall status of the assessment. "
            } ]
          },
          "assessmentReportsDestination" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentReportsDestination"
            }, {
              "description" : " The destination in which evidence reports are stored for the specified assessment. "
            } ]
          },
          "scope" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Scope"
            }, {
              "description" : " The wrapper of accounts and services in scope for the assessment. "
            } ]
          },
          "roles" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Roles"
            }, {
              "description" : " The roles associated with the assessment. "
            } ]
          },
          "delegations" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Delegations"
            }, {
              "description" : " The delegations associated with the assessment. "
            } ]
          },
          "creationTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " Specifies when the assessment was created. "
            } ]
          },
          "lastUpdated" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " The time of the most recent update. "
            } ]
          }
        },
        "type" : "object"
      },
      "AssessmentFramework" : {
        "description" : " The file used to structure and automate Audit Manager assessments for a given compliance standard. ",
        "properties" : {
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The unique identifier for the framework. "
            } ]
          },
          "arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AuditManagerArn"
            }, {
              "description" : " The Amazon Resource Name (ARN) of the specified framework. "
            } ]
          },
          "metadata" : {
            "$ref" : "#/components/schemas/FrameworkMetadata"
          },
          "controlSets" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentControlSets"
            }, {
              "description" : " The control sets associated with the framework. "
            } ]
          }
        },
        "type" : "object"
      },
      "TagMap" : {
        "maxProperties" : 50,
        "minProperties" : 0,
        "type" : "object",
        "additionalProperties" : {
          "$ref" : "#/components/schemas/TagValue"
        }
      },
      "Assessment" : {
        "description" : " An entity that defines the scope of audit evidence collected by Audit Manager. An Audit Manager assessment is an implementation of an Audit Manager framework. ",
        "properties" : {
          "arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AuditManagerArn"
            }, {
              "description" : " The Amazon Resource Name (ARN) of the assessment. "
            } ]
          },
          "awsAccount" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AWSAccount"
            }, {
              "description" : " The account associated with the assessment. "
            } ]
          },
          "metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentMetadata"
            }, {
              "description" : " The metadata for the specified assessment. "
            } ]
          },
          "framework" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentFramework"
            }, {
              "description" : " The framework from which the assessment was created. "
            } ]
          },
          "tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagMap"
            }, {
              "description" : " The tags associated with the assessment. "
            } ]
          }
        },
        "type" : "object"
      },
      "ControlName" : {
        "maxLength" : 300,
        "minLength" : 1,
        "pattern" : "^[^\\\\]*$",
        "type" : "string"
      },
      "ControlDescription" : {
        "maxLength" : 1000,
        "pattern" : "^[\\w\\W\\s\\S]*$",
        "type" : "string"
      },
      "ControlStatus" : {
        "type" : "string",
        "enum" : [ "UNDER_REVIEW", "REVIEWED", "INACTIVE" ]
      },
      "ControlResponse" : {
        "type" : "string",
        "enum" : [ "MANUAL", "AUTOMATE", "DEFER", "IGNORE" ]
      },
      "ControlComments" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ControlComment"
        }
      },
      "EvidenceSources" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/NonEmptyString"
        }
      },
      "Integer" : {
        "type" : "integer"
      },
      "AssessmentControl" : {
        "description" : " The control entity that represents a standard or custom control used in an Audit Manager assessment. ",
        "properties" : {
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The identifier for the specified control. "
            } ]
          },
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlName"
            }, {
              "description" : " The name of the specified control. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlDescription"
            }, {
              "description" : " The description of the specified control. "
            } ]
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlStatus"
            }, {
              "description" : " The status of the specified control. "
            } ]
          },
          "response" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlResponse"
            }, {
              "description" : " The response of the specified control. "
            } ]
          },
          "comments" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlComments"
            }, {
              "description" : " The list of comments attached to the specified control. "
            } ]
          },
          "evidenceSources" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EvidenceSources"
            }, {
              "description" : " The list of data sources for the specified evidence. "
            } ]
          },
          "evidenceCount" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Integer"
            }, {
              "description" : " The amount of evidence generated for the control. "
            } ]
          },
          "assessmentReportEvidenceCount" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Integer"
            }, {
              "description" : " The amount of evidence in the assessment report. "
            } ]
          }
        },
        "type" : "object"
      },
      "ControlSetId" : {
        "maxLength" : 300,
        "minLength" : 1,
        "pattern" : "^[\\w\\W\\s\\S]*$",
        "type" : "string"
      },
      "NonEmptyString" : {
        "maxLength" : 2048,
        "minLength" : 1,
        "pattern" : ".*\\S.*",
        "type" : "string"
      },
      "ControlSetStatus" : {
        "type" : "string",
        "enum" : [ "ACTIVE", "UNDER_REVIEW", "REVIEWED" ]
      },
      "Roles" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Role"
        }
      },
      "AssessmentControls" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AssessmentControl"
        }
      },
      "Delegations" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Delegation"
        }
      },
      "AssessmentControlSet" : {
        "description" : " Represents a set of controls in an Audit Manager assessment. ",
        "properties" : {
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlSetId"
            }, {
              "description" : " The identifier of the control set in the assessment. This is the control set name in a plain string format. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : " The description for the control set. "
            } ]
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlSetStatus"
            }, {
              "description" : " Specifies the current status of the control set. "
            } ]
          },
          "roles" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Roles"
            }, {
              "description" : " The roles associated with the control set. "
            } ]
          },
          "controls" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentControls"
            }, {
              "description" : " The list of controls contained with the control set. "
            } ]
          },
          "delegations" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Delegations"
            }, {
              "description" : " The delegations associated with the control set. "
            } ]
          },
          "systemEvidenceCount" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Integer"
            }, {
              "description" : " The total number of evidence objects retrieved automatically for the control set. "
            } ]
          },
          "manualEvidenceCount" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Integer"
            }, {
              "description" : " The total number of evidence objects uploaded manually to the control set. "
            } ]
          }
        },
        "type" : "object"
      },
      "AssessmentControlSets" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AssessmentControlSet"
        }
      },
      "AssessmentDescription" : {
        "maxLength" : 1000,
        "pattern" : "^[\\w\\W\\s\\S]*$",
        "type" : "string"
      },
      "AssessmentEvidenceFolderName" : {
        "maxLength" : 300,
        "minLength" : 1,
        "pattern" : "^[\\w\\W\\s\\S]*$",
        "type" : "string"
      },
      "Timestamp" : {
        "format" : "date-time",
        "type" : "string"
      },
      "String" : {
        "maxLength" : 2048,
        "minLength" : 0,
        "pattern" : ".*",
        "type" : "string"
      },
      "AssessmentEvidenceFolder" : {
        "description" : " The folder in which Audit Manager stores evidence for an assessment. ",
        "properties" : {
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentEvidenceFolderName"
            }, {
              "description" : " The name of the specified evidence folder. "
            } ]
          },
          "date" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " The date when the first evidence was added to the evidence folder. "
            } ]
          },
          "assessmentId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The identifier for the specified assessment. "
            } ]
          },
          "controlSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlSetId"
            }, {
              "description" : " The identifier for the control set. "
            } ]
          },
          "controlId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The unique identifier for the specified control. "
            } ]
          },
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The identifier for the folder in which evidence is stored. "
            } ]
          },
          "dataSource" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : " The Amazon Web Service from which the evidence was collected. "
            } ]
          },
          "author" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : " The name of the user who created the evidence folder. "
            } ]
          },
          "totalEvidence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Integer"
            }, {
              "description" : " The total amount of evidence in the evidence folder. "
            } ]
          },
          "assessmentReportSelectionCount" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Integer"
            }, {
              "description" : " The total count of evidence included in the assessment report. "
            } ]
          },
          "controlName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlName"
            }, {
              "description" : " The name of the control. "
            } ]
          },
          "evidenceResourcesIncludedCount" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Integer"
            }, {
              "description" : " The amount of evidence included in the evidence folder. "
            } ]
          },
          "evidenceByTypeConfigurationDataCount" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Integer"
            }, {
              "description" : " The number of evidence that falls under the configuration data category. This evidence is collected from configuration snapshots of other Amazon Web Services services such as Amazon EC2, Amazon S3, or IAM. "
            } ]
          },
          "evidenceByTypeManualCount" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Integer"
            }, {
              "description" : " The number of evidence that falls under the manual category. This evidence is imported manually. "
            } ]
          },
          "evidenceByTypeComplianceCheckCount" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Integer"
            }, {
              "description" : " The number of evidence that falls under the compliance check category. This evidence is collected from Config or Security Hub. "
            } ]
          },
          "evidenceByTypeComplianceCheckIssuesCount" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Integer"
            }, {
              "description" : " The total number of issues that were reported directly from Security Hub, Config, or both. "
            } ]
          },
          "evidenceByTypeUserActivityCount" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Integer"
            }, {
              "description" : " The number of evidence that falls under the user activity category. This evidence is collected from CloudTrail logs. "
            } ]
          },
          "evidenceAwsServiceSourceCount" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Integer"
            }, {
              "description" : " The total number of Amazon Web Services resources assessed to generate the evidence. "
            } ]
          }
        },
        "type" : "object"
      },
      "AssessmentEvidenceFolders" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AssessmentEvidenceFolder"
        }
      },
      "FrameworkMetadata" : {
        "description" : " The metadata of a framework, such as the name, ID, description, and so on. ",
        "properties" : {
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentName"
            }, {
              "description" : " The name of the framework. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentFrameworkDescription"
            }, {
              "description" : " The description of the framework. "
            } ]
          },
          "logo" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Filename"
            }, {
              "description" : " The logo associated with the framework. "
            } ]
          },
          "complianceType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ComplianceType"
            }, {
              "description" : " The compliance standard associated with the framework, such as PCI-DSS or HIPAA. "
            } ]
          }
        },
        "type" : "object"
      },
      "AssessmentFrameworkDescription" : {
        "maxLength" : 200,
        "minLength" : 1,
        "pattern" : "^[\\w\\W\\s\\S]*$",
        "type" : "string"
      },
      "FrameworkType" : {
        "type" : "string",
        "enum" : [ "Standard", "Custom" ]
      },
      "FrameworkName" : {
        "maxLength" : 300,
        "minLength" : 1,
        "pattern" : "^[^\\\\]*$",
        "type" : "string"
      },
      "FrameworkDescription" : {
        "maxLength" : 1000,
        "minLength" : 1,
        "pattern" : "^[\\w\\W\\s\\S]*$",
        "type" : "string"
      },
      "Filename" : {
        "maxLength" : 255,
        "minLength" : 1,
        "pattern" : "^[\\w,\\s-]+\\.[A-Za-z]+$",
        "type" : "string"
      },
      "ComplianceType" : {
        "maxLength" : 100,
        "pattern" : "^[\\w\\W\\s\\S]*$",
        "type" : "string"
      },
      "ControlsCount" : {
        "type" : "integer"
      },
      "ControlSetsCount" : {
        "type" : "integer"
      },
      "AssessmentFrameworkMetadata" : {
        "description" : " The metadata associated with a standard or custom framework. ",
        "properties" : {
          "arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AuditManagerArn"
            }, {
              "description" : " The Amazon Resource Name (ARN) of the framework. "
            } ]
          },
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The unique identified for the specified framework. "
            } ]
          },
          "type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/FrameworkType"
            }, {
              "description" : " The framework type, such as standard or custom. "
            } ]
          },
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/FrameworkName"
            }, {
              "description" : " The name of the specified framework. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/FrameworkDescription"
            }, {
              "description" : " The description of the specified framework. "
            } ]
          },
          "logo" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Filename"
            }, {
              "description" : " The logo associated with the framework. "
            } ]
          },
          "complianceType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ComplianceType"
            }, {
              "description" : " The compliance type that the new custom framework supports, such as CIS or HIPAA. "
            } ]
          },
          "controlsCount" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlsCount"
            }, {
              "description" : " The number of controls associated with the specified framework. "
            } ]
          },
          "controlSetsCount" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlSetsCount"
            }, {
              "description" : " The number of control sets associated with the specified framework. "
            } ]
          },
          "createdAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " Specifies when the framework was created. "
            } ]
          },
          "lastUpdatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " Specifies when the framework was most recently updated. "
            } ]
          }
        },
        "type" : "object"
      },
      "AssessmentName" : {
        "maxLength" : 300,
        "minLength" : 1,
        "pattern" : "^[^\\\\]*$",
        "type" : "string"
      },
      "AssessmentStatus" : {
        "type" : "string",
        "enum" : [ "ACTIVE", "INACTIVE" ]
      },
      "AssessmentReportsDestination" : {
        "description" : " The location in which Audit Manager saves assessment reports for the given assessment. ",
        "properties" : {
          "destinationType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentReportDestinationType"
            }, {
              "description" : " The destination type, such as Amazon S3. "
            } ]
          },
          "destination" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/S3Url"
            }, {
              "description" : " The destination of the assessment report. "
            } ]
          }
        },
        "type" : "object"
      },
      "Scope" : {
        "description" : " The wrapper that contains the accounts and services in scope for the assessment. ",
        "properties" : {
          "awsAccounts" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AWSAccounts"
            }, {
              "description" : " The accounts included in the scope of the assessment. "
            } ]
          },
          "awsServices" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AWSServices"
            }, {
              "description" : " The Amazon Web Services services included in the scope of the assessment. "
            } ]
          }
        },
        "type" : "object"
      },
      "AssessmentMetadataItem" : {
        "description" : " A metadata object associated with an assessment in Audit Manager. ",
        "properties" : {
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentName"
            }, {
              "description" : " The name of the assessment. "
            } ]
          },
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The unique identifier for the assessment. "
            } ]
          },
          "complianceType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ComplianceType"
            }, {
              "description" : " The name of the compliance standard related to the assessment, such as PCI-DSS. "
            } ]
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentStatus"
            }, {
              "description" : " The current status of the assessment. "
            } ]
          },
          "roles" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Roles"
            }, {
              "description" : " The roles associated with the assessment. "
            } ]
          },
          "delegations" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Delegations"
            }, {
              "description" : " The delegations associated with the assessment. "
            } ]
          },
          "creationTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " Specifies when the assessment was created. "
            } ]
          },
          "lastUpdated" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " The time of the most recent update. "
            } ]
          }
        },
        "type" : "object"
      },
      "AssessmentReportName" : {
        "maxLength" : 300,
        "minLength" : 1,
        "pattern" : "^[a-zA-Z0-9-_\\.]+$",
        "type" : "string"
      },
      "AssessmentReportDescription" : {
        "maxLength" : 1000,
        "pattern" : "^[\\w\\W\\s\\S]*$",
        "type" : "string"
      },
      "Username" : {
        "maxLength" : 128,
        "minLength" : 1,
        "pattern" : "^[a-zA-Z0-9-_()\\s\\+=,.@]+$",
        "type" : "string"
      },
      "AssessmentReportStatus" : {
        "type" : "string",
        "enum" : [ "COMPLETE", "IN_PROGRESS", "FAILED" ]
      },
      "AssessmentReport" : {
        "description" : " A finalized document generated from an Audit Manager assessment. These reports summarize the relevant evidence collected for your audit, and link to the relevant evidence folders which are named and organized according to the controls specified in your assessment. ",
        "properties" : {
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The unique identifier for the specified assessment report. "
            } ]
          },
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentReportName"
            }, {
              "description" : " The name given to the assessment report. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentReportDescription"
            }, {
              "description" : " The description of the specified assessment report. "
            } ]
          },
          "awsAccountId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountId"
            }, {
              "description" : " The identifier for the specified account. "
            } ]
          },
          "assessmentId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The identifier for the specified assessment. "
            } ]
          },
          "assessmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentName"
            }, {
              "description" : " The name of the associated assessment. "
            } ]
          },
          "author" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Username"
            }, {
              "description" : " The name of the user who created the assessment report. "
            } ]
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentReportStatus"
            }, {
              "description" : " The current status of the specified assessment report. "
            } ]
          },
          "creationTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " Specifies when the assessment report was created. "
            } ]
          }
        },
        "type" : "object"
      },
      "ErrorCode" : {
        "maxLength" : 3,
        "minLength" : 3,
        "pattern" : "[0-9]{3}",
        "type" : "string"
      },
      "ErrorMessage" : {
        "maxLength" : 300,
        "pattern" : "^[\\w\\W\\s\\S]*$",
        "type" : "string"
      },
      "AssessmentReportEvidenceError" : {
        "description" : " An error entity for the <code>AssessmentReportEvidence</code> API. This is used to provide more meaningful errors than a simple string message. ",
        "properties" : {
          "evidenceId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The identifier for the evidence. "
            } ]
          },
          "errorCode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ErrorCode"
            }, {
              "description" : " The error code returned by the <code>AssessmentReportEvidence</code> API. "
            } ]
          },
          "errorMessage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ErrorMessage"
            }, {
              "description" : " The error message returned by the <code>AssessmentReportEvidence</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "AssessmentReportEvidenceErrors" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AssessmentReportEvidenceError"
        }
      },
      "AssessmentReportMetadata" : {
        "description" : " The metadata objects associated with the specified assessment report. ",
        "properties" : {
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The unique identifier for the assessment report. "
            } ]
          },
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentReportName"
            }, {
              "description" : " The name of the assessment report. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentReportDescription"
            }, {
              "description" : " The description of the specified assessment report. "
            } ]
          },
          "assessmentId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The unique identifier for the associated assessment. "
            } ]
          },
          "assessmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentName"
            }, {
              "description" : "The name of the associated assessment. "
            } ]
          },
          "author" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Username"
            }, {
              "description" : " The name of the user who created the assessment report. "
            } ]
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentReportStatus"
            }, {
              "description" : " The current status of the assessment report. "
            } ]
          },
          "creationTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " Specifies when the assessment report was created. "
            } ]
          }
        },
        "type" : "object"
      },
      "AssessmentReportsMetadata" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AssessmentReportMetadata"
        }
      },
      "AssociateAssessmentReportEvidenceFolderRequest" : {
        "properties" : {
          "evidenceFolderId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The identifier for the folder in which evidence is stored. "
            } ]
          }
        },
        "type" : "object",
        "title" : "AssociateAssessmentReportEvidenceFolderRequest",
        "required" : [ "evidenceFolderId" ]
      },
      "EvidenceIds" : {
        "maxItems" : 50,
        "minItems" : 0,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/UUID"
        }
      },
      "BatchAssociateAssessmentReportEvidenceRequest" : {
        "properties" : {
          "evidenceFolderId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The identifier for the folder in which the evidence is stored. "
            } ]
          },
          "evidenceIds" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EvidenceIds"
            }, {
              "description" : " The list of evidence identifiers. "
            } ]
          }
        },
        "type" : "object",
        "title" : "BatchAssociateAssessmentReportEvidenceRequest",
        "required" : [ "evidenceFolderId", "evidenceIds" ]
      },
      "BatchCreateDelegationByAssessmentError" : {
        "description" : " An error entity for the <code>BatchCreateDelegationByAssessment</code> API. This is used to provide more meaningful errors than a simple string message. ",
        "properties" : {
          "createDelegationRequest" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateDelegationRequest"
            }, {
              "description" : " The API request to batch create delegations in Audit Manager. "
            } ]
          },
          "errorCode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ErrorCode"
            }, {
              "description" : " The error code returned by the <code>BatchCreateDelegationByAssessment</code> API. "
            } ]
          },
          "errorMessage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ErrorMessage"
            }, {
              "description" : " The error message returned by the <code>BatchCreateDelegationByAssessment</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "BatchCreateDelegationByAssessmentErrors" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/BatchCreateDelegationByAssessmentError"
        }
      },
      "CreateDelegationRequests" : {
        "maxItems" : 50,
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CreateDelegationRequest"
        }
      },
      "BatchCreateDelegationByAssessmentRequest" : {
        "properties" : {
          "createDelegationRequests" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateDelegationRequests"
            }, {
              "description" : " The API request to batch create delegations in Audit Manager. "
            } ]
          }
        },
        "type" : "object",
        "title" : "BatchCreateDelegationByAssessmentRequest",
        "required" : [ "createDelegationRequests" ]
      },
      "BatchDeleteDelegationByAssessmentError" : {
        "description" : " An error entity for the <code>BatchDeleteDelegationByAssessment</code> API. This is used to provide more meaningful errors than a simple string message. ",
        "properties" : {
          "delegationId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The identifier for the specified delegation. "
            } ]
          },
          "errorCode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ErrorCode"
            }, {
              "description" : " The error code returned by the <code>BatchDeleteDelegationByAssessment</code> API. "
            } ]
          },
          "errorMessage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ErrorMessage"
            }, {
              "description" : " The error message returned by the <code>BatchDeleteDelegationByAssessment</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "BatchDeleteDelegationByAssessmentErrors" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/BatchDeleteDelegationByAssessmentError"
        }
      },
      "DelegationIds" : {
        "maxItems" : 50,
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/UUID"
        }
      },
      "BatchDeleteDelegationByAssessmentRequest" : {
        "properties" : {
          "delegationIds" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DelegationIds"
            }, {
              "description" : " The identifiers for the specified delegations. "
            } ]
          }
        },
        "type" : "object",
        "title" : "BatchDeleteDelegationByAssessmentRequest",
        "required" : [ "delegationIds" ]
      },
      "BatchDisassociateAssessmentReportEvidenceRequest" : {
        "properties" : {
          "evidenceFolderId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The identifier for the folder in which evidence is stored. "
            } ]
          },
          "evidenceIds" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EvidenceIds"
            }, {
              "description" : " The list of evidence identifiers. "
            } ]
          }
        },
        "type" : "object",
        "title" : "BatchDisassociateAssessmentReportEvidenceRequest",
        "required" : [ "evidenceFolderId", "evidenceIds" ]
      },
      "BatchImportEvidenceToAssessmentControlError" : {
        "description" : " An error entity for the <code>BatchImportEvidenceToAssessmentControl</code> API. This is used to provide more meaningful errors than a simple string message. ",
        "properties" : {
          "manualEvidence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ManualEvidence"
            }, {
              "description" : " Manual evidence that cannot be collected automatically by Audit Manager. "
            } ]
          },
          "errorCode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ErrorCode"
            }, {
              "description" : " The error code returned by the <code>BatchImportEvidenceToAssessmentControl</code> API. "
            } ]
          },
          "errorMessage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ErrorMessage"
            }, {
              "description" : " The error message returned by the <code>BatchImportEvidenceToAssessmentControl</code> API. "
            } ]
          }
        },
        "type" : "object"
      },
      "BatchImportEvidenceToAssessmentControlErrors" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/BatchImportEvidenceToAssessmentControlError"
        }
      },
      "ManualEvidenceList" : {
        "maxItems" : 50,
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ManualEvidence"
        }
      },
      "BatchImportEvidenceToAssessmentControlRequest" : {
        "properties" : {
          "manualEvidence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ManualEvidenceList"
            }, {
              "description" : " The list of manual evidence objects. "
            } ]
          }
        },
        "type" : "object",
        "title" : "BatchImportEvidenceToAssessmentControlRequest",
        "required" : [ "manualEvidence" ]
      },
      "Boolean" : {
        "type" : "boolean"
      },
      "ObjectTypeEnum" : {
        "type" : "string",
        "enum" : [ "ASSESSMENT", "CONTROL_SET", "CONTROL", "DELEGATION", "ASSESSMENT_REPORT" ]
      },
      "IamArn" : {
        "maxLength" : 2048,
        "minLength" : 20,
        "pattern" : "^arn:.*:iam:.*",
        "type" : "string"
      },
      "ChangeLog" : {
        "description" : " The record of a change within Audit Manager, such as a modified assessment, a delegated control set, and so on. ",
        "properties" : {
          "objectType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ObjectTypeEnum"
            }, {
              "description" : " The changelog object type, such as an assessment, control, or control set. "
            } ]
          },
          "objectName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : " The name of the changelog object. "
            } ]
          },
          "action" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ActionEnum"
            }, {
              "description" : " The action performed. "
            } ]
          },
          "createdAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " The time of creation for the changelog object. "
            } ]
          },
          "createdBy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/IamArn"
            }, {
              "description" : " The IAM user or role that performed the action. "
            } ]
          }
        },
        "type" : "object"
      },
      "ChangeLogs" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ChangeLog"
        }
      },
      "ControlType" : {
        "type" : "string",
        "enum" : [ "Standard", "Custom" ]
      },
      "TestingInformation" : {
        "maxLength" : 1000,
        "pattern" : "^[\\w\\W\\s\\S]*$",
        "type" : "string"
      },
      "ControlSources" : {
        "maxLength" : 100,
        "minLength" : 1,
        "pattern" : "^[a-zA-Z_0-9-\\s.,]+$",
        "type" : "string"
      },
      "ControlMappingSources" : {
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ControlMappingSource"
        }
      },
      "CreatedBy" : {
        "maxLength" : 100,
        "minLength" : 1,
        "pattern" : "^[a-zA-Z0-9\\s-_()\\[\\]]+$",
        "type" : "string"
      },
      "LastUpdatedBy" : {
        "maxLength" : 100,
        "minLength" : 1,
        "pattern" : "^[a-zA-Z0-9\\s-_()\\[\\]]+$",
        "type" : "string"
      },
      "Control" : {
        "description" : " A control in Audit Manager. ",
        "properties" : {
          "arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AuditManagerArn"
            }, {
              "description" : " The Amazon Resource Name (ARN) of the specified control. "
            } ]
          },
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The unique identifier for the control. "
            } ]
          },
          "type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlType"
            }, {
              "description" : " The type of control, such as custom or standard. "
            } ]
          },
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlName"
            }, {
              "description" : " The name of the specified control. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlDescription"
            }, {
              "description" : " The description of the specified control. "
            } ]
          },
          "testingInformation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TestingInformation"
            }, {
              "description" : " The steps to follow to determine if the control has been satisfied. "
            } ]
          },
          "actionPlanTitle" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ActionPlanTitle"
            }, {
              "description" : " The title of the action plan for remediating the control. "
            } ]
          },
          "actionPlanInstructions" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ActionPlanInstructions"
            }, {
              "description" : " The recommended actions to carry out if the control is not fulfilled. "
            } ]
          },
          "controlSources" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlSources"
            }, {
              "description" : " The data source that determines from where Audit Manager collects evidence for the control. "
            } ]
          },
          "controlMappingSources" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlMappingSources"
            }, {
              "description" : " The data mapping sources for the specified control. "
            } ]
          },
          "createdAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " Specifies when the control was created. "
            } ]
          },
          "lastUpdatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " Specifies when the control was most recently updated. "
            } ]
          },
          "createdBy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreatedBy"
            }, {
              "description" : " The IAM user or role that created the control. "
            } ]
          },
          "lastUpdatedBy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/LastUpdatedBy"
            }, {
              "description" : " The IAM user or role that most recently updated the control. "
            } ]
          },
          "tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagMap"
            }, {
              "description" : " The tags associated with the control. "
            } ]
          }
        },
        "type" : "object"
      },
      "ControlCommentBody" : {
        "maxLength" : 500,
        "pattern" : "^[\\w\\W\\s\\S]*$",
        "type" : "string"
      },
      "ControlComment" : {
        "description" : " A comment posted by a user on a control. This includes the author's name, the comment text, and a timestamp. ",
        "properties" : {
          "authorName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Username"
            }, {
              "description" : " The name of the user who authored the comment. "
            } ]
          },
          "commentBody" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlCommentBody"
            }, {
              "description" : " The body text of a control comment. "
            } ]
          },
          "postedDate" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " The time when the comment was posted. "
            } ]
          }
        },
        "type" : "object"
      },
      "SourceName" : {
        "maxLength" : 100,
        "minLength" : 1,
        "type" : "string"
      },
      "SourceDescription" : {
        "maxLength" : 1000,
        "pattern" : "^[\\w\\W\\s\\S]*$",
        "type" : "string"
      },
      "SourceSetUpOption" : {
        "type" : "string",
        "enum" : [ "System_Controls_Mapping", "Procedural_Controls_Mapping" ]
      },
      "SourceType" : {
        "type" : "string",
        "enum" : [ "AWS_Cloudtrail", "AWS_Config", "AWS_Security_Hub", "AWS_API_Call", "MANUAL" ]
      },
      "SourceKeyword" : {
        "description" : " The keyword to search for in CloudTrail logs, Config rules, Security Hub checks, and Amazon Web Services API names. ",
        "properties" : {
          "keywordInputType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/KeywordInputType"
            }, {
              "description" : " The method of input for the specified keyword. "
            } ]
          },
          "keywordValue" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/KeywordValue"
            }, {
              "description" : " The value of the keyword used to search CloudTrail logs, Config rules, Security Hub checks, and Amazon Web Services API names when mapping a control data source. "
            } ]
          }
        },
        "type" : "object"
      },
      "SourceFrequency" : {
        "type" : "string",
        "enum" : [ "DAILY", "WEEKLY", "MONTHLY" ]
      },
      "TroubleshootingText" : {
        "maxLength" : 1000,
        "pattern" : "^[\\w\\W\\s\\S]*$",
        "type" : "string"
      },
      "ControlMetadata" : {
        "description" : " The metadata associated with the specified standard or custom control. ",
        "properties" : {
          "arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AuditManagerArn"
            }, {
              "description" : " The Amazon Resource Name (ARN) of the specified control. "
            } ]
          },
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The unique identifier for the specified control. "
            } ]
          },
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlName"
            }, {
              "description" : " The name of the specified control. "
            } ]
          },
          "controlSources" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlSources"
            }, {
              "description" : " The data source that determines from where Audit Manager collects evidence for the control. "
            } ]
          },
          "createdAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " Specifies when the control was created. "
            } ]
          },
          "lastUpdatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " Specifies when the control was most recently updated. "
            } ]
          }
        },
        "type" : "object"
      },
      "ControlMetadataList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ControlMetadata"
        }
      },
      "ControlSetName" : {
        "maxLength" : 300,
        "minLength" : 1,
        "pattern" : "^[^\\_]*$",
        "type" : "string"
      },
      "Controls" : {
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Control"
        }
      },
      "ControlSet" : {
        "description" : " A set of controls in Audit Manager. ",
        "properties" : {
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The identifier of the control set in the assessment. This is the control set name in a plain string format. "
            } ]
          },
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlSetName"
            }, {
              "description" : " The name of the control set. "
            } ]
          },
          "controls" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Controls"
            }, {
              "description" : " The list of controls within the control set. "
            } ]
          }
        },
        "type" : "object"
      },
      "ControlSets" : {
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ControlSet"
        }
      },
      "CreateAssessmentFrameworkControl" : {
        "description" : " Control entity attributes that uniquely identify an existing control to be added to a framework in Audit Manager. ",
        "properties" : {
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The unique identifier of the control. "
            } ]
          }
        },
        "type" : "object"
      },
      "CreateAssessmentFrameworkControls" : {
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CreateAssessmentFrameworkControl"
        }
      },
      "CreateAssessmentFrameworkControlSets" : {
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CreateAssessmentFrameworkControlSet"
        }
      },
      "CreateAssessmentFrameworkRequest" : {
        "properties" : {
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/FrameworkName"
            }, {
              "description" : " The name of the new custom framework. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/FrameworkDescription"
            }, {
              "description" : " An optional description for the new custom framework. "
            } ]
          },
          "complianceType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ComplianceType"
            }, {
              "description" : " The compliance type that the new custom framework supports, such as CIS or HIPAA. "
            } ]
          },
          "controlSets" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateAssessmentFrameworkControlSets"
            }, {
              "description" : " The control sets to be associated with the framework. "
            } ]
          },
          "tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagMap"
            }, {
              "description" : " The tags associated with the framework. "
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateAssessmentFrameworkRequest",
        "required" : [ "name", "controlSets" ]
      },
      "Framework" : {
        "description" : " The file used to structure and automate Audit Manager assessments for a given compliance standard. ",
        "properties" : {
          "arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AuditManagerArn"
            }, {
              "description" : " The Amazon Resource Name (ARN) of the specified framework. "
            } ]
          },
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The unique identifier for the specified framework. "
            } ]
          },
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/FrameworkName"
            }, {
              "description" : " The name of the specified framework. "
            } ]
          },
          "type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/FrameworkType"
            }, {
              "description" : " The framework type, such as custom or standard. "
            } ]
          },
          "complianceType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ComplianceType"
            }, {
              "description" : " The compliance type that the new custom framework supports, such as CIS or HIPAA. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/FrameworkDescription"
            }, {
              "description" : " The description of the specified framework. "
            } ]
          },
          "logo" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Filename"
            }, {
              "description" : " The logo associated with the framework. "
            } ]
          },
          "controlSources" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlSources"
            }, {
              "description" : " The sources from which Audit Manager collects evidence for the control. "
            } ]
          },
          "controlSets" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlSets"
            }, {
              "description" : " The control sets associated with the framework. "
            } ]
          },
          "createdAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " Specifies when the framework was created. "
            } ]
          },
          "lastUpdatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " Specifies when the framework was most recently updated. "
            } ]
          },
          "createdBy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreatedBy"
            }, {
              "description" : " The IAM user or role that created the framework. "
            } ]
          },
          "lastUpdatedBy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/LastUpdatedBy"
            }, {
              "description" : " The IAM user or role that most recently updated the framework. "
            } ]
          },
          "tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagMap"
            }, {
              "description" : " The tags associated with the framework. "
            } ]
          }
        },
        "type" : "object"
      },
      "CreateAssessmentReportRequest" : {
        "properties" : {
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentReportName"
            }, {
              "description" : " The name of the new assessment report. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentReportDescription"
            }, {
              "description" : " The description of the assessment report. "
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateAssessmentReportRequest",
        "required" : [ "name" ]
      },
      "CreateAssessmentRequest" : {
        "properties" : {
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentName"
            }, {
              "description" : " The name of the assessment to be created. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentDescription"
            }, {
              "description" : " The optional description of the assessment to be created. "
            } ]
          },
          "assessmentReportsDestination" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentReportsDestination"
            }, {
              "description" : " The assessment report storage destination for the specified assessment that is being created. "
            } ]
          },
          "scope" : {
            "$ref" : "#/components/schemas/Scope"
          },
          "roles" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Roles"
            }, {
              "description" : " The list of roles for the specified assessment. "
            } ]
          },
          "frameworkId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The identifier for the specified framework. "
            } ]
          },
          "tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagMap"
            }, {
              "description" : " The tags associated with the assessment. "
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateAssessmentRequest",
        "required" : [ "name", "assessmentReportsDestination", "scope", "roles", "frameworkId" ]
      },
      "CreateControlMappingSources" : {
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CreateControlMappingSource"
        }
      },
      "CreateControlRequest" : {
        "properties" : {
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlName"
            }, {
              "description" : " The name of the control. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlDescription"
            }, {
              "description" : " The description of the control. "
            } ]
          },
          "testingInformation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TestingInformation"
            }, {
              "description" : " The steps to follow to determine if the control has been satisfied. "
            } ]
          },
          "actionPlanTitle" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ActionPlanTitle"
            }, {
              "description" : " The title of the action plan for remediating the control. "
            } ]
          },
          "actionPlanInstructions" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ActionPlanInstructions"
            }, {
              "description" : " The recommended actions to carry out if the control is not fulfilled. "
            } ]
          },
          "controlMappingSources" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateControlMappingSources"
            }, {
              "description" : " The data mapping sources for the specified control. "
            } ]
          },
          "tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagMap"
            }, {
              "description" : " The tags associated with the control. "
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateControlRequest",
        "required" : [ "name", "controlMappingSources" ]
      },
      "DelegationComment" : {
        "maxLength" : 350,
        "pattern" : "^[\\w\\W\\s\\S]*$",
        "type" : "string"
      },
      "RoleType" : {
        "type" : "string",
        "enum" : [ "PROCESS_OWNER", "RESOURCE_OWNER" ]
      },
      "DelegationStatus" : {
        "type" : "string",
        "enum" : [ "IN_PROGRESS", "UNDER_REVIEW", "COMPLETE" ]
      },
      "Delegation" : {
        "description" : " The assignment of a control set to a delegate for review. ",
        "properties" : {
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The unique identifier for the delegation. "
            } ]
          },
          "assessmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentName"
            }, {
              "description" : " The name of the associated assessment. "
            } ]
          },
          "assessmentId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The identifier for the associated assessment. "
            } ]
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DelegationStatus"
            }, {
              "description" : " The status of the delegation. "
            } ]
          },
          "roleArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/IamArn"
            }, {
              "description" : " The Amazon Resource Name (ARN) of the IAM role. "
            } ]
          },
          "roleType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RoleType"
            }, {
              "description" : "<p> The type of customer persona. </p> <note> <p>In <code>CreateAssessment</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>. </p> <p>In <code>UpdateSettings</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>.</p> <p>In <code>BatchCreateDelegationByAssessment</code>, <code>roleType</code> can only be <code>RESOURCE_OWNER</code>.</p> </note>"
            } ]
          },
          "creationTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " Specifies when the delegation was created. "
            } ]
          },
          "lastUpdated" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " Specifies when the delegation was last updated. "
            } ]
          },
          "controlSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlSetId"
            }, {
              "description" : " The identifier for the associated control set. "
            } ]
          },
          "comment" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DelegationComment"
            }, {
              "description" : " The comment related to the delegation. "
            } ]
          },
          "createdBy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreatedBy"
            }, {
              "description" : " The IAM user or role that created the delegation. "
            } ]
          }
        },
        "type" : "object"
      },
      "DelegationMetadata" : {
        "description" : " The metadata associated with the specified delegation. ",
        "properties" : {
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The unique identifier for the delegation. "
            } ]
          },
          "assessmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentName"
            }, {
              "description" : " The name of the associated assessment. "
            } ]
          },
          "assessmentId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The unique identifier for the specified assessment. "
            } ]
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DelegationStatus"
            }, {
              "description" : " The current status of the delgation. "
            } ]
          },
          "roleArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/IamArn"
            }, {
              "description" : " The Amazon Resource Name (ARN) of the IAM role. "
            } ]
          },
          "creationTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " Specifies when the delegation was created. "
            } ]
          },
          "controlSetName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : " Specifies the name of the control set delegated for review. "
            } ]
          }
        },
        "type" : "object"
      },
      "DelegationMetadataList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/DelegationMetadata"
        }
      },
      "DeleteAssessmentFrameworkRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "DeleteAssessmentFrameworkRequest"
      },
      "DeleteAssessmentReportRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "DeleteAssessmentReportRequest"
      },
      "DeleteAssessmentRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "DeleteAssessmentRequest"
      },
      "DeleteControlRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "DeleteControlRequest"
      },
      "DeregisterAccountRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "DeregisterAccountRequest"
      },
      "DeregisterOrganizationAdminAccountRequest" : {
        "properties" : {
          "adminAccountId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountId"
            }, {
              "description" : " The identifier for the specified administrator account. "
            } ]
          }
        },
        "type" : "object",
        "title" : "DeregisterOrganizationAdminAccountRequest"
      },
      "DisassociateAssessmentReportEvidenceFolderRequest" : {
        "properties" : {
          "evidenceFolderId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The identifier for the folder in which evidence is stored. "
            } ]
          }
        },
        "type" : "object",
        "title" : "DisassociateAssessmentReportEvidenceFolderRequest",
        "required" : [ "evidenceFolderId" ]
      },
      "EventName" : {
        "maxLength" : 100,
        "pattern" : "^[\\w\\W\\s\\S]*$",
        "type" : "string"
      },
      "Resources" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Resource"
        }
      },
      "EvidenceAttributes" : {
        "type" : "object",
        "additionalProperties" : {
          "$ref" : "#/components/schemas/EvidenceAttributeValue"
        }
      },
      "Evidence" : {
        "description" : " A record that contains the information needed to demonstrate compliance with the requirements specified by a control. Examples of evidence include change activity triggered by a user, or a system configuration snapshot. ",
        "properties" : {
          "dataSource" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : " The data source from which the specified evidence was collected. "
            } ]
          },
          "evidenceAwsAccountId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountId"
            }, {
              "description" : " The identifier for the specified account. "
            } ]
          },
          "time" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " The timestamp that represents when the evidence was collected. "
            } ]
          },
          "eventSource" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AWSServiceName"
            }, {
              "description" : " The Amazon Web Service from which the evidence is collected. "
            } ]
          },
          "eventName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EventName"
            }, {
              "description" : " The name of the specified evidence event. "
            } ]
          },
          "evidenceByType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : " The type of automated evidence. "
            } ]
          },
          "resourcesIncluded" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resources"
            }, {
              "description" : " The list of resources assessed to generate the evidence. "
            } ]
          },
          "attributes" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EvidenceAttributes"
            }, {
              "description" : " The names and values used by the evidence event, including an attribute name (such as <code>allowUsersToChangePassword</code>) and value (such as <code>true</code> or <code>false</code>). "
            } ]
          },
          "iamId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/IamArn"
            }, {
              "description" : " The unique identifier for the IAM user or role associated with the evidence. "
            } ]
          },
          "complianceCheck" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : " The evaluation status for evidence that falls under the compliance check category. For evidence collected from Security Hub, a <i>Pass</i> or <i>Fail</i> result is shown. For evidence collected from Config, a <i>Compliant</i> or <i>Noncompliant</i> result is shown. "
            } ]
          },
          "awsOrganization" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : " The account from which the evidence is collected, and its organization path. "
            } ]
          },
          "awsAccountId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountId"
            }, {
              "description" : " The identifier for the specified account. "
            } ]
          },
          "evidenceFolderId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The identifier for the folder in which the evidence is stored. "
            } ]
          },
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The identifier for the evidence. "
            } ]
          },
          "assessmentReportSelection" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : " Specifies whether the evidence is included in the assessment report. "
            } ]
          }
        },
        "type" : "object"
      },
      "EvidenceAttributeKey" : {
        "maxLength" : 100,
        "pattern" : "^[\\w\\W\\s\\S]*$",
        "type" : "string"
      },
      "EvidenceAttributeValue" : {
        "maxLength" : 200,
        "pattern" : "^[\\w\\W\\s\\S]*$",
        "type" : "string"
      },
      "EvidenceList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Evidence"
        }
      },
      "FrameworkMetadataList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AssessmentFrameworkMetadata"
        }
      },
      "GenericArn" : {
        "maxLength" : 2048,
        "minLength" : 20,
        "pattern" : "^arn:.*",
        "type" : "string"
      },
      "GetAccountStatusRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetAccountStatusRequest"
      },
      "GetAssessmentFrameworkRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetAssessmentFrameworkRequest"
      },
      "GetAssessmentReportUrlRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetAssessmentReportUrlRequest"
      },
      "URL" : {
        "description" : " A uniform resource locator, used as a unique identifier to locate a resource on the internet. ",
        "properties" : {
          "hyperlinkName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/HyperlinkName"
            }, {
              "description" : " The name or word used as a hyperlink to the URL. "
            } ]
          },
          "link" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UrlLink"
            }, {
              "description" : " The unique identifier for the internet resource. "
            } ]
          }
        },
        "type" : "object"
      },
      "GetAssessmentRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetAssessmentRequest"
      },
      "Token" : {
        "maxLength" : 1000,
        "minLength" : 1,
        "pattern" : "^[A-Za-z0-9+\\/=]*$",
        "type" : "string"
      },
      "MaxResults" : {
        "description" : "Max results in the page.",
        "maximum" : 1000,
        "minimum" : 1,
        "type" : "integer"
      },
      "GetChangeLogsRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetChangeLogsRequest"
      },
      "GetControlRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetControlRequest"
      },
      "GetDelegationsRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetDelegationsRequest"
      },
      "GetEvidenceByEvidenceFolderRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetEvidenceByEvidenceFolderRequest"
      },
      "GetEvidenceFolderRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetEvidenceFolderRequest"
      },
      "GetEvidenceFoldersByAssessmentControlRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetEvidenceFoldersByAssessmentControlRequest"
      },
      "GetEvidenceFoldersByAssessmentRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetEvidenceFoldersByAssessmentRequest"
      },
      "GetEvidenceRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetEvidenceRequest"
      },
      "GetOrganizationAdminAccountRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetOrganizationAdminAccountRequest"
      },
      "organizationId" : {
        "maxLength" : 34,
        "minLength" : 12,
        "pattern" : "o-[a-z0-9]{10,32}",
        "type" : "string"
      },
      "GetServicesInScopeRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetServicesInScopeRequest"
      },
      "ServiceMetadataList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ServiceMetadata"
        }
      },
      "SettingAttribute" : {
        "type" : "string",
        "enum" : [ "ALL", "IS_AWS_ORG_ENABLED", "SNS_TOPIC", "DEFAULT_ASSESSMENT_REPORTS_DESTINATION", "DEFAULT_PROCESS_OWNERS" ]
      },
      "GetSettingsRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetSettingsRequest"
      },
      "Settings" : {
        "description" : " The settings object that holds all supported Audit Manager settings. ",
        "properties" : {
          "isAwsOrgEnabled" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Boolean"
            }, {
              "description" : " Specifies whether Organizations is enabled. "
            } ]
          },
          "snsTopic" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SNSTopic"
            }, {
              "description" : " The designated Amazon Simple Notification Service (Amazon SNS) topic. "
            } ]
          },
          "defaultAssessmentReportsDestination" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentReportsDestination"
            }, {
              "description" : " The default storage destination for assessment reports. "
            } ]
          },
          "defaultProcessOwners" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Roles"
            }, {
              "description" : " The designated default audit owners. "
            } ]
          },
          "kmsKey" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/KmsKey"
            }, {
              "description" : " The KMS key details. "
            } ]
          }
        },
        "type" : "object"
      },
      "HyperlinkName" : {
        "maxLength" : 200,
        "minLength" : 1,
        "pattern" : "^[\\w\\W\\s\\S]*$",
        "type" : "string"
      },
      "KeywordInputType" : {
        "type" : "string",
        "enum" : [ "SELECT_FROM_LIST" ]
      },
      "KeywordValue" : {
        "maxLength" : 100,
        "minLength" : 1,
        "pattern" : "^[a-zA-Z_0-9-\\s().]+$",
        "type" : "string"
      },
      "Keywords" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/KeywordValue"
        }
      },
      "KmsKey" : {
        "maxLength" : 2048,
        "minLength" : 7,
        "pattern" : "^arn:.*:kms:.*|DEFAULT",
        "type" : "string"
      },
      "ListAssessmentFrameworksRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "ListAssessmentFrameworksRequest"
      },
      "ListAssessmentMetadata" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AssessmentMetadataItem"
        }
      },
      "ListAssessmentReportsRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "ListAssessmentReportsRequest"
      },
      "ListAssessmentsRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "ListAssessmentsRequest"
      },
      "ListControlsRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "ListControlsRequest"
      },
      "ListKeywordsForDataSourceRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "ListKeywordsForDataSourceRequest"
      },
      "ListNotificationsRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "ListNotificationsRequest"
      },
      "Notifications" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Notification"
        }
      },
      "ListTagsForResourceRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "ListTagsForResourceRequest"
      },
      "TimestampUUID" : {
        "maxLength" : 50,
        "minLength" : 47,
        "pattern" : "^[0-9]{10,13}_[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
        "type" : "string"
      },
      "Notification" : {
        "description" : " The notification used to inform a user of an update in Audit Manager. For example, this includes the notification that is sent when a control set is delegated for review. ",
        "properties" : {
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TimestampUUID"
            }, {
              "description" : " The unique identifier for the notification. "
            } ]
          },
          "assessmentId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : " The identifier for the specified assessment. "
            } ]
          },
          "assessmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentName"
            }, {
              "description" : " The name of the related assessment. "
            } ]
          },
          "controlSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlSetId"
            }, {
              "description" : " The identifier for the specified control set. "
            } ]
          },
          "controlSetName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : " Specifies the name of the control set that the notification is about. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : " The description of the notification. "
            } ]
          },
          "eventTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : " The time when the notification was sent. "
            } ]
          },
          "source" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : " The sender of the notification. "
            } ]
          }
        },
        "type" : "object"
      },
      "RegisterAccountRequest" : {
        "properties" : {
          "kmsKey" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/KmsKey"
            }, {
              "description" : " The KMS key details. "
            } ]
          },
          "delegatedAdminAccount" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountId"
            }, {
              "description" : " The delegated administrator account for Audit Manager. "
            } ]
          }
        },
        "type" : "object",
        "title" : "RegisterAccountRequest"
      },
      "RegisterOrganizationAdminAccountRequest" : {
        "properties" : {
          "adminAccountId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountId"
            }, {
              "description" : " The identifier for the specified delegated administrator account. "
            } ]
          }
        },
        "type" : "object",
        "title" : "RegisterOrganizationAdminAccountRequest",
        "required" : [ "adminAccountId" ]
      },
      "Resource" : {
        "description" : " A system asset that is evaluated in an Audit Manager assessment. ",
        "properties" : {
          "arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GenericArn"
            }, {
              "description" : " The Amazon Resource Name (ARN) for the specified resource. "
            } ]
          },
          "value" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : " The value of the specified resource. "
            } ]
          }
        },
        "type" : "object"
      },
      "SNSTopic" : {
        "maxLength" : 255,
        "minLength" : 1,
        "pattern" : "^[a-zA-Z0-9-_\\(\\)\\[\\]]+$",
        "type" : "string"
      },
      "ServiceMetadata" : {
        "description" : " The metadata associated with the specified Amazon Web Service. ",
        "properties" : {
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AWSServiceName"
            }, {
              "description" : " The name of the Amazon Web Service. "
            } ]
          },
          "displayName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : " The display name of the Amazon Web Service. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : " The description of the specified Amazon Web Service. "
            } ]
          },
          "category" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : " The category in which the Amazon Web Service belongs, such as compute, storage, database, and so on. "
            } ]
          }
        },
        "type" : "object"
      },
      "SnsArn" : {
        "maxLength" : 2048,
        "minLength" : 20,
        "pattern" : "^arn:.*:sns:.*",
        "type" : "string"
      },
      "TagKeyList" : {
        "maxItems" : 50,
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/TagKey"
        }
      },
      "TagResourceRequest" : {
        "properties" : {
          "tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagMap"
            }, {
              "description" : " The tags to be associated with the resource. "
            } ]
          }
        },
        "type" : "object",
        "title" : "TagResourceRequest",
        "required" : [ "tags" ]
      },
      "UrlLink" : {
        "maxLength" : 8192,
        "minLength" : 1,
        "pattern" : "^(https?:\\/\\/)?(www\\.)?[a-zA-Z0-9-_]+([\\.]+[a-zA-Z]+)+[\\/\\w]*$",
        "type" : "string"
      },
      "UntagResourceRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "UntagResourceRequest"
      },
      "UpdateAssessmentControlRequest" : {
        "properties" : {
          "controlStatus" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlStatus"
            }, {
              "description" : " The status of the specified control. "
            } ]
          },
          "commentBody" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlCommentBody"
            }, {
              "description" : " The comment body text for the specified control. "
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateAssessmentControlRequest"
      },
      "UpdateAssessmentControlSetStatusRequest" : {
        "properties" : {
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlSetStatus"
            }, {
              "description" : " The status of the control set that is being updated. "
            } ]
          },
          "comment" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DelegationComment"
            }, {
              "description" : " The comment related to the status update. "
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateAssessmentControlSetStatusRequest",
        "required" : [ "status", "comment" ]
      },
      "UpdateAssessmentFrameworkControlSets" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/UpdateAssessmentFrameworkControlSet"
        }
      },
      "UpdateAssessmentFrameworkRequest" : {
        "properties" : {
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/FrameworkName"
            }, {
              "description" : " The name of the framework to be updated. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/FrameworkDescription"
            }, {
              "description" : " The description of the framework that is to be updated. "
            } ]
          },
          "complianceType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ComplianceType"
            }, {
              "description" : " The compliance type that the new custom framework supports, such as CIS or HIPAA. "
            } ]
          },
          "controlSets" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateAssessmentFrameworkControlSets"
            }, {
              "description" : " The control sets associated with the framework. "
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateAssessmentFrameworkRequest",
        "required" : [ "name", "controlSets" ]
      },
      "UpdateAssessmentRequest" : {
        "properties" : {
          "assessmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentName"
            }, {
              "description" : " The name of the specified assessment to be updated. "
            } ]
          },
          "assessmentDescription" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentDescription"
            }, {
              "description" : " The description of the specified assessment. "
            } ]
          },
          "scope" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Scope"
            }, {
              "description" : " The scope of the specified assessment. "
            } ]
          },
          "assessmentReportsDestination" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentReportsDestination"
            }, {
              "description" : " The assessment report storage destination for the specified assessment that is being updated. "
            } ]
          },
          "roles" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Roles"
            }, {
              "description" : " The list of roles for the specified assessment. "
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateAssessmentRequest",
        "required" : [ "scope" ]
      },
      "UpdateAssessmentStatusRequest" : {
        "properties" : {
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentStatus"
            }, {
              "description" : " The current status of the specified assessment. "
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateAssessmentStatusRequest",
        "required" : [ "status" ]
      },
      "UpdateControlRequest" : {
        "properties" : {
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlName"
            }, {
              "description" : " The name of the control to be updated. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlDescription"
            }, {
              "description" : " The optional description of the control. "
            } ]
          },
          "testingInformation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TestingInformation"
            }, {
              "description" : " The steps that to follow to determine if the control has been satisfied. "
            } ]
          },
          "actionPlanTitle" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ActionPlanTitle"
            }, {
              "description" : " The title of the action plan for remediating the control. "
            } ]
          },
          "actionPlanInstructions" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ActionPlanInstructions"
            }, {
              "description" : " The recommended actions to carry out if the control is not fulfilled. "
            } ]
          },
          "controlMappingSources" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ControlMappingSources"
            }, {
              "description" : " The data mapping sources for the specified control. "
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateControlRequest",
        "required" : [ "name", "controlMappingSources" ]
      },
      "UpdateSettingsRequest" : {
        "properties" : {
          "snsTopic" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SnsArn"
            }, {
              "description" : " The Amazon Simple Notification Service (Amazon SNS) topic to which Audit Manager sends notifications. "
            } ]
          },
          "defaultAssessmentReportsDestination" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssessmentReportsDestination"
            }, {
              "description" : " The default storage destination for assessment reports. "
            } ]
          },
          "defaultProcessOwners" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Roles"
            }, {
              "description" : " A list of the default audit owners. "
            } ]
          },
          "kmsKey" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/KmsKey"
            }, {
              "description" : " The KMS key details. "
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateSettingsRequest"
      },
      "ValidateAssessmentReportIntegrityRequest" : {
        "properties" : {
          "s3RelativePath" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/S3Url"
            }, {
              "description" : " The relative path of the specified Amazon S3 bucket in which the assessment report is stored. "
            } ]
          }
        },
        "type" : "object",
        "title" : "ValidateAssessmentReportIntegrityRequest",
        "required" : [ "s3RelativePath" ]
      },
      "ValidationErrors" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/NonEmptyString"
        }
      }
    },
    "securitySchemes" : {
      "hmac" : {
        "type" : "apiKey",
        "description" : "Amazon Signature authorization v4",
        "name" : "Authorization",
        "in" : "header",
        "x-amazon-apigateway-authtype" : "awsSigv4"
      }
    }
  },
  "externalDocs" : {
    "description" : "Amazon Web Services documentation",
    "url" : "https://docs.aws.amazon.com/auditmanager/"
  },
  "security" : [ {
    "hmac" : [ ]
  } ],
  "x-hasEquivalentPaths" : true
}