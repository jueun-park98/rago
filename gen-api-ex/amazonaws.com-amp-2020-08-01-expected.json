{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "mike.ralphson@gmail.com",
      "name" : "Mike Ralphson",
      "url" : "https://github.com/mermade/aws2openapi",
      "x-twitter" : "PermittedSoc"
    },
    "description" : "Amazon Managed Service for Prometheus",
    "license" : {
      "name" : "Apache 2.0 License",
      "url" : "http://www.apache.org/licenses/"
    },
    "termsOfService" : "https://aws.amazon.com/service-terms/",
    "title" : "Amazon Prometheus Service",
    "version" : "2020-08-01",
    "x-providerName" : "amazonaws.com",
    "x-logo" : {
      "url" : "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png",
      "backgroundColor" : "#FFFFFF"
    },
    "x-aws-signingName" : "aps",
    "x-apiClientRegistration" : {
      "url" : "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-preferred" : true,
    "x-release" : "v4",
    "x-apisguru-categories" : [ "cloud" ],
    "x-serviceName" : "amp",
    "x-origin" : [ {
      "contentType" : "application/json",
      "url" : "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/amp-2020-08-01.normal.json",
      "converter" : {
        "url" : "https://github.com/mermade/aws2openapi",
        "version" : "1.0.0"
      },
      "x-apisguru-driver" : "external"
    } ]
  },
  "servers" : [ {
    "url" : "http://aps.{region}.amazonaws.com",
    "description" : "The Amazon Prometheus Service multi-region endpoint",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "us-east-1",
        "enum" : [ "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-west-1", "us-gov-east-1", "ca-central-1", "eu-north-1", "eu-west-1", "eu-west-2", "eu-west-3", "eu-central-1", "eu-south-1", "af-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ap-east-1", "ap-south-1", "sa-east-1", "me-south-1" ]
      }
    }
  }, {
    "url" : "https://aps.{region}.amazonaws.com",
    "description" : "The Amazon Prometheus Service multi-region endpoint",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "us-east-1",
        "enum" : [ "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-west-1", "us-gov-east-1", "ca-central-1", "eu-north-1", "eu-west-1", "eu-west-2", "eu-west-3", "eu-central-1", "eu-south-1", "af-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ap-east-1", "ap-south-1", "sa-east-1", "me-south-1" ]
      }
    }
  }, {
    "url" : "http://aps.{region}.amazonaws.com.cn",
    "description" : "The Amazon Prometheus Service endpoint for China (Beijing) and China (Ningxia)",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "cn-north-1",
        "enum" : [ "cn-north-1", "cn-northwest-1" ]
      }
    }
  }, {
    "url" : "https://aps.{region}.amazonaws.com.cn",
    "description" : "The Amazon Prometheus Service endpoint for China (Beijing) and China (Ningxia)",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "cn-north-1",
        "enum" : [ "cn-north-1", "cn-northwest-1" ]
      }
    }
  } ],
  "paths" : {
    "/workspaces" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Lists all AMP workspaces, including workspaces being created or deleted.",
        "operationId" : "ListWorkspaces",
        "parameters" : [ {
          "description" : "Optional filter for workspace alias. Only the workspaces with aliases that begin with this value will be returned.",
          "required" : false,
          "schema" : {
            "description" : "A user-assigned workspace alias.",
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "in" : "query",
          "name" : "alias"
        }, {
          "description" : "Maximum results to return in response (default=100, maximum=1000).",
          "required" : false,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        }, {
          "description" : "Pagination token to request the next page in a paginated list. This token is obtained from the output of the previous ListWorkspaces request.",
          "required" : false,
          "schema" : {
            "description" : "A token used to access the next page in a paginated result set.",
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListWorkspacesResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new AMP workspace.",
        "operationId" : "CreateWorkspace",
        "parameters" : [ ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "alias" : {
                    "description" : "A user-assigned workspace alias.",
                    "maxLength" : 100,
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "clientToken" : {
                    "description" : "An identifier used to ensure the idempotency of a write request.",
                    "maxLength" : 64,
                    "minLength" : 1,
                    "pattern" : "[!-~]+",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateWorkspaceResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "481" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "483" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "484" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceQuotaExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceQuotaExceededException"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Describes an existing AMP workspace.",
        "operationId" : "DescribeWorkspace",
        "parameters" : [ {
          "description" : "The ID of the workspace to describe.",
          "required" : true,
          "schema" : {
            "description" : "A workspace ID.",
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[0-9A-Za-z][-.0-9A-Z_a-z]*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "workspaceId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DescribeWorkspaceResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "484" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes an AMP workspace.",
        "operationId" : "DeleteWorkspace",
        "parameters" : [ {
          "description" : "Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.",
          "required" : false,
          "schema" : {
            "description" : "An identifier used to ensure the idempotency of a write request.",
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[!-~]+",
            "type" : "string"
          },
          "in" : "query",
          "name" : "clientToken"
        }, {
          "description" : "The ID of the workspace to delete.",
          "required" : true,
          "schema" : {
            "description" : "A workspace ID.",
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[0-9A-Za-z][-.0-9A-Z_a-z]*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "workspaceId"
        } ],
        "responses" : {
          "202" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "484" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/alias" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Updates an AMP workspace alias.",
        "operationId" : "UpdateWorkspaceAlias",
        "parameters" : [ {
          "description" : "The ID of the workspace being updated.",
          "required" : true,
          "schema" : {
            "description" : "A workspace ID.",
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "[0-9A-Za-z][-.0-9A-Z_a-z]*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "workspaceId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "alias" : {
                    "description" : "A user-assigned workspace alias.",
                    "maxLength" : 100,
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "clientToken" : {
                    "description" : "An identifier used to ensure the idempotency of a write request.",
                    "maxLength" : 64,
                    "minLength" : 1,
                    "pattern" : "[!-~]+",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "481" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "484" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "485" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceQuotaExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceQuotaExceededException"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "parameters" : {
      "X-Amz-Content-Sha256" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Content-Sha256"
      },
      "X-Amz-Date" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Date"
      },
      "X-Amz-Algorithm" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Algorithm"
      },
      "X-Amz-Credential" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Credential"
      },
      "X-Amz-Security-Token" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Security-Token"
      },
      "X-Amz-Signature" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-SignedHeaders"
      }
    },
    "schemas" : {
      "CreateWorkspaceResponse" : {
        "description" : "Represents the output of a CreateWorkspace operation.",
        "properties" : {
          "arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WorkspaceArn"
            }, {
              "description" : "The ARN of the workspace that was just created."
            } ]
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WorkspaceStatus"
            }, {
              "description" : "The status of the workspace that was just created (usually CREATING)."
            } ]
          },
          "workspaceId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WorkspaceId"
            }, {
              "description" : "The generated ID of the workspace that was just created."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "arn", "status", "workspaceId" ]
      },
      "ThrottlingException" : { },
      "ConflictException" : { },
      "ValidationException" : { },
      "AccessDeniedException" : { },
      "InternalServerException" : { },
      "ServiceQuotaExceededException" : { },
      "ResourceNotFoundException" : { },
      "DescribeWorkspaceResponse" : {
        "description" : "Represents the output of a DescribeWorkspace operation.",
        "properties" : {
          "workspace" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WorkspaceDescription"
            }, {
              "description" : "The properties of the selected workspace."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "workspace" ]
      },
      "ListWorkspacesResponse" : {
        "description" : "Represents the output of a ListWorkspaces operation.",
        "properties" : {
          "nextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PaginationToken"
            }, {
              "description" : "Pagination token to use when requesting the next page in this list."
            } ]
          },
          "workspaces" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WorkspaceSummaryList"
            }, {
              "description" : "The list of existing workspaces, including those undergoing creation or deletion."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "workspaces" ]
      },
      "WorkspaceAlias" : {
        "description" : "A user-assigned workspace alias.",
        "maxLength" : 100,
        "minLength" : 1,
        "type" : "string"
      },
      "IdempotencyToken" : {
        "description" : "An identifier used to ensure the idempotency of a write request.",
        "maxLength" : 64,
        "minLength" : 1,
        "pattern" : "[!-~]+",
        "type" : "string"
      },
      "CreateWorkspaceRequest" : {
        "description" : "Represents the input of a CreateWorkspace operation.",
        "properties" : {
          "alias" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WorkspaceAlias"
            }, {
              "description" : "An optional user-assigned alias for this workspace. This alias is for user reference and does not need to be unique."
            } ]
          },
          "clientToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/IdempotencyToken"
            }, {
              "description" : "Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateWorkspaceRequest"
      },
      "WorkspaceArn" : {
        "description" : "An ARN identifying a Workspace.",
        "type" : "string"
      },
      "WorkspaceStatus" : {
        "description" : "Represents the status of a workspace.",
        "properties" : {
          "statusCode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WorkspaceStatusCode"
            }, {
              "description" : "Status code of this workspace."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "statusCode" ]
      },
      "WorkspaceId" : {
        "description" : "A workspace ID.",
        "maxLength" : 64,
        "minLength" : 1,
        "pattern" : "[0-9A-Za-z][-.0-9A-Z_a-z]*",
        "type" : "string"
      },
      "DeleteWorkspaceRequest" : {
        "description" : "Represents the input of a DeleteWorkspace operation.",
        "properties" : { },
        "type" : "object",
        "title" : "DeleteWorkspaceRequest"
      },
      "DescribeWorkspaceRequest" : {
        "description" : "Represents the input of a DescribeWorkspace operation.",
        "properties" : { },
        "type" : "object",
        "title" : "DescribeWorkspaceRequest"
      },
      "WorkspaceDescription" : {
        "description" : "Represents the properties of a workspace.",
        "properties" : {
          "alias" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WorkspaceAlias"
            }, {
              "description" : "Alias of this workspace."
            } ]
          },
          "arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WorkspaceArn"
            }, {
              "description" : "The Amazon Resource Name (ARN) of this workspace."
            } ]
          },
          "createdAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time when the workspace was created."
            } ]
          },
          "prometheusEndpoint" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Uri"
            }, {
              "description" : "Prometheus endpoint URI."
            } ]
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WorkspaceStatus"
            }, {
              "description" : "The status of this workspace."
            } ]
          },
          "workspaceId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WorkspaceId"
            }, {
              "description" : "Unique string identifying this workspace."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "arn", "createdAt", "status", "workspaceId" ]
      },
      "ListWorkspacesRequestMaxResultsInteger" : {
        "maximum" : 1000,
        "minimum" : 1,
        "type" : "integer"
      },
      "PaginationToken" : {
        "description" : "A token used to access the next page in a paginated result set.",
        "type" : "string"
      },
      "ListWorkspacesRequest" : {
        "description" : "Represents the input of a ListWorkspaces operation.",
        "properties" : { },
        "type" : "object",
        "title" : "ListWorkspacesRequest"
      },
      "WorkspaceSummaryList" : {
        "description" : "A list of workspace summaries.",
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/WorkspaceSummary"
        }
      },
      "Timestamp" : {
        "format" : "date-time",
        "type" : "string"
      },
      "UpdateWorkspaceAliasRequest" : {
        "description" : "Represents the input of an UpdateWorkspaceAlias operation.",
        "properties" : {
          "alias" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WorkspaceAlias"
            }, {
              "description" : "The new alias of the workspace."
            } ]
          },
          "clientToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/IdempotencyToken"
            }, {
              "description" : "Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateWorkspaceAliasRequest"
      },
      "Uri" : {
        "maxLength" : 1024,
        "minLength" : 1,
        "type" : "string"
      },
      "WorkspaceStatusCode" : {
        "description" : "State of a workspace.",
        "type" : "string",
        "enum" : [ "CREATING", "ACTIVE", "UPDATING", "DELETING", "CREATION_FAILED" ]
      },
      "WorkspaceSummary" : {
        "description" : "Represents a summary of the properties of a workspace.",
        "properties" : {
          "alias" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WorkspaceAlias"
            }, {
              "description" : "Alias of this workspace."
            } ]
          },
          "arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WorkspaceArn"
            }, {
              "description" : "The AmazonResourceName of this workspace."
            } ]
          },
          "createdAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time when the workspace was created."
            } ]
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WorkspaceStatus"
            }, {
              "description" : "The status of this workspace."
            } ]
          },
          "workspaceId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WorkspaceId"
            }, {
              "description" : "Unique string identifying this workspace."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "arn", "createdAt", "status", "workspaceId" ]
      }
    },
    "securitySchemes" : {
      "hmac" : {
        "type" : "apiKey",
        "description" : "Amazon Signature authorization v4",
        "name" : "Authorization",
        "in" : "header",
        "x-amazon-apigateway-authtype" : "awsSigv4"
      }
    }
  },
  "externalDocs" : {
    "description" : "Amazon Web Services documentation",
    "url" : "https://docs.aws.amazon.com/aps/"
  },
  "security" : [ {
    "hmac" : [ ]
  } ]
}