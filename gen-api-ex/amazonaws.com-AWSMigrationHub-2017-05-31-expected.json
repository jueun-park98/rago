{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "mike.ralphson@gmail.com",
      "name" : "Mike Ralphson",
      "url" : "https://github.com/mermade/aws2openapi",
      "x-twitter" : "PermittedSoc"
    },
    "description" : "<p>The AWS Migration Hub API methods help to obtain server and application migration status and integrate your resource-specific migration tool by providing a programmatic interface to Migration Hub.</p> <p>Remember that you must set your AWS Migration Hub home region before you call any of these APIs, or a <code>HomeRegionNotSetException</code> error will be returned. Also, you must make the API calls while in your home region.</p>",
    "license" : {
      "name" : "Apache 2.0 License",
      "url" : "http://www.apache.org/licenses/"
    },
    "termsOfService" : "https://aws.amazon.com/service-terms/",
    "title" : "AWS Migration Hub",
    "version" : "2017-05-31",
    "x-providerName" : "amazonaws.com",
    "x-logo" : {
      "url" : "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png",
      "backgroundColor" : "#FFFFFF"
    },
    "x-apiClientRegistration" : {
      "url" : "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-preferred" : true,
    "x-release" : "v4",
    "x-apisguru-categories" : [ "cloud" ],
    "x-serviceName" : "AWSMigrationHub",
    "x-origin" : [ {
      "contentType" : "application/json",
      "url" : "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/AWSMigrationHub-2017-05-31.normal.json",
      "converter" : {
        "url" : "https://github.com/mermade/aws2openapi",
        "version" : "1.0.0"
      },
      "x-apisguru-driver" : "external"
    } ]
  },
  "servers" : [ {
    "url" : "http://mgh.{region}.amazonaws.com",
    "description" : "The AWS Migration Hub multi-region endpoint",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "us-east-1",
        "enum" : [ "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-west-1", "us-gov-east-1", "ca-central-1", "eu-north-1", "eu-west-1", "eu-west-2", "eu-west-3", "eu-central-1", "eu-south-1", "af-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ap-east-1", "ap-south-1", "sa-east-1", "me-south-1" ]
      }
    }
  }, {
    "url" : "https://mgh.{region}.amazonaws.com",
    "description" : "The AWS Migration Hub multi-region endpoint",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "us-east-1",
        "enum" : [ "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-west-1", "us-gov-east-1", "ca-central-1", "eu-north-1", "eu-west-1", "eu-west-2", "eu-west-3", "eu-central-1", "eu-south-1", "af-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ap-east-1", "ap-south-1", "sa-east-1", "me-south-1" ]
      }
    }
  }, {
    "url" : "http://mgh.{region}.amazonaws.com.cn",
    "description" : "The AWS Migration Hub endpoint for China (Beijing) and China (Ningxia)",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "cn-north-1",
        "enum" : [ "cn-north-1", "cn-northwest-1" ]
      }
    }
  }, {
    "url" : "https://mgh.{region}.amazonaws.com.cn",
    "description" : "The AWS Migration Hub endpoint for China (Beijing) and China (Ningxia)",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "cn-north-1",
        "enum" : [ "cn-north-1", "cn-northwest-1" ]
      }
    }
  } ],
  "paths" : {
    "/#X-Amz-Target=AWSMigrationHub.AssociateCreatedArtifact" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "<p>Associates a created artifact of an AWS cloud resource, the target receiving the migration, with the migration task performed by a migration tool. This API has the following traits:</p> <ul> <li> <p>Migration tools can call the <code>AssociateCreatedArtifact</code> operation to indicate which AWS artifact is associated with a migration task.</p> </li> <li> <p>The created artifact name must be provided in ARN (Amazon Resource Name) format which will contain information about type and region; for example: <code>arn:aws:ec2:us-east-1:488216288981:image/ami-6d0ba87b</code>.</p> </li> <li> <p>Examples of the AWS resource behind the created artifact are, AMI's, EC2 instance, or DMS endpoint, etc.</p> </li> </ul>",
        "operationId" : "AssociateCreatedArtifact",
        "parameters" : [ {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "AWSMigrationHub.AssociateCreatedArtifact" ]
          },
          "in" : "header",
          "name" : "X-Amz-Target"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssociateCreatedArtifactRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociateCreatedArtifactResult"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerError",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "483" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "484" : {
            "description" : "DryRunOperation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DryRunOperation"
                }
              }
            }
          },
          "485" : {
            "description" : "UnauthorizedOperation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedOperation"
                }
              }
            }
          },
          "486" : {
            "description" : "InvalidInputException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidInputException"
                }
              }
            }
          },
          "487" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "488" : {
            "description" : "HomeRegionNotSetException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HomeRegionNotSetException"
                }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSMigrationHub.AssociateDiscoveredResource" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Associates a discovered resource ID from Application Discovery Service with a migration task.",
        "operationId" : "AssociateDiscoveredResource",
        "parameters" : [ {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "AWSMigrationHub.AssociateDiscoveredResource" ]
          },
          "in" : "header",
          "name" : "X-Amz-Target"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssociateDiscoveredResourceRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociateDiscoveredResourceResult"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerError",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "483" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "484" : {
            "description" : "DryRunOperation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DryRunOperation"
                }
              }
            }
          },
          "485" : {
            "description" : "UnauthorizedOperation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedOperation"
                }
              }
            }
          },
          "486" : {
            "description" : "InvalidInputException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidInputException"
                }
              }
            }
          },
          "487" : {
            "description" : "PolicyErrorException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyErrorException"
                }
              }
            }
          },
          "488" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "489" : {
            "description" : "HomeRegionNotSetException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HomeRegionNotSetException"
                }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSMigrationHub.CreateProgressUpdateStream" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Creates a progress update stream which is an AWS resource used for access control as well as a namespace for migration task names that is implicitly linked to your AWS account. It must uniquely identify the migration tool as it is used for all updates made by the tool; however, it does not need to be unique for each AWS account because it is scoped to the AWS account.",
        "operationId" : "CreateProgressUpdateStream",
        "parameters" : [ {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "AWSMigrationHub.CreateProgressUpdateStream" ]
          },
          "in" : "header",
          "name" : "X-Amz-Target"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateProgressUpdateStreamRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateProgressUpdateStreamResult"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerError",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "483" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "484" : {
            "description" : "DryRunOperation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DryRunOperation"
                }
              }
            }
          },
          "485" : {
            "description" : "UnauthorizedOperation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedOperation"
                }
              }
            }
          },
          "486" : {
            "description" : "InvalidInputException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidInputException"
                }
              }
            }
          },
          "487" : {
            "description" : "HomeRegionNotSetException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HomeRegionNotSetException"
                }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSMigrationHub.DeleteProgressUpdateStream" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "<p>Deletes a progress update stream, including all of its tasks, which was previously created as an AWS resource used for access control. This API has the following traits:</p> <ul> <li> <p>The only parameter needed for <code>DeleteProgressUpdateStream</code> is the stream name (same as a <code>CreateProgressUpdateStream</code> call).</p> </li> <li> <p>The call will return, and a background process will asynchronously delete the stream and all of its resources (tasks, associated resources, resource attributes, created artifacts).</p> </li> <li> <p>If the stream takes time to be deleted, it might still show up on a <code>ListProgressUpdateStreams</code> call.</p> </li> <li> <p> <code>CreateProgressUpdateStream</code>, <code>ImportMigrationTask</code>, <code>NotifyMigrationTaskState</code>, and all Associate[*] APIs related to the tasks belonging to the stream will throw \"InvalidInputException\" if the stream of the same name is in the process of being deleted.</p> </li> <li> <p>Once the stream and all of its resources are deleted, <code>CreateProgressUpdateStream</code> for a stream of the same name will succeed, and that stream will be an entirely new logical resource (without any resources associated with the old stream).</p> </li> </ul>",
        "operationId" : "DeleteProgressUpdateStream",
        "parameters" : [ {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "AWSMigrationHub.DeleteProgressUpdateStream" ]
          },
          "in" : "header",
          "name" : "X-Amz-Target"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeleteProgressUpdateStreamRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteProgressUpdateStreamResult"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerError",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "483" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "484" : {
            "description" : "DryRunOperation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DryRunOperation"
                }
              }
            }
          },
          "485" : {
            "description" : "UnauthorizedOperation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedOperation"
                }
              }
            }
          },
          "486" : {
            "description" : "InvalidInputException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidInputException"
                }
              }
            }
          },
          "487" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "488" : {
            "description" : "HomeRegionNotSetException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HomeRegionNotSetException"
                }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSMigrationHub.DescribeApplicationState" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Gets the migration status of an application.",
        "operationId" : "DescribeApplicationState",
        "parameters" : [ {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "AWSMigrationHub.DescribeApplicationState" ]
          },
          "in" : "header",
          "name" : "X-Amz-Target"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DescribeApplicationStateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DescribeApplicationStateResult"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerError",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "483" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "484" : {
            "description" : "InvalidInputException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidInputException"
                }
              }
            }
          },
          "485" : {
            "description" : "PolicyErrorException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyErrorException"
                }
              }
            }
          },
          "486" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "487" : {
            "description" : "HomeRegionNotSetException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HomeRegionNotSetException"
                }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSMigrationHub.DescribeMigrationTask" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Retrieves a list of all attributes associated with a specific migration task.",
        "operationId" : "DescribeMigrationTask",
        "parameters" : [ {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "AWSMigrationHub.DescribeMigrationTask" ]
          },
          "in" : "header",
          "name" : "X-Amz-Target"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DescribeMigrationTaskRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DescribeMigrationTaskResult"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerError",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "483" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "484" : {
            "description" : "InvalidInputException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidInputException"
                }
              }
            }
          },
          "485" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "486" : {
            "description" : "HomeRegionNotSetException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HomeRegionNotSetException"
                }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSMigrationHub.DisassociateCreatedArtifact" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "<p>Disassociates a created artifact of an AWS resource with a migration task performed by a migration tool that was previously associated. This API has the following traits:</p> <ul> <li> <p>A migration user can call the <code>DisassociateCreatedArtifacts</code> operation to disassociate a created AWS Artifact from a migration task.</p> </li> <li> <p>The created artifact name must be provided in ARN (Amazon Resource Name) format which will contain information about type and region; for example: <code>arn:aws:ec2:us-east-1:488216288981:image/ami-6d0ba87b</code>.</p> </li> <li> <p>Examples of the AWS resource behind the created artifact are, AMI's, EC2 instance, or RDS instance, etc.</p> </li> </ul>",
        "operationId" : "DisassociateCreatedArtifact",
        "parameters" : [ {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "AWSMigrationHub.DisassociateCreatedArtifact" ]
          },
          "in" : "header",
          "name" : "X-Amz-Target"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DisassociateCreatedArtifactRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DisassociateCreatedArtifactResult"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerError",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "483" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "484" : {
            "description" : "DryRunOperation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DryRunOperation"
                }
              }
            }
          },
          "485" : {
            "description" : "UnauthorizedOperation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedOperation"
                }
              }
            }
          },
          "486" : {
            "description" : "InvalidInputException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidInputException"
                }
              }
            }
          },
          "487" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "488" : {
            "description" : "HomeRegionNotSetException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HomeRegionNotSetException"
                }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSMigrationHub.DisassociateDiscoveredResource" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Disassociate an Application Discovery Service discovered resource from a migration task.",
        "operationId" : "DisassociateDiscoveredResource",
        "parameters" : [ {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "AWSMigrationHub.DisassociateDiscoveredResource" ]
          },
          "in" : "header",
          "name" : "X-Amz-Target"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DisassociateDiscoveredResourceRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DisassociateDiscoveredResourceResult"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerError",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "483" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "484" : {
            "description" : "DryRunOperation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DryRunOperation"
                }
              }
            }
          },
          "485" : {
            "description" : "UnauthorizedOperation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedOperation"
                }
              }
            }
          },
          "486" : {
            "description" : "InvalidInputException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidInputException"
                }
              }
            }
          },
          "487" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "488" : {
            "description" : "HomeRegionNotSetException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HomeRegionNotSetException"
                }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSMigrationHub.ImportMigrationTask" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "<p>Registers a new migration task which represents a server, database, etc., being migrated to AWS by a migration tool.</p> <p>This API is a prerequisite to calling the <code>NotifyMigrationTaskState</code> API as the migration tool must first register the migration task with Migration Hub.</p>",
        "operationId" : "ImportMigrationTask",
        "parameters" : [ {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "AWSMigrationHub.ImportMigrationTask" ]
          },
          "in" : "header",
          "name" : "X-Amz-Target"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImportMigrationTaskRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportMigrationTaskResult"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerError",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "483" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "484" : {
            "description" : "DryRunOperation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DryRunOperation"
                }
              }
            }
          },
          "485" : {
            "description" : "UnauthorizedOperation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedOperation"
                }
              }
            }
          },
          "486" : {
            "description" : "InvalidInputException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidInputException"
                }
              }
            }
          },
          "487" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "488" : {
            "description" : "HomeRegionNotSetException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HomeRegionNotSetException"
                }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSMigrationHub.ListApplicationStates" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Lists all the migration statuses for your applications. If you use the optional <code>ApplicationIds</code> parameter, only the migration statuses for those applications will be returned.",
        "operationId" : "ListApplicationStates",
        "parameters" : [ {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "AWSMigrationHub.ListApplicationStates" ]
          },
          "in" : "header",
          "name" : "X-Amz-Target"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListApplicationStatesRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListApplicationStatesResult"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerError",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "483" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "484" : {
            "description" : "InvalidInputException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidInputException"
                }
              }
            }
          },
          "485" : {
            "description" : "HomeRegionNotSetException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HomeRegionNotSetException"
                }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSMigrationHub.ListCreatedArtifacts" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "<p>Lists the created artifacts attached to a given migration task in an update stream. This API has the following traits:</p> <ul> <li> <p>Gets the list of the created artifacts while migration is taking place.</p> </li> <li> <p>Shows the artifacts created by the migration tool that was associated by the <code>AssociateCreatedArtifact</code> API. </p> </li> <li> <p>Lists created artifacts in a paginated interface. </p> </li> </ul>",
        "operationId" : "ListCreatedArtifacts",
        "parameters" : [ {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "AWSMigrationHub.ListCreatedArtifacts" ]
          },
          "in" : "header",
          "name" : "X-Amz-Target"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListCreatedArtifactsRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListCreatedArtifactsResult"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerError",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "483" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "484" : {
            "description" : "InvalidInputException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidInputException"
                }
              }
            }
          },
          "485" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "486" : {
            "description" : "HomeRegionNotSetException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HomeRegionNotSetException"
                }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSMigrationHub.ListDiscoveredResources" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Lists discovered resources associated with the given <code>MigrationTask</code>.",
        "operationId" : "ListDiscoveredResources",
        "parameters" : [ {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "AWSMigrationHub.ListDiscoveredResources" ]
          },
          "in" : "header",
          "name" : "X-Amz-Target"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListDiscoveredResourcesRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListDiscoveredResourcesResult"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerError",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "483" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "484" : {
            "description" : "InvalidInputException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidInputException"
                }
              }
            }
          },
          "485" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "486" : {
            "description" : "HomeRegionNotSetException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HomeRegionNotSetException"
                }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSMigrationHub.ListMigrationTasks" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "<p>Lists all, or filtered by resource name, migration tasks associated with the user account making this call. This API has the following traits:</p> <ul> <li> <p>Can show a summary list of the most recent migration tasks.</p> </li> <li> <p>Can show a summary list of migration tasks associated with a given discovered resource.</p> </li> <li> <p>Lists migration tasks in a paginated interface.</p> </li> </ul>",
        "operationId" : "ListMigrationTasks",
        "parameters" : [ {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "AWSMigrationHub.ListMigrationTasks" ]
          },
          "in" : "header",
          "name" : "X-Amz-Target"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListMigrationTasksRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListMigrationTasksResult"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerError",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "483" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "484" : {
            "description" : "InvalidInputException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidInputException"
                }
              }
            }
          },
          "485" : {
            "description" : "PolicyErrorException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyErrorException"
                }
              }
            }
          },
          "486" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "487" : {
            "description" : "HomeRegionNotSetException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HomeRegionNotSetException"
                }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSMigrationHub.ListProgressUpdateStreams" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Lists progress update streams associated with the user account making this call.",
        "operationId" : "ListProgressUpdateStreams",
        "parameters" : [ {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "AWSMigrationHub.ListProgressUpdateStreams" ]
          },
          "in" : "header",
          "name" : "X-Amz-Target"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListProgressUpdateStreamsRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListProgressUpdateStreamsResult"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerError",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "483" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "484" : {
            "description" : "InvalidInputException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidInputException"
                }
              }
            }
          },
          "485" : {
            "description" : "HomeRegionNotSetException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HomeRegionNotSetException"
                }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSMigrationHub.NotifyApplicationState" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Sets the migration state of an application. For a given application identified by the value passed to <code>ApplicationId</code>, its status is set or updated by passing one of three values to <code>Status</code>: <code>NOT_STARTED | IN_PROGRESS | COMPLETED</code>.",
        "operationId" : "NotifyApplicationState",
        "parameters" : [ {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "AWSMigrationHub.NotifyApplicationState" ]
          },
          "in" : "header",
          "name" : "X-Amz-Target"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotifyApplicationStateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotifyApplicationStateResult"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerError",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "483" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "484" : {
            "description" : "DryRunOperation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DryRunOperation"
                }
              }
            }
          },
          "485" : {
            "description" : "UnauthorizedOperation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedOperation"
                }
              }
            }
          },
          "486" : {
            "description" : "InvalidInputException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidInputException"
                }
              }
            }
          },
          "487" : {
            "description" : "PolicyErrorException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyErrorException"
                }
              }
            }
          },
          "488" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "489" : {
            "description" : "HomeRegionNotSetException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HomeRegionNotSetException"
                }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSMigrationHub.NotifyMigrationTaskState" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "<p>Notifies Migration Hub of the current status, progress, or other detail regarding a migration task. This API has the following traits:</p> <ul> <li> <p>Migration tools will call the <code>NotifyMigrationTaskState</code> API to share the latest progress and status.</p> </li> <li> <p> <code>MigrationTaskName</code> is used for addressing updates to the correct target.</p> </li> <li> <p> <code>ProgressUpdateStream</code> is used for access control and to provide a namespace for each migration tool.</p> </li> </ul>",
        "operationId" : "NotifyMigrationTaskState",
        "parameters" : [ {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "AWSMigrationHub.NotifyMigrationTaskState" ]
          },
          "in" : "header",
          "name" : "X-Amz-Target"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotifyMigrationTaskStateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotifyMigrationTaskStateResult"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerError",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "483" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "484" : {
            "description" : "DryRunOperation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DryRunOperation"
                }
              }
            }
          },
          "485" : {
            "description" : "UnauthorizedOperation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedOperation"
                }
              }
            }
          },
          "486" : {
            "description" : "InvalidInputException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidInputException"
                }
              }
            }
          },
          "487" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "488" : {
            "description" : "HomeRegionNotSetException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HomeRegionNotSetException"
                }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSMigrationHub.PutResourceAttributes" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "<p>Provides identifying details of the resource being migrated so that it can be associated in the Application Discovery Service repository. This association occurs asynchronously after <code>PutResourceAttributes</code> returns.</p> <important> <ul> <li> <p>Keep in mind that subsequent calls to PutResourceAttributes will override previously stored attributes. For example, if it is first called with a MAC address, but later, it is desired to <i>add</i> an IP address, it will then be required to call it with <i>both</i> the IP and MAC addresses to prevent overriding the MAC address.</p> </li> <li> <p>Note the instructions regarding the special use case of the <a href=\"https://docs.aws.amazon.com/migrationhub/latest/ug/API_PutResourceAttributes.html#migrationhub-PutResourceAttributes-request-ResourceAttributeList\"> <code>ResourceAttributeList</code> </a> parameter when specifying any \"VM\" related value.</p> </li> </ul> </important> <note> <p>Because this is an asynchronous call, it will always return 200, whether an association occurs or not. To confirm if an association was found based on the provided details, call <code>ListDiscoveredResources</code>.</p> </note>",
        "operationId" : "PutResourceAttributes",
        "parameters" : [ {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "AWSMigrationHub.PutResourceAttributes" ]
          },
          "in" : "header",
          "name" : "X-Amz-Target"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PutResourceAttributesRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PutResourceAttributesResult"
                }
              }
            }
          },
          "480" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerError",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "483" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "484" : {
            "description" : "DryRunOperation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DryRunOperation"
                }
              }
            }
          },
          "485" : {
            "description" : "UnauthorizedOperation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedOperation"
                }
              }
            }
          },
          "486" : {
            "description" : "InvalidInputException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidInputException"
                }
              }
            }
          },
          "487" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "488" : {
            "description" : "HomeRegionNotSetException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HomeRegionNotSetException"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "parameters" : {
      "X-Amz-Content-Sha256" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Content-Sha256"
      },
      "X-Amz-Date" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Date"
      },
      "X-Amz-Algorithm" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Algorithm"
      },
      "X-Amz-Credential" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Credential"
      },
      "X-Amz-Security-Token" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Security-Token"
      },
      "X-Amz-Signature" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-SignedHeaders"
      }
    },
    "schemas" : {
      "AssociateCreatedArtifactResult" : {
        "properties" : { },
        "type" : "object"
      },
      "AssociateCreatedArtifactRequest" : {
        "properties" : {
          "ProgressUpdateStream" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProgressUpdateStream"
            }, {
              "description" : "The name of the ProgressUpdateStream. "
            } ]
          },
          "MigrationTaskName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MigrationTaskName"
            }, {
              "description" : "Unique identifier that references the migration task. <i>Do not store personal data in this field.</i> "
            } ]
          },
          "CreatedArtifact" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreatedArtifact"
            }, {
              "description" : "An ARN of the AWS resource related to the migration (e.g., AMI, EC2 instance, RDS instance, etc.) "
            } ]
          },
          "DryRun" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DryRun"
            }, {
              "description" : "Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call."
            } ]
          }
        },
        "type" : "object",
        "title" : "AssociateCreatedArtifactRequest",
        "required" : [ "ProgressUpdateStream", "MigrationTaskName", "CreatedArtifact" ]
      },
      "AccessDeniedException" : { },
      "ThrottlingException" : { },
      "InternalServerError" : { },
      "ServiceUnavailableException" : { },
      "DryRunOperation" : { },
      "UnauthorizedOperation" : { },
      "InvalidInputException" : { },
      "ResourceNotFoundException" : { },
      "HomeRegionNotSetException" : { },
      "AssociateDiscoveredResourceResult" : {
        "properties" : { },
        "type" : "object"
      },
      "AssociateDiscoveredResourceRequest" : {
        "properties" : {
          "ProgressUpdateStream" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProgressUpdateStream"
            }, {
              "description" : "The name of the ProgressUpdateStream."
            } ]
          },
          "MigrationTaskName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MigrationTaskName"
            }, {
              "description" : "The identifier given to the MigrationTask. <i>Do not store personal data in this field.</i> "
            } ]
          },
          "DiscoveredResource" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DiscoveredResource"
            }, {
              "description" : "Object representing a Resource."
            } ]
          },
          "DryRun" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DryRun"
            }, {
              "description" : "Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call."
            } ]
          }
        },
        "type" : "object",
        "title" : "AssociateDiscoveredResourceRequest",
        "required" : [ "ProgressUpdateStream", "MigrationTaskName", "DiscoveredResource" ]
      },
      "PolicyErrorException" : { },
      "CreateProgressUpdateStreamResult" : {
        "properties" : { },
        "type" : "object"
      },
      "CreateProgressUpdateStreamRequest" : {
        "properties" : {
          "ProgressUpdateStreamName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProgressUpdateStream"
            }, {
              "description" : "The name of the ProgressUpdateStream. <i>Do not store personal data in this field.</i> "
            } ]
          },
          "DryRun" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DryRun"
            }, {
              "description" : "Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateProgressUpdateStreamRequest",
        "required" : [ "ProgressUpdateStreamName" ]
      },
      "DeleteProgressUpdateStreamResult" : {
        "properties" : { },
        "type" : "object"
      },
      "DeleteProgressUpdateStreamRequest" : {
        "properties" : {
          "ProgressUpdateStreamName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProgressUpdateStream"
            }, {
              "description" : "The name of the ProgressUpdateStream. <i>Do not store personal data in this field.</i> "
            } ]
          },
          "DryRun" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DryRun"
            }, {
              "description" : "Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call."
            } ]
          }
        },
        "type" : "object",
        "title" : "DeleteProgressUpdateStreamRequest",
        "required" : [ "ProgressUpdateStreamName" ]
      },
      "DescribeApplicationStateResult" : {
        "properties" : {
          "ApplicationStatus" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ApplicationStatus"
            }, {
              "description" : "Status of the application - Not Started, In-Progress, Complete."
            } ]
          },
          "LastUpdatedTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateDateTime"
            }, {
              "description" : "The timestamp when the application status was last updated."
            } ]
          }
        },
        "type" : "object"
      },
      "DescribeApplicationStateRequest" : {
        "properties" : {
          "ApplicationId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ApplicationId"
            }, {
              "description" : "The configurationId in Application Discovery Service that uniquely identifies the grouped application."
            } ]
          }
        },
        "type" : "object",
        "title" : "DescribeApplicationStateRequest",
        "required" : [ "ApplicationId" ]
      },
      "DescribeMigrationTaskResult" : {
        "properties" : {
          "MigrationTask" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MigrationTask"
            }, {
              "description" : "Object encapsulating information about the migration task."
            } ]
          }
        },
        "type" : "object"
      },
      "DescribeMigrationTaskRequest" : {
        "properties" : {
          "ProgressUpdateStream" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProgressUpdateStream"
            }, {
              "description" : "The name of the ProgressUpdateStream. "
            } ]
          },
          "MigrationTaskName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MigrationTaskName"
            }, {
              "description" : "The identifier given to the MigrationTask. <i>Do not store personal data in this field.</i> "
            } ]
          }
        },
        "type" : "object",
        "title" : "DescribeMigrationTaskRequest",
        "required" : [ "ProgressUpdateStream", "MigrationTaskName" ]
      },
      "DisassociateCreatedArtifactResult" : {
        "properties" : { },
        "type" : "object"
      },
      "DisassociateCreatedArtifactRequest" : {
        "properties" : {
          "ProgressUpdateStream" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProgressUpdateStream"
            }, {
              "description" : "The name of the ProgressUpdateStream. "
            } ]
          },
          "MigrationTaskName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MigrationTaskName"
            }, {
              "description" : "Unique identifier that references the migration task to be disassociated with the artifact. <i>Do not store personal data in this field.</i> "
            } ]
          },
          "CreatedArtifactName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreatedArtifactName"
            }, {
              "description" : "An ARN of the AWS resource related to the migration (e.g., AMI, EC2 instance, RDS instance, etc.)"
            } ]
          },
          "DryRun" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DryRun"
            }, {
              "description" : "Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call."
            } ]
          }
        },
        "type" : "object",
        "title" : "DisassociateCreatedArtifactRequest",
        "required" : [ "ProgressUpdateStream", "MigrationTaskName", "CreatedArtifactName" ]
      },
      "DisassociateDiscoveredResourceResult" : {
        "properties" : { },
        "type" : "object"
      },
      "DisassociateDiscoveredResourceRequest" : {
        "properties" : {
          "ProgressUpdateStream" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProgressUpdateStream"
            }, {
              "description" : "The name of the ProgressUpdateStream."
            } ]
          },
          "MigrationTaskName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MigrationTaskName"
            }, {
              "description" : "The identifier given to the MigrationTask. <i>Do not store personal data in this field.</i> "
            } ]
          },
          "ConfigurationId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ConfigurationId"
            }, {
              "description" : "ConfigurationId of the Application Discovery Service resource to be disassociated."
            } ]
          },
          "DryRun" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DryRun"
            }, {
              "description" : "Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call."
            } ]
          }
        },
        "type" : "object",
        "title" : "DisassociateDiscoveredResourceRequest",
        "required" : [ "ProgressUpdateStream", "MigrationTaskName", "ConfigurationId" ]
      },
      "ImportMigrationTaskResult" : {
        "properties" : { },
        "type" : "object"
      },
      "ImportMigrationTaskRequest" : {
        "properties" : {
          "ProgressUpdateStream" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProgressUpdateStream"
            }, {
              "description" : "The name of the ProgressUpdateStream. &gt;"
            } ]
          },
          "MigrationTaskName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MigrationTaskName"
            }, {
              "description" : "Unique identifier that references the migration task. <i>Do not store personal data in this field.</i> "
            } ]
          },
          "DryRun" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DryRun"
            }, {
              "description" : "Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call."
            } ]
          }
        },
        "type" : "object",
        "title" : "ImportMigrationTaskRequest",
        "required" : [ "ProgressUpdateStream", "MigrationTaskName" ]
      },
      "ListApplicationStatesResult" : {
        "properties" : {
          "ApplicationStateList" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ApplicationStateList"
            }, {
              "description" : "A list of Applications that exist in Application Discovery Service."
            } ]
          },
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : "If a <code>NextToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>NextToken</code>."
            } ]
          }
        },
        "type" : "object"
      },
      "ListApplicationStatesRequest" : {
        "properties" : {
          "ApplicationIds" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ApplicationIds"
            }, {
              "description" : "The configurationIds from the Application Discovery Service that uniquely identifies your applications."
            } ]
          },
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : "If a <code>NextToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>NextToken</code>."
            } ]
          },
          "MaxResults" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MaxResults"
            }, {
              "description" : "Maximum number of results to be returned per page."
            } ]
          }
        },
        "type" : "object",
        "title" : "ListApplicationStatesRequest"
      },
      "ListCreatedArtifactsResult" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : "If there are more created artifacts than the max result, return the next token to be passed to the next call as a bookmark of where to start from."
            } ]
          },
          "CreatedArtifactList" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreatedArtifactList"
            }, {
              "description" : "List of created artifacts up to the maximum number of results specified in the request."
            } ]
          }
        },
        "type" : "object"
      },
      "ListCreatedArtifactsRequest" : {
        "properties" : {
          "ProgressUpdateStream" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProgressUpdateStream"
            }, {
              "description" : "The name of the ProgressUpdateStream. "
            } ]
          },
          "MigrationTaskName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MigrationTaskName"
            }, {
              "description" : "Unique identifier that references the migration task. <i>Do not store personal data in this field.</i> "
            } ]
          },
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : "If a <code>NextToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>NextToken</code>."
            } ]
          },
          "MaxResults" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MaxResultsCreatedArtifacts"
            }, {
              "description" : "Maximum number of results to be returned per page."
            } ]
          }
        },
        "type" : "object",
        "title" : "ListCreatedArtifactsRequest",
        "required" : [ "ProgressUpdateStream", "MigrationTaskName" ]
      },
      "ListDiscoveredResourcesResult" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : "If there are more discovered resources than the max result, return the next token to be passed to the next call as a bookmark of where to start from."
            } ]
          },
          "DiscoveredResourceList" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DiscoveredResourceList"
            }, {
              "description" : "Returned list of discovered resources associated with the given MigrationTask."
            } ]
          }
        },
        "type" : "object"
      },
      "ListDiscoveredResourcesRequest" : {
        "properties" : {
          "ProgressUpdateStream" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProgressUpdateStream"
            }, {
              "description" : "The name of the ProgressUpdateStream."
            } ]
          },
          "MigrationTaskName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MigrationTaskName"
            }, {
              "description" : "The name of the MigrationTask. <i>Do not store personal data in this field.</i> "
            } ]
          },
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : "If a <code>NextToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>NextToken</code>."
            } ]
          },
          "MaxResults" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MaxResultsResources"
            }, {
              "description" : "The maximum number of results returned per page."
            } ]
          }
        },
        "type" : "object",
        "title" : "ListDiscoveredResourcesRequest",
        "required" : [ "ProgressUpdateStream", "MigrationTaskName" ]
      },
      "ListMigrationTasksResult" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : "If there are more migration tasks than the max result, return the next token to be passed to the next call as a bookmark of where to start from."
            } ]
          },
          "MigrationTaskSummaryList" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MigrationTaskSummaryList"
            }, {
              "description" : "Lists the migration task's summary which includes: <code>MigrationTaskName</code>, <code>ProgressPercent</code>, <code>ProgressUpdateStream</code>, <code>Status</code>, and the <code>UpdateDateTime</code> for each task."
            } ]
          }
        },
        "type" : "object"
      },
      "ListMigrationTasksRequest" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : "If a <code>NextToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>NextToken</code>."
            } ]
          },
          "MaxResults" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MaxResults"
            }, {
              "description" : "Value to specify how many results are returned per page."
            } ]
          },
          "ResourceName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResourceName"
            }, {
              "description" : "Filter migration tasks by discovered resource name."
            } ]
          }
        },
        "type" : "object",
        "title" : "ListMigrationTasksRequest"
      },
      "ListProgressUpdateStreamsResult" : {
        "properties" : {
          "ProgressUpdateStreamSummaryList" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProgressUpdateStreamSummaryList"
            }, {
              "description" : "List of progress update streams up to the max number of results passed in the input."
            } ]
          },
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : "If there are more streams created than the max result, return the next token to be passed to the next call as a bookmark of where to start from."
            } ]
          }
        },
        "type" : "object"
      },
      "ListProgressUpdateStreamsRequest" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Token"
            }, {
              "description" : "If a <code>NextToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>NextToken</code>."
            } ]
          },
          "MaxResults" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MaxResults"
            }, {
              "description" : "Filter to limit the maximum number of results to list per page."
            } ]
          }
        },
        "type" : "object",
        "title" : "ListProgressUpdateStreamsRequest"
      },
      "NotifyApplicationStateResult" : {
        "properties" : { },
        "type" : "object"
      },
      "NotifyApplicationStateRequest" : {
        "properties" : {
          "ApplicationId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ApplicationId"
            }, {
              "description" : "The configurationId in Application Discovery Service that uniquely identifies the grouped application."
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ApplicationStatus"
            }, {
              "description" : "Status of the application - Not Started, In-Progress, Complete."
            } ]
          },
          "UpdateDateTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateDateTime"
            }, {
              "description" : "The timestamp when the application state changed."
            } ]
          },
          "DryRun" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DryRun"
            }, {
              "description" : "Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call."
            } ]
          }
        },
        "type" : "object",
        "title" : "NotifyApplicationStateRequest",
        "required" : [ "ApplicationId", "Status" ]
      },
      "NotifyMigrationTaskStateResult" : {
        "properties" : { },
        "type" : "object"
      },
      "NotifyMigrationTaskStateRequest" : {
        "properties" : {
          "ProgressUpdateStream" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProgressUpdateStream"
            }, {
              "description" : "The name of the ProgressUpdateStream. "
            } ]
          },
          "MigrationTaskName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MigrationTaskName"
            }, {
              "description" : "Unique identifier that references the migration task. <i>Do not store personal data in this field.</i> "
            } ]
          },
          "Task" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Task"
            }, {
              "description" : "Information about the task's progress and status."
            } ]
          },
          "UpdateDateTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateDateTime"
            }, {
              "description" : "The timestamp when the task was gathered."
            } ]
          },
          "NextUpdateSeconds" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextUpdateSeconds"
            }, {
              "description" : "Number of seconds after the UpdateDateTime within which the Migration Hub can expect an update. If Migration Hub does not receive an update within the specified interval, then the migration task will be considered stale."
            } ]
          },
          "DryRun" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DryRun"
            }, {
              "description" : "Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call."
            } ]
          }
        },
        "type" : "object",
        "title" : "NotifyMigrationTaskStateRequest",
        "required" : [ "ProgressUpdateStream", "MigrationTaskName", "Task", "UpdateDateTime", "NextUpdateSeconds" ]
      },
      "PutResourceAttributesResult" : {
        "properties" : { },
        "type" : "object"
      },
      "PutResourceAttributesRequest" : {
        "properties" : {
          "ProgressUpdateStream" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProgressUpdateStream"
            }, {
              "description" : "The name of the ProgressUpdateStream. "
            } ]
          },
          "MigrationTaskName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MigrationTaskName"
            }, {
              "description" : "Unique identifier that references the migration task. <i>Do not store personal data in this field.</i> "
            } ]
          },
          "ResourceAttributeList" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResourceAttributeList"
            }, {
              "description" : "<p>Information about the resource that is being migrated. This data will be used to map the task to a resource in the Application Discovery Service repository.</p> <note> <p>Takes the object array of <code>ResourceAttribute</code> where the <code>Type</code> field is reserved for the following values: <code>IPV4_ADDRESS | IPV6_ADDRESS | MAC_ADDRESS | FQDN | VM_MANAGER_ID | VM_MANAGED_OBJECT_REFERENCE | VM_NAME | VM_PATH | BIOS_ID | MOTHERBOARD_SERIAL_NUMBER</code> where the identifying value can be a string up to 256 characters.</p> </note> <important> <ul> <li> <p>If any \"VM\" related value is set for a <code>ResourceAttribute</code> object, it is required that <code>VM_MANAGER_ID</code>, as a minimum, is always set. If <code>VM_MANAGER_ID</code> is not set, then all \"VM\" fields will be discarded and \"VM\" fields will not be used for matching the migration task to a server in Application Discovery Service repository. See the <a href=\"https://docs.aws.amazon.com/migrationhub/latest/ug/API_PutResourceAttributes.html#API_PutResourceAttributes_Examples\">Example</a> section below for a use case of specifying \"VM\" related values.</p> </li> <li> <p> If a server you are trying to match has multiple IP or MAC addresses, you should provide as many as you know in separate type/value pairs passed to the <code>ResourceAttributeList</code> parameter to maximize the chances of matching.</p> </li> </ul> </important>"
            } ]
          },
          "DryRun" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DryRun"
            }, {
              "description" : "Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call."
            } ]
          }
        },
        "type" : "object",
        "title" : "PutResourceAttributesRequest",
        "required" : [ "ProgressUpdateStream", "MigrationTaskName", "ResourceAttributeList" ]
      },
      "ApplicationId" : {
        "maxLength" : 1600,
        "minLength" : 1,
        "pattern" : "^.{1,1600}$",
        "type" : "string"
      },
      "ApplicationIds" : {
        "maxItems" : 100,
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ApplicationId"
        }
      },
      "ApplicationStatus" : {
        "type" : "string",
        "enum" : [ "NOT_STARTED", "IN_PROGRESS", "COMPLETED" ]
      },
      "UpdateDateTime" : {
        "format" : "date-time",
        "type" : "string"
      },
      "ApplicationState" : {
        "description" : "The state of an application discovered through Migration Hub import, the AWS Agentless Discovery Connector, or the AWS Application Discovery Agent.",
        "properties" : {
          "ApplicationId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ApplicationId"
            }, {
              "description" : "The configurationId from the Application Discovery Service that uniquely identifies an application."
            } ]
          },
          "ApplicationStatus" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ApplicationStatus"
            }, {
              "description" : "The current status of an application."
            } ]
          },
          "LastUpdatedTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateDateTime"
            }, {
              "description" : "The timestamp when the application status was last updated."
            } ]
          }
        },
        "type" : "object"
      },
      "ApplicationStateList" : {
        "maxItems" : 1000,
        "minItems" : 0,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ApplicationState"
        }
      },
      "ProgressUpdateStream" : {
        "maxLength" : 50,
        "minLength" : 1,
        "pattern" : "[^/:|\\000-\\037]+",
        "type" : "string"
      },
      "MigrationTaskName" : {
        "maxLength" : 256,
        "minLength" : 1,
        "pattern" : "[^:|]+",
        "type" : "string"
      },
      "CreatedArtifact" : {
        "description" : "An ARN of the AWS cloud resource target receiving the migration (e.g., AMI, EC2 instance, RDS instance, etc.).",
        "properties" : {
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreatedArtifactName"
            }, {
              "description" : "An ARN that uniquely identifies the result of a migration task."
            } ]
          },
          "Description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreatedArtifactDescription"
            }, {
              "description" : "A description that can be free-form text to record additional detail about the artifact for clarity or for later reference."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "Name" ]
      },
      "DryRun" : {
        "type" : "boolean"
      },
      "DiscoveredResource" : {
        "description" : "Object representing the on-premises resource being migrated.",
        "properties" : {
          "ConfigurationId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ConfigurationId"
            }, {
              "description" : "The configurationId in Application Discovery Service that uniquely identifies the on-premise resource."
            } ]
          },
          "Description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DiscoveredResourceDescription"
            }, {
              "description" : "A description that can be free-form text to record additional detail about the discovered resource for clarity or later reference."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "ConfigurationId" ]
      },
      "ConfigurationId" : {
        "maxLength" : 1600,
        "minLength" : 1,
        "pattern" : "^.{1,1600}$",
        "type" : "string"
      },
      "CreatedArtifactName" : {
        "maxLength" : 1600,
        "minLength" : 1,
        "pattern" : "arn:[a-z-]+:[a-z0-9-]+:(?:[a-z0-9-]+|):(?:[0-9]{12}|):.*",
        "type" : "string"
      },
      "CreatedArtifactDescription" : {
        "maxLength" : 500,
        "minLength" : 0,
        "pattern" : "^.{0,500}$",
        "type" : "string"
      },
      "CreatedArtifactList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CreatedArtifact"
        }
      },
      "MigrationTask" : {
        "description" : "Represents a migration task in a migration tool.",
        "properties" : {
          "ProgressUpdateStream" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProgressUpdateStream"
            }, {
              "description" : "A name that identifies the vendor of the migration tool being used."
            } ]
          },
          "MigrationTaskName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MigrationTaskName"
            }, {
              "description" : "Unique identifier that references the migration task. <i>Do not store personal data in this field.</i> "
            } ]
          },
          "Task" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Task"
            }, {
              "description" : "Task object encapsulating task information."
            } ]
          },
          "UpdateDateTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateDateTime"
            }, {
              "description" : "The timestamp when the task was gathered."
            } ]
          },
          "ResourceAttributeList" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/LatestResourceAttributeList"
            }, {
              "description" : "Information about the resource that is being migrated. This data will be used to map the task to a resource in the Application Discovery Service repository."
            } ]
          }
        },
        "type" : "object"
      },
      "DiscoveredResourceDescription" : {
        "maxLength" : 500,
        "minLength" : 0,
        "pattern" : "^.{0,500}$",
        "type" : "string"
      },
      "DiscoveredResourceList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/DiscoveredResource"
        }
      },
      "ResourceAttribute" : {
        "description" : "<p>Attribute associated with a resource.</p> <p>Note the corresponding format required per type listed below:</p> <dl> <dt>IPV4</dt> <dd> <p> <code>x.x.x.x</code> </p> <p> <i>where x is an integer in the range [0,255]</i> </p> </dd> <dt>IPV6</dt> <dd> <p> <code>y : y : y : y : y : y : y : y</code> </p> <p> <i>where y is a hexadecimal between 0 and FFFF. [0, FFFF]</i> </p> </dd> <dt>MAC_ADDRESS</dt> <dd> <p> <code>^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$</code> </p> </dd> <dt>FQDN</dt> <dd> <p> <code>^[^&lt;&gt;{}\\\\\\\\/?,=\\\\p{Cntrl}]{1,256}$</code> </p> </dd> </dl>",
        "properties" : {
          "Type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResourceAttributeType"
            }, {
              "description" : "Type of resource."
            } ]
          },
          "Value" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResourceAttributeValue"
            }, {
              "description" : "Value of the resource type."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "Type", "Value" ]
      },
      "LatestResourceAttributeList" : {
        "maxItems" : 100,
        "minItems" : 0,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ResourceAttribute"
        }
      },
      "Token" : {
        "maxLength" : 2048,
        "minLength" : 0,
        "pattern" : "^[a-zA-Z0-9\\/\\+\\=]{0,2048}$",
        "type" : "string"
      },
      "MaxResults" : {
        "maximum" : 100,
        "minimum" : 1,
        "type" : "integer"
      },
      "MaxResultsCreatedArtifacts" : {
        "maximum" : 10,
        "minimum" : 1,
        "type" : "integer"
      },
      "MaxResultsResources" : {
        "maximum" : 10,
        "minimum" : 1,
        "type" : "integer"
      },
      "ResourceName" : {
        "maxLength" : 1600,
        "minLength" : 1,
        "pattern" : "^.{1,1600}$",
        "type" : "string"
      },
      "MigrationTaskSummaryList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/MigrationTaskSummary"
        }
      },
      "ProgressUpdateStreamSummaryList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ProgressUpdateStreamSummary"
        }
      },
      "Task" : {
        "description" : "Task object encapsulating task information.",
        "properties" : {
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Status"
            }, {
              "description" : "Status of the task - Not Started, In-Progress, Complete."
            } ]
          },
          "StatusDetail" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StatusDetail"
            }, {
              "description" : "Details of task status as notified by a migration tool. A tool might use this field to provide clarifying information about the status that is unique to that tool or that explains an error state."
            } ]
          },
          "ProgressPercent" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProgressPercent"
            }, {
              "description" : "Indication of the percentage completion of the task."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "Status" ]
      },
      "Status" : {
        "type" : "string",
        "enum" : [ "NOT_STARTED", "IN_PROGRESS", "FAILED", "COMPLETED" ]
      },
      "ProgressPercent" : {
        "maximum" : 100,
        "minimum" : 0,
        "type" : "integer"
      },
      "StatusDetail" : {
        "maxLength" : 500,
        "minLength" : 0,
        "pattern" : "^.{0,500}$",
        "type" : "string"
      },
      "MigrationTaskSummary" : {
        "description" : "MigrationTaskSummary includes <code>MigrationTaskName</code>, <code>ProgressPercent</code>, <code>ProgressUpdateStream</code>, <code>Status</code>, and <code>UpdateDateTime</code> for each task.",
        "properties" : {
          "ProgressUpdateStream" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProgressUpdateStream"
            }, {
              "description" : "An AWS resource used for access control. It should uniquely identify the migration tool as it is used for all updates made by the tool."
            } ]
          },
          "MigrationTaskName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MigrationTaskName"
            }, {
              "description" : "Unique identifier that references the migration task. <i>Do not store personal data in this field.</i> "
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Status"
            }, {
              "description" : "Status of the task."
            } ]
          },
          "ProgressPercent" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProgressPercent"
            }, {
              "description" : "Indication of the percentage completion of the task."
            } ]
          },
          "StatusDetail" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StatusDetail"
            }, {
              "description" : "Detail information of what is being done within the overall status state."
            } ]
          },
          "UpdateDateTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateDateTime"
            }, {
              "description" : "The timestamp when the task was gathered."
            } ]
          }
        },
        "type" : "object"
      },
      "NextUpdateSeconds" : {
        "minimum" : 0,
        "type" : "integer"
      },
      "ProgressUpdateStreamSummary" : {
        "description" : "Summary of the AWS resource used for access control that is implicitly linked to your AWS account.",
        "properties" : {
          "ProgressUpdateStreamName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProgressUpdateStream"
            }, {
              "description" : "The name of the ProgressUpdateStream. <i>Do not store personal data in this field.</i> "
            } ]
          }
        },
        "type" : "object"
      },
      "ResourceAttributeList" : {
        "maxItems" : 100,
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ResourceAttribute"
        }
      },
      "ResourceAttributeType" : {
        "type" : "string",
        "enum" : [ "IPV4_ADDRESS", "IPV6_ADDRESS", "MAC_ADDRESS", "FQDN", "VM_MANAGER_ID", "VM_MANAGED_OBJECT_REFERENCE", "VM_NAME", "VM_PATH", "BIOS_ID", "MOTHERBOARD_SERIAL_NUMBER" ]
      },
      "ResourceAttributeValue" : {
        "maxLength" : 256,
        "minLength" : 1,
        "pattern" : "^.{1,256}$",
        "type" : "string"
      }
    },
    "securitySchemes" : {
      "hmac" : {
        "type" : "apiKey",
        "description" : "Amazon Signature authorization v4",
        "name" : "Authorization",
        "in" : "header",
        "x-amazon-apigateway-authtype" : "awsSigv4"
      }
    }
  },
  "externalDocs" : {
    "description" : "Amazon Web Services documentation",
    "url" : "https://docs.aws.amazon.com/mgh/"
  },
  "security" : [ {
    "hmac" : [ ]
  } ],
  "x-hasEquivalentPaths" : true
}