{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "hello@authentiq.com",
      "name" : "Authentiq team",
      "url" : "http://authentiq.io/support"
    },
    "description" : "Strong authentication, without the passwords.",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService" : "http://authentiq.com/terms/",
    "title" : "Authentiq API",
    "version" : "6",
    "x-providerName" : "6-dot-authentiqio.appspot.com",
    "x-logo" : {
      "backgroundColor" : "#F26641",
      "url" : "https://api.apis.guru/v2/cache/logo/https_www.authentiq.com_theme_images_authentiq-logo-a-inverse.svg"
    },
    "x-apisguru-categories" : [ "security" ],
    "x-origin" : [ {
      "format" : "openapi",
      "url" : "https://raw.githubusercontent.com/AuthentiqID/authentiq-docs/master/docs/swagger/issuer.yaml",
      "version" : "3.0"
    } ]
  },
  "servers" : [ {
    "url" : "https://6-dot-authentiqio.appspot.com"
  } ],
  "paths" : {
    "/scope/{job}" : {
      "head" : {
        "tags" : [ "scope", "head" ],
        "description" : "HEAD to get the status of a verification job",
        "operationId" : "sign_retrieve_head",
        "parameters" : [ {
          "$ref" : "#/components/parameters/JobID"
        } ],
        "responses" : {
          "200" : {
            "description" : "Confirmed and signed"
          },
          "default" : {
            "$ref" : "#/components/responses/ErrorResponse"
          },
          "204" : {
            "description" : "Confirmed, waiting for signing"
          },
          "404" : {
            "description" : "Job not found `unknown-job`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "scope", "get" ],
        "description" : "get the status / current content of a verification job",
        "operationId" : "sign_retrieve",
        "parameters" : [ {
          "$ref" : "#/components/parameters/JobID"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response (JWT)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "sub" : {
                      "description" : "base64safe encoded public signing key",
                      "type" : "string"
                    },
                    "field" : {
                      "type" : "string"
                    },
                    "exp" : {
                      "type" : "integer"
                    }
                  },
                  "type" : "object",
                  "title" : "JWT"
                }
              },
              "application/jwt" : {
                "schema" : {
                  "properties" : {
                    "sub" : {
                      "description" : "base64safe encoded public signing key",
                      "type" : "string"
                    },
                    "field" : {
                      "type" : "string"
                    },
                    "exp" : {
                      "type" : "integer"
                    }
                  },
                  "type" : "object",
                  "title" : "JWT"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/ErrorResponse"
          },
          "204" : {
            "description" : "Confirmed, waiting for signing"
          },
          "404" : {
            "description" : "Job not found `unknown-job`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/jwt" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "scope", "put" ],
        "description" : "authority updates a JWT with its signature\nSee: https://github.com/skion/authentiq/wiki/JWT-Examples\n",
        "operationId" : "sign_update",
        "parameters" : [ {
          "$ref" : "#/components/parameters/JobID"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated",
            "content" : {
              "application/jwt" : {
                "schema" : {
                  "properties" : {
                    "jwt" : {
                      "description" : "result is JWT or JSON??",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "ready",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/ErrorResponse"
          },
          "404" : {
            "description" : "Job not found `unknown-job`",
            "content" : {
              "application/jwt" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "409" : {
            "description" : "Job not confirmed yet `confirm-first`",
            "content" : {
              "application/jwt" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "scope", "post" ],
        "description" : "this is a scope confirmation",
        "operationId" : "sign_confirm",
        "parameters" : [ {
          "$ref" : "#/components/parameters/JobID"
        } ],
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/ErrorResponse"
          },
          "202" : {
            "description" : "Successfully confirmed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "description" : "confirmed",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            }
          },
          "401" : {
            "description" : "Confirmation error `auth-error`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Job not found `unknown-job`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "405" : {
            "description" : "JWT POSTed to scope `not-supported`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "scope", "delete" ],
        "description" : "delete a verification job",
        "operationId" : "sign_delete",
        "parameters" : [ {
          "$ref" : "#/components/parameters/JobID"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "description" : "done",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/ErrorResponse"
          },
          "404" : {
            "description" : "Job not found `unknown-job`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/scope" : {
      "post" : {
        "tags" : [ "scope", "post" ],
        "description" : "scope verification request\nSee: https://github.com/skion/authentiq/wiki/JWT-Examples\n",
        "operationId" : "sign_request",
        "parameters" : [ {
          "description" : "test only mode, using test issuer",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "in" : "query",
          "name" : "test"
        } ],
        "requestBody" : {
          "description" : "Claims of scope",
          "required" : true,
          "content" : {
            "application/jwt" : {
              "schema" : {
                "$ref" : "#/components/schemas/Claims"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/ErrorResponse"
          },
          "201" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "job" : {
                      "description" : "20-character ID",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "waiting",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests on same address / number `rate-limit`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/login" : {
      "post" : {
        "tags" : [ "login", "post" ],
        "description" : "push sign-in request\nSee: https://github.com/skion/authentiq/wiki/JWT-Examples\n",
        "operationId" : "push_login_request",
        "parameters" : [ {
          "description" : "URI App will connect to",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "callback"
        } ],
        "requestBody" : {
          "description" : "Push Token.",
          "required" : true,
          "content" : {
            "application/jwt" : {
              "schema" : {
                "$ref" : "#/components/schemas/PushToken"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "description" : "sent",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/ErrorResponse"
          },
          "401" : {
            "description" : "Unauthorized for this callback audience `aud-error` or JWT should be self-signed `auth-error`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/key" : {
      "post" : {
        "tags" : [ "key", "post" ],
        "description" : "Register a new ID `JWT(sub, devtoken)`\n\nv5: `JWT(sub, pk, devtoken, ...)`\n\nSee: https://github.com/skion/authentiq/wiki/JWT-Examples\n",
        "operationId" : "key_register",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AuthentiqID"
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/ErrorResponse"
          },
          "201" : {
            "description" : "Successfully registered",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "secret" : {
                      "description" : "revoke key",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "registered",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            }
          },
          "409" : {
            "description" : "Key already registered `duplicate-key`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "key", "delete" ],
        "description" : "Revoke an Authentiq ID using email & phone.\n\nIf called with `email` and `phone` only, a verification code \nwill be sent by email. Do a second call adding `code` to \ncomplete the revocation.\n",
        "operationId" : "key_revoke_nosecret",
        "parameters" : [ {
          "description" : "primary email associated to Key (ID)",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "email"
        }, {
          "description" : "primary phone number, international representation",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "phone"
        }, {
          "description" : "verification code sent by email",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "code"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "description" : "pending or done",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/ErrorResponse"
          },
          "401" : {
            "description" : "Authentication error `auth-error`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Unknown key `unknown-key`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "409" : {
            "description" : "Confirm with code sent `confirm-first`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/key/{PK}" : {
      "head" : {
        "tags" : [ "key", "head" ],
        "description" : "HEAD info on Authentiq ID\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PK"
        } ],
        "responses" : {
          "200" : {
            "description" : "Key exists"
          },
          "default" : {
            "$ref" : "#/components/responses/ErrorResponse"
          },
          "410" : {
            "description" : "Key is revoked `revoked-key`",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Unknown key `unknown-key`",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "key", "get" ],
        "description" : "Get public details of an Authentiq ID.\n",
        "operationId" : "key_retrieve",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PK"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "sub" : {
                      "description" : "base64safe encoded public signing key",
                      "type" : "string"
                    },
                    "since" : {
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  },
                  "type" : "object",
                  "title" : "JWT"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/ErrorResponse"
          },
          "410" : {
            "description" : "Key is revoked (gone). `revoked-key`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Unknown key `unknown-key`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "key", "put" ],
        "description" : "Update Authentiq ID by replacing the object.\n\nv4: `JWT(sub,email,phone)` to bind email/phone hash; \n\nv5: POST issuer-signed email & phone scopes\nand PUT to update registration `JWT(sub, pk, devtoken, ...)`\n\nSee: https://github.com/skion/authentiq/wiki/JWT-Examples\n",
        "operationId" : "key_bind",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PK"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AuthentiqID"
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "description" : "confirmed",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/ErrorResponse"
          },
          "404" : {
            "description" : "Unknown key `unknown-key`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "409" : {
            "description" : "Already bound to another key `duplicate-hash`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "key", "post" ],
        "description" : "update properties of an Authentiq ID.\n(not operational in v4; use PUT for now)\n\nv5: POST issuer-signed email & phone scopes in\na self-signed JWT\n\nSee: https://github.com/skion/authentiq/wiki/JWT-Examples\n",
        "operationId" : "key_update",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PK"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AuthentiqID"
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "description" : "confirmed",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/ErrorResponse"
          },
          "404" : {
            "description" : "Unknown key `unknown-key`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "key", "delete" ],
        "description" : "Revoke an Identity (Key) with a revocation secret",
        "operationId" : "key_revoke",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PK"
        }, {
          "description" : "revokation secret",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "secret"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "status" : {
                      "description" : "done",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/ErrorResponse"
          },
          "401" : {
            "description" : "Key not found / wrong code `auth-error`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Unknown key `unknown-key`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "parameters" : {
      "PK" : {
        "description" : "Public Signing Key - Authentiq ID (43 chars)",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "in" : "path",
        "name" : "PK"
      },
      "JobID" : {
        "description" : "Job ID (20 chars)",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "in" : "path",
        "name" : "job"
      }
    },
    "requestBodies" : {
      "AuthentiqID" : {
        "description" : "Authentiq ID to register",
        "required" : true,
        "content" : {
          "application/jwt" : {
            "schema" : {
              "$ref" : "#/components/schemas/AuthentiqID"
            }
          }
        }
      }
    },
    "responses" : {
      "ErrorResponse" : {
        "description" : "Error response",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas" : {
      "Claims" : {
        "description" : "Claim in JWT format, self- or issuer-signed. \n",
        "properties" : {
          "sub" : {
            "description" : "UUID",
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "scope" : {
            "description" : "claim scope",
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          }
        },
        "required" : [ "sub", "scope" ]
      },
      "Error" : {
        "properties" : {
          "detail" : {
            "type" : "string"
          },
          "error" : {
            "type" : "integer"
          },
          "title" : {
            "type" : "string"
          },
          "type" : {
            "description" : "unique uri for this error",
            "type" : "string"
          }
        },
        "required" : [ "error" ]
      },
      "AuthentiqID" : {
        "description" : "Authentiq ID in JWT format, self-signed.\n",
        "properties" : {
          "sub" : {
            "description" : "UUID and public signing key",
            "type" : "string"
          },
          "devtoken" : {
            "description" : "device token for push messages",
            "type" : "string"
          }
        },
        "required" : [ "sub" ]
      },
      "PushToken" : {
        "description" : "PushToken in JWT format, self-signed. \n",
        "properties" : {
          "aud" : {
            "description" : "audience (URI)",
            "type" : "string"
          },
          "sub" : {
            "description" : "UUID and public signing key",
            "type" : "string"
          },
          "nbf" : {
            "type" : "integer"
          },
          "iss" : {
            "description" : "issuer (URI)",
            "type" : "string"
          },
          "exp" : {
            "type" : "integer"
          },
          "iat" : {
            "type" : "integer"
          }
        },
        "required" : [ "sub", "iss", "aud" ]
      }
    }
  }
}