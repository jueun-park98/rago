{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "mike.ralphson@gmail.com",
      "name" : "Mike Ralphson",
      "url" : "https://github.com/mermade/aws2openapi",
      "x-twitter" : "PermittedSoc"
    },
    "description" : "AWS Amplify Admin API",
    "license" : {
      "name" : "Apache 2.0 License",
      "url" : "http://www.apache.org/licenses/"
    },
    "termsOfService" : "https://aws.amazon.com/service-terms/",
    "title" : "AmplifyBackend",
    "version" : "2020-08-11",
    "x-providerName" : "amazonaws.com",
    "x-logo" : {
      "url" : "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png",
      "backgroundColor" : "#FFFFFF"
    },
    "x-aws-signingName" : "amplifybackend",
    "x-apiClientRegistration" : {
      "url" : "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-preferred" : true,
    "x-release" : "v4",
    "x-apisguru-categories" : [ "cloud" ],
    "x-serviceName" : "amplifybackend",
    "x-origin" : [ {
      "contentType" : "application/json",
      "url" : "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/amplifybackend-2020-08-11.normal.json",
      "converter" : {
        "url" : "https://github.com/mermade/aws2openapi",
        "version" : "1.0.0"
      },
      "x-apisguru-driver" : "external"
    } ]
  },
  "servers" : [ {
    "url" : "http://amplifybackend.{region}.amazonaws.com",
    "description" : "The AmplifyBackend multi-region endpoint",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "us-east-1",
        "enum" : [ "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-west-1", "us-gov-east-1", "ca-central-1", "eu-north-1", "eu-west-1", "eu-west-2", "eu-west-3", "eu-central-1", "eu-south-1", "af-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ap-east-1", "ap-south-1", "sa-east-1", "me-south-1" ]
      }
    }
  }, {
    "url" : "https://amplifybackend.{region}.amazonaws.com",
    "description" : "The AmplifyBackend multi-region endpoint",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "us-east-1",
        "enum" : [ "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-west-1", "us-gov-east-1", "ca-central-1", "eu-north-1", "eu-west-1", "eu-west-2", "eu-west-3", "eu-central-1", "eu-south-1", "af-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ap-east-1", "ap-south-1", "sa-east-1", "me-south-1" ]
      }
    }
  }, {
    "url" : "http://amplifybackend.{region}.amazonaws.com.cn",
    "description" : "The AmplifyBackend endpoint for China (Beijing) and China (Ningxia)",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "cn-north-1",
        "enum" : [ "cn-north-1", "cn-northwest-1" ]
      }
    }
  }, {
    "url" : "https://amplifybackend.{region}.amazonaws.com.cn",
    "description" : "The AmplifyBackend endpoint for China (Beijing) and China (Ningxia)",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "cn-north-1",
        "enum" : [ "cn-north-1", "cn-northwest-1" ]
      }
    }
  } ],
  "paths" : {
    "/backend/{appId}/environments/{backendEnvironmentName}/clone" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "This operation clones an existing backend.",
        "operationId" : "CloneBackend",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : "The name of the backend environment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "backendEnvironmentName"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "targetEnvironmentName" : {
                    "description" : "The name of the destination backend environment to be created.",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "targetEnvironmentName" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloneBackendResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "This operation creates a backend for an Amplify app. Backends are automatically created at the time of app creation.",
        "operationId" : "CreateBackend",
        "parameters" : [ ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "appId" : {
                    "description" : "The app ID.",
                    "type" : "string"
                  },
                  "appName" : {
                    "description" : "The name of the app.",
                    "type" : "string"
                  },
                  "backendEnvironmentName" : {
                    "description" : "The name of the backend environment.",
                    "type" : "string"
                  },
                  "resourceConfig" : {
                    "description" : "Defines the resource configuration for the data model in your Amplify project.",
                    "properties" : { },
                    "type" : "object"
                  },
                  "resourceName" : {
                    "description" : "The name of the resource.",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "appId", "appName", "backendEnvironmentName" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateBackendResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/api" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Creates a new backend API resource.",
        "operationId" : "CreateBackendAPI",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "backendEnvironmentName" : {
                    "description" : "The name of the backend environment.",
                    "type" : "string"
                  },
                  "resourceConfig" : {
                    "description" : "The resource config for the data model, configured as a part of the Amplify project.",
                    "properties" : {
                      "AdditionalAuthTypes" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/ListOfBackendAPIAuthType"
                        }, {
                          "description" : "Additional authentication methods used to interact with your data models.",
                          "xml" : {
                            "name" : "additionalAuthTypes"
                          }
                        } ]
                      },
                      "ApiName" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/__string"
                        }, {
                          "description" : "The API name used to interact with the data model, configured as a part of your Amplify project.",
                          "xml" : {
                            "name" : "apiName"
                          }
                        } ]
                      },
                      "ConflictResolution" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/BackendAPIConflictResolution"
                        }, {
                          "description" : "The conflict resolution strategy for your data stored in the data models.",
                          "xml" : {
                            "name" : "conflictResolution"
                          }
                        } ]
                      },
                      "DefaultAuthType" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/BackendAPIAuthType"
                        }, {
                          "description" : "The default authentication type for interacting with the configured data models in your Amplify project.",
                          "xml" : {
                            "name" : "defaultAuthType"
                          }
                        } ]
                      },
                      "Service" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/__string"
                        }, {
                          "description" : "The service used to provision and interact with the data model.",
                          "xml" : {
                            "name" : "service"
                          }
                        } ]
                      },
                      "TransformSchema" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/__string"
                        }, {
                          "description" : "The definition of the data model in the annotated transform of the GraphQL schema.",
                          "xml" : {
                            "name" : "transformSchema"
                          }
                        } ]
                      }
                    },
                    "type" : "object"
                  },
                  "resourceName" : {
                    "description" : "The name of this resource.",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "backendEnvironmentName", "resourceConfig", "resourceName" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateBackendAPIResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/auth" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Creates a new backend authentication resource.",
        "operationId" : "CreateBackendAuth",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "backendEnvironmentName" : {
                    "description" : "The name of the backend environment.",
                    "type" : "string"
                  },
                  "resourceConfig" : {
                    "description" : "Defines the resource configuration when creating an auth resource in your Amplify project.",
                    "properties" : {
                      "AuthResources" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/AuthResources"
                        }, {
                          "description" : "Defines whether you want to configure only authentication or both authentication and authorization settings.",
                          "xml" : {
                            "name" : "authResources"
                          }
                        } ]
                      },
                      "IdentityPoolConfigs" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/CreateBackendAuthIdentityPoolConfig"
                        }, {
                          "description" : "Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.",
                          "xml" : {
                            "name" : "identityPoolConfigs"
                          }
                        } ]
                      },
                      "Service" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Service"
                        }, {
                          "description" : "Defines the service name to use when configuring an authentication resource in your Amplify project.",
                          "xml" : {
                            "name" : "service"
                          }
                        } ]
                      },
                      "UserPoolConfigs" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/CreateBackendAuthUserPoolConfig"
                        }, {
                          "description" : "Describes authentication configuration for the Amazon Cognito user pool, provisioned as a part of your auth resource in the Amplify project.",
                          "xml" : {
                            "name" : "userPoolConfigs"
                          }
                        } ]
                      }
                    },
                    "type" : "object"
                  },
                  "resourceName" : {
                    "description" : "The name of this resource.",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "backendEnvironmentName", "resourceConfig", "resourceName" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateBackendAuthResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/config" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Creates a config object for a backend.",
        "operationId" : "CreateBackendConfig",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "backendManagerAppId" : {
                    "description" : "The app ID for the backend manager.",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateBackendConfigResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/challenge" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Generates a one-time challenge code to authenticate a user into your Amplify Admin UI.",
        "operationId" : "CreateToken",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateTokenResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/environments/{backendEnvironmentName}/remove" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Removes an existing environment from your Amplify project.",
        "operationId" : "DeleteBackend",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : "The name of the backend environment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "backendEnvironmentName"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteBackendResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/api/{backendEnvironmentName}/remove" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Deletes an existing backend API resource.",
        "operationId" : "DeleteBackendAPI",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : "The name of the backend environment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "backendEnvironmentName"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "resourceConfig" : {
                    "description" : "The resource config for the data model, configured as a part of the Amplify project.",
                    "properties" : {
                      "AdditionalAuthTypes" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/ListOfBackendAPIAuthType"
                        }, {
                          "description" : "Additional authentication methods used to interact with your data models.",
                          "xml" : {
                            "name" : "additionalAuthTypes"
                          }
                        } ]
                      },
                      "ApiName" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/__string"
                        }, {
                          "description" : "The API name used to interact with the data model, configured as a part of your Amplify project.",
                          "xml" : {
                            "name" : "apiName"
                          }
                        } ]
                      },
                      "ConflictResolution" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/BackendAPIConflictResolution"
                        }, {
                          "description" : "The conflict resolution strategy for your data stored in the data models.",
                          "xml" : {
                            "name" : "conflictResolution"
                          }
                        } ]
                      },
                      "DefaultAuthType" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/BackendAPIAuthType"
                        }, {
                          "description" : "The default authentication type for interacting with the configured data models in your Amplify project.",
                          "xml" : {
                            "name" : "defaultAuthType"
                          }
                        } ]
                      },
                      "Service" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/__string"
                        }, {
                          "description" : "The service used to provision and interact with the data model.",
                          "xml" : {
                            "name" : "service"
                          }
                        } ]
                      },
                      "TransformSchema" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/__string"
                        }, {
                          "description" : "The definition of the data model in the annotated transform of the GraphQL schema.",
                          "xml" : {
                            "name" : "transformSchema"
                          }
                        } ]
                      }
                    },
                    "type" : "object"
                  },
                  "resourceName" : {
                    "description" : "The name of this resource.",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "resourceName" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteBackendAPIResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/auth/{backendEnvironmentName}/remove" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Deletes an existing backend authentication resource.",
        "operationId" : "DeleteBackendAuth",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : "The name of the backend environment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "backendEnvironmentName"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "resourceName" : {
                    "description" : "The name of this resource.",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "resourceName" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteBackendAuthResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/challenge/{sessionId}/remove" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Deletes the challenge token based on the given appId and sessionId.",
        "operationId" : "DeleteToken",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : "The session ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "sessionId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteTokenResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/api/{backendEnvironmentName}/generateModels" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Generates a model schema for an existing backend API resource.",
        "operationId" : "GenerateBackendAPIModels",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : "The name of the backend environment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "backendEnvironmentName"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "resourceName" : {
                    "description" : "The name of this resource.",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "resourceName" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateBackendAPIModelsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/details" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Provides project-level details for your Amplify UI project.",
        "operationId" : "GetBackend",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "backendEnvironmentName" : {
                    "description" : "The name of the backend environment.",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetBackendResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/api/{backendEnvironmentName}/details" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Gets the details for a backend API.",
        "operationId" : "GetBackendAPI",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : "The name of the backend environment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "backendEnvironmentName"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "resourceConfig" : {
                    "description" : "The resource config for the data model, configured as a part of the Amplify project.",
                    "properties" : {
                      "AdditionalAuthTypes" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/ListOfBackendAPIAuthType"
                        }, {
                          "description" : "Additional authentication methods used to interact with your data models.",
                          "xml" : {
                            "name" : "additionalAuthTypes"
                          }
                        } ]
                      },
                      "ApiName" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/__string"
                        }, {
                          "description" : "The API name used to interact with the data model, configured as a part of your Amplify project.",
                          "xml" : {
                            "name" : "apiName"
                          }
                        } ]
                      },
                      "ConflictResolution" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/BackendAPIConflictResolution"
                        }, {
                          "description" : "The conflict resolution strategy for your data stored in the data models.",
                          "xml" : {
                            "name" : "conflictResolution"
                          }
                        } ]
                      },
                      "DefaultAuthType" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/BackendAPIAuthType"
                        }, {
                          "description" : "The default authentication type for interacting with the configured data models in your Amplify project.",
                          "xml" : {
                            "name" : "defaultAuthType"
                          }
                        } ]
                      },
                      "Service" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/__string"
                        }, {
                          "description" : "The service used to provision and interact with the data model.",
                          "xml" : {
                            "name" : "service"
                          }
                        } ]
                      },
                      "TransformSchema" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/__string"
                        }, {
                          "description" : "The definition of the data model in the annotated transform of the GraphQL schema.",
                          "xml" : {
                            "name" : "transformSchema"
                          }
                        } ]
                      }
                    },
                    "type" : "object"
                  },
                  "resourceName" : {
                    "description" : "The name of this resource.",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "resourceName" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetBackendAPIResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/api/{backendEnvironmentName}/getModels" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Generates a model schema for existing backend API resource.",
        "operationId" : "GetBackendAPIModels",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : "The name of the backend environment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "backendEnvironmentName"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "resourceName" : {
                    "description" : "The name of this resource.",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "resourceName" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetBackendAPIModelsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/auth/{backendEnvironmentName}/details" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Gets a backend auth details.",
        "operationId" : "GetBackendAuth",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : "The name of the backend environment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "backendEnvironmentName"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "resourceName" : {
                    "description" : "The name of this resource.",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "resourceName" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetBackendAuthResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/job/{backendEnvironmentName}/{jobId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Returns information about a specific job.",
        "operationId" : "GetBackendJob",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : "The name of the backend environment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "backendEnvironmentName"
        }, {
          "description" : "The ID for the job.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "jobId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetBackendJobResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Updates a specific job.",
        "operationId" : "UpdateBackendJob",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : "The name of the backend environment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "backendEnvironmentName"
        }, {
          "description" : "The ID for the job.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "jobId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "operation" : {
                    "description" : "Filters the list of response objects to include only those with the specified operation name.",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Filters the list of response objects to include only those with the specified status.",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateBackendJobResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/challenge/{sessionId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Gets the challenge token based on the given appId and sessionId.",
        "operationId" : "GetToken",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : "The session ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "sessionId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetTokenResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/auth/{backendEnvironmentName}/import" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Imports an existing backend authentication resource.",
        "operationId" : "ImportBackendAuth",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : "The name of the backend environment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "backendEnvironmentName"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "identityPoolId" : {
                    "description" : "The ID of the Amazon Cognito identity pool.",
                    "type" : "string"
                  },
                  "nativeClientId" : {
                    "description" : "The ID of the Amazon Cognito native client.",
                    "type" : "string"
                  },
                  "userPoolId" : {
                    "description" : "The ID of the Amazon Cognito user pool.",
                    "type" : "string"
                  },
                  "webClientId" : {
                    "description" : "The ID of the Amazon Cognito web client.",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "nativeClientId", "userPoolId", "webClientId" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportBackendAuthResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/job/{backendEnvironmentName}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Lists the jobs for the backend of an Amplify app.",
        "operationId" : "ListBackendJobs",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : "The name of the backend environment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "backendEnvironmentName"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "jobId" : {
                    "description" : "The ID for the job.",
                    "type" : "string"
                  },
                  "maxResults" : {
                    "description" : "The maximum number of results that you want in the response.",
                    "maximum" : 25,
                    "minimum" : 1,
                    "type" : "integer"
                  },
                  "nextToken" : {
                    "description" : "The token for the next set of results.",
                    "type" : "string"
                  },
                  "operation" : {
                    "description" : "Filters the list of response objects to include only those with the specified operation name.",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Filters the list of response objects to include only those with the specified status.",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListBackendJobsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/remove" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Removes all backend environments from your Amplify project.",
        "operationId" : "RemoveAllBackends",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "cleanAmplifyApp" : {
                    "description" : "Cleans up the Amplify Console app if this value is set to true.",
                    "type" : "boolean"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoveAllBackendsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/config/remove" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Removes the AWS resources required to access the Amplify Admin UI.",
        "operationId" : "RemoveBackendConfig",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoveBackendConfigResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/api/{backendEnvironmentName}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Updates an existing backend API resource.",
        "operationId" : "UpdateBackendAPI",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : "The name of the backend environment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "backendEnvironmentName"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "resourceConfig" : {
                    "description" : "The resource config for the data model, configured as a part of the Amplify project.",
                    "properties" : {
                      "AdditionalAuthTypes" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/ListOfBackendAPIAuthType"
                        }, {
                          "description" : "Additional authentication methods used to interact with your data models.",
                          "xml" : {
                            "name" : "additionalAuthTypes"
                          }
                        } ]
                      },
                      "ApiName" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/__string"
                        }, {
                          "description" : "The API name used to interact with the data model, configured as a part of your Amplify project.",
                          "xml" : {
                            "name" : "apiName"
                          }
                        } ]
                      },
                      "ConflictResolution" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/BackendAPIConflictResolution"
                        }, {
                          "description" : "The conflict resolution strategy for your data stored in the data models.",
                          "xml" : {
                            "name" : "conflictResolution"
                          }
                        } ]
                      },
                      "DefaultAuthType" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/BackendAPIAuthType"
                        }, {
                          "description" : "The default authentication type for interacting with the configured data models in your Amplify project.",
                          "xml" : {
                            "name" : "defaultAuthType"
                          }
                        } ]
                      },
                      "Service" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/__string"
                        }, {
                          "description" : "The service used to provision and interact with the data model.",
                          "xml" : {
                            "name" : "service"
                          }
                        } ]
                      },
                      "TransformSchema" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/__string"
                        }, {
                          "description" : "The definition of the data model in the annotated transform of the GraphQL schema.",
                          "xml" : {
                            "name" : "transformSchema"
                          }
                        } ]
                      }
                    },
                    "type" : "object"
                  },
                  "resourceName" : {
                    "description" : "The name of this resource.",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "resourceName" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateBackendAPIResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/auth/{backendEnvironmentName}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Updates an existing backend authentication resource.",
        "operationId" : "UpdateBackendAuth",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : "The name of the backend environment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "backendEnvironmentName"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "resourceConfig" : {
                    "description" : "Defines the resource configuration when updating an authentication resource in your Amplify project.",
                    "properties" : {
                      "AuthResources" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/AuthResources"
                        }, {
                          "description" : "Defines the service name to use when configuring an authentication resource in your Amplify project.",
                          "xml" : {
                            "name" : "authResources"
                          }
                        } ]
                      },
                      "IdentityPoolConfigs" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/UpdateBackendAuthIdentityPoolConfig"
                        }, {
                          "description" : "Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.",
                          "xml" : {
                            "name" : "identityPoolConfigs"
                          }
                        } ]
                      },
                      "Service" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Service"
                        }, {
                          "description" : "Defines the service name to use when configuring an authentication resource in your Amplify project.",
                          "xml" : {
                            "name" : "service"
                          }
                        } ]
                      },
                      "UserPoolConfigs" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/UpdateBackendAuthUserPoolConfig"
                        }, {
                          "description" : "Describes the authentication configuration for the Amazon Cognito user pool, provisioned as a part of your auth resource in the Amplify project.",
                          "xml" : {
                            "name" : "userPoolConfigs"
                          }
                        } ]
                      }
                    },
                    "type" : "object"
                  },
                  "resourceName" : {
                    "description" : "The name of this resource.",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "resourceConfig", "resourceName" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateBackendAuthResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/backend/{appId}/config/update" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Updates the AWS resources required to access the Amplify Admin UI.",
        "operationId" : "UpdateBackendConfig",
        "parameters" : [ {
          "description" : "The app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "loginAuthConfig" : {
                    "description" : "The request object for this operation.",
                    "properties" : {
                      "AwsCognitoIdentityPoolId" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/__string"
                        }, {
                          "description" : "The Amazon Cognito identity pool ID used for the Amplify Admin UI login authorization.",
                          "xml" : {
                            "name" : "aws_cognito_identity_pool_id"
                          }
                        } ]
                      },
                      "AwsCognitoRegion" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/__string"
                        }, {
                          "description" : "The AWS Region for the Amplify Admin UI login.",
                          "xml" : {
                            "name" : "aws_cognito_region"
                          }
                        } ]
                      },
                      "AwsUserPoolsId" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/__string"
                        }, {
                          "description" : "The Amazon Cognito user pool ID used for Amplify Admin UI login authentication.",
                          "xml" : {
                            "name" : "aws_user_pools_id"
                          }
                        } ]
                      },
                      "AwsUserPoolsWebClientId" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/__string"
                        }, {
                          "description" : "The web client ID for the Amazon Cognito user pools.",
                          "xml" : {
                            "name" : "aws_user_pools_web_client_id"
                          }
                        } ]
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateBackendConfigResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "GatewayTimeoutException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayTimeoutException"
                }
              }
            }
          },
          "482" : {
            "description" : "TooManyRequestsException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TooManyRequestsException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "parameters" : {
      "X-Amz-Content-Sha256" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Content-Sha256"
      },
      "X-Amz-Date" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Date"
      },
      "X-Amz-Algorithm" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Algorithm"
      },
      "X-Amz-Credential" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Credential"
      },
      "X-Amz-Security-Token" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Security-Token"
      },
      "X-Amz-Signature" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-SignedHeaders"
      }
    },
    "schemas" : {
      "CloneBackendResponse" : {
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "Error" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "If the request fails, this error is returned.",
              "xml" : {
                "name" : "error"
              }
            } ]
          },
          "JobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID for the job.",
              "xml" : {
                "name" : "jobId"
              }
            } ]
          },
          "Operation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the operation.",
              "xml" : {
                "name" : "operation"
              }
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The current status of the request.",
              "xml" : {
                "name" : "status"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "NotFoundException" : { },
      "GatewayTimeoutException" : { },
      "TooManyRequestsException" : { },
      "BadRequestException" : { },
      "CreateBackendResponse" : {
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "Error" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "If the request fails, this error is returned.",
              "xml" : {
                "name" : "error"
              }
            } ]
          },
          "JobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID for the job.",
              "xml" : {
                "name" : "jobId"
              }
            } ]
          },
          "Operation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the operation.",
              "xml" : {
                "name" : "operation"
              }
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The current status of the request.",
              "xml" : {
                "name" : "status"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "CreateBackendAPIResponse" : {
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "Error" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "If the request fails, this error is returned.",
              "xml" : {
                "name" : "error"
              }
            } ]
          },
          "JobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID for the job.",
              "xml" : {
                "name" : "jobId"
              }
            } ]
          },
          "Operation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the operation.",
              "xml" : {
                "name" : "operation"
              }
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The current status of the request.",
              "xml" : {
                "name" : "status"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "ListOfBackendAPIAuthType" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/BackendAPIAuthType"
        }
      },
      "__string" : {
        "type" : "string"
      },
      "BackendAPIConflictResolution" : {
        "description" : "Describes the conflict resolution configuration for your data model configured in your Amplify project.",
        "properties" : {
          "ResolutionStrategy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResolutionStrategy"
            }, {
              "description" : "The strategy for conflict resolution.",
              "xml" : {
                "name" : "resolutionStrategy"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "BackendAPIAuthType" : {
        "description" : "Describes the auth types for your configured data models.",
        "properties" : {
          "Mode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Mode"
            }, {
              "description" : "Describes the authentication mode.",
              "xml" : {
                "name" : "mode"
              }
            } ]
          },
          "Settings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BackendAPIAppSyncAuthSettings"
            }, {
              "description" : "Describes settings for the authentication mode.",
              "xml" : {
                "name" : "settings"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "CreateBackendAuthResponse" : {
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "Error" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "If the request fails, this error is returned.",
              "xml" : {
                "name" : "error"
              }
            } ]
          },
          "JobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID for the job.",
              "xml" : {
                "name" : "jobId"
              }
            } ]
          },
          "Operation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the operation.",
              "xml" : {
                "name" : "operation"
              }
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The current status of the request.",
              "xml" : {
                "name" : "status"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "AuthResources" : {
        "type" : "string",
        "enum" : [ "USER_POOL_ONLY", "IDENTITY_POOL_AND_USER_POOL" ]
      },
      "CreateBackendAuthIdentityPoolConfig" : {
        "description" : "Describes authorization configurations for the auth resources, configured as a part of your Amplify project.",
        "properties" : {
          "IdentityPoolName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "Name of the Amazon Cognito identity pool used for authorization.",
              "xml" : {
                "name" : "identityPoolName"
              }
            } ]
          },
          "UnauthenticatedLogin" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__boolean"
            }, {
              "description" : "Set to true or false based on whether you want to enable guest authorization to your Amplify app.",
              "xml" : {
                "name" : "unauthenticatedLogin"
              }
            } ]
          }
        },
        "type" : "object",
        "required" : [ "UnauthenticatedLogin", "IdentityPoolName" ]
      },
      "Service" : {
        "type" : "string",
        "enum" : [ "COGNITO" ]
      },
      "CreateBackendAuthUserPoolConfig" : {
        "description" : "Describes the Amazon Cognito user pool configuration for the auth resource to be configured for your Amplify project.",
        "properties" : {
          "ForgotPassword" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateBackendAuthForgotPasswordConfig"
            }, {
              "description" : "Describes the forgotten password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.",
              "xml" : {
                "name" : "forgotPassword"
              }
            } ]
          },
          "Mfa" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateBackendAuthMFAConfig"
            }, {
              "description" : "Describes whether to apply multi-factor authentication policies for your Amazon Cognito user pool configured as a part of your Amplify project.",
              "xml" : {
                "name" : "mfa"
              }
            } ]
          },
          "OAuth" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateBackendAuthOAuthConfig"
            }, {
              "description" : "Describes the OAuth policy and rules for your Amazon Cognito user pool, configured as a part of your Amplify project.",
              "xml" : {
                "name" : "oAuth"
              }
            } ]
          },
          "PasswordPolicy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateBackendAuthPasswordPolicyConfig"
            }, {
              "description" : "Describes the password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.",
              "xml" : {
                "name" : "passwordPolicy"
              }
            } ]
          },
          "RequiredSignUpAttributes" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfRequiredSignUpAttributesElement"
            }, {
              "description" : "The required attributes to sign up new users in the user pool.",
              "xml" : {
                "name" : "requiredSignUpAttributes"
              }
            } ]
          },
          "SignInMethod" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SignInMethod"
            }, {
              "description" : "Describes the sign-in methods that your Amplify app users use to log in using the Amazon Cognito user pool, configured as a part of your Amplify project.",
              "xml" : {
                "name" : "signInMethod"
              }
            } ]
          },
          "UserPoolName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The Amazon Cognito user pool name.",
              "xml" : {
                "name" : "userPoolName"
              }
            } ]
          }
        },
        "type" : "object",
        "required" : [ "RequiredSignUpAttributes", "SignInMethod", "UserPoolName" ]
      },
      "CreateBackendConfigResponse" : {
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "JobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID for the job.",
              "xml" : {
                "name" : "jobId"
              }
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The current status of the request.",
              "xml" : {
                "name" : "status"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "CreateTokenResponse" : {
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "ChallengeCode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "One-time challenge code for authenticating into the Amplify Admin UI.",
              "xml" : {
                "name" : "challengeCode"
              }
            } ]
          },
          "SessionId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "A unique ID provided when creating a new challenge token.",
              "xml" : {
                "name" : "sessionId"
              }
            } ]
          },
          "Ttl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The expiry time for the one-time generated token code.",
              "xml" : {
                "name" : "ttl"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "DeleteBackendResponse" : {
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "Error" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "If the request fails, this error is returned.",
              "xml" : {
                "name" : "error"
              }
            } ]
          },
          "JobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID for the job.",
              "xml" : {
                "name" : "jobId"
              }
            } ]
          },
          "Operation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the operation.",
              "xml" : {
                "name" : "operation"
              }
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The current status of the request.",
              "xml" : {
                "name" : "status"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "DeleteBackendAPIResponse" : {
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "Error" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "If the request fails, this error is returned.",
              "xml" : {
                "name" : "error"
              }
            } ]
          },
          "JobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID for the job.",
              "xml" : {
                "name" : "jobId"
              }
            } ]
          },
          "Operation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the operation.",
              "xml" : {
                "name" : "operation"
              }
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The current status of the request.",
              "xml" : {
                "name" : "status"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "DeleteBackendAuthResponse" : {
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "Error" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "If the request fails, this error is returned.",
              "xml" : {
                "name" : "error"
              }
            } ]
          },
          "JobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID for the job.",
              "xml" : {
                "name" : "jobId"
              }
            } ]
          },
          "Operation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the operation.",
              "xml" : {
                "name" : "operation"
              }
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The current status of the request.",
              "xml" : {
                "name" : "status"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "DeleteTokenResponse" : {
        "properties" : {
          "IsSuccess" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__boolean"
            }, {
              "description" : "Indicates whether the request succeeded or failed.",
              "xml" : {
                "name" : "isSuccess"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "GenerateBackendAPIModelsResponse" : {
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "Error" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "If the request fails, this error is returned.",
              "xml" : {
                "name" : "error"
              }
            } ]
          },
          "JobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID for the job.",
              "xml" : {
                "name" : "jobId"
              }
            } ]
          },
          "Operation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the operation.",
              "xml" : {
                "name" : "operation"
              }
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The current status of the request.",
              "xml" : {
                "name" : "status"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "GetBackendResponse" : {
        "properties" : {
          "AmplifyMetaConfig" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "A stringified version of the current configs for your Amplify project.",
              "xml" : {
                "name" : "amplifyMetaConfig"
              }
            } ]
          },
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "AppName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the app.",
              "xml" : {
                "name" : "appName"
              }
            } ]
          },
          "BackendEnvironmentList" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOf__string"
            }, {
              "description" : "A list of backend environments in an array.",
              "xml" : {
                "name" : "backendEnvironmentList"
              }
            } ]
          },
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "Error" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "If the request failed, this is the returned error.",
              "xml" : {
                "name" : "error"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "GetBackendAPIResponse" : {
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "Error" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "If the request fails, this error is returned.",
              "xml" : {
                "name" : "error"
              }
            } ]
          },
          "ResourceConfig" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BackendAPIResourceConfig"
            }, {
              "description" : "The resource configuration for this response object.",
              "xml" : {
                "name" : "resourceConfig"
              }
            } ]
          },
          "ResourceName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of this resource.",
              "xml" : {
                "name" : "resourceName"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "GetBackendAPIModelsResponse" : {
        "properties" : {
          "Models" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "Stringified JSON of the datastore model.",
              "xml" : {
                "name" : "models"
              }
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Status"
            }, {
              "description" : "The current status of the request.",
              "xml" : {
                "name" : "status"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "GetBackendAuthResponse" : {
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "Error" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "If the request fails, this error is returned.",
              "xml" : {
                "name" : "error"
              }
            } ]
          },
          "ResourceConfig" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateBackendAuthResourceConfig"
            }, {
              "description" : "The resource configuration for authorization requests to the backend of your Amplify project.",
              "xml" : {
                "name" : "resourceConfig"
              }
            } ]
          },
          "ResourceName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of this resource.",
              "xml" : {
                "name" : "resourceName"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "GetBackendJobResponse" : {
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "CreateTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The time when the job was created.",
              "xml" : {
                "name" : "createTime"
              }
            } ]
          },
          "Error" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "If the request fails, this error is returned.",
              "xml" : {
                "name" : "error"
              }
            } ]
          },
          "JobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID for the job.",
              "xml" : {
                "name" : "jobId"
              }
            } ]
          },
          "Operation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the operation.",
              "xml" : {
                "name" : "operation"
              }
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The current status of the request.",
              "xml" : {
                "name" : "status"
              }
            } ]
          },
          "UpdateTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The time when the job was last updated.",
              "xml" : {
                "name" : "updateTime"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "GetTokenResponse" : {
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "ChallengeCode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The one-time challenge code for authenticating into the Amplify Admin UI.",
              "xml" : {
                "name" : "challengeCode"
              }
            } ]
          },
          "SessionId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "A unique ID provided when creating a new challenge token.",
              "xml" : {
                "name" : "sessionId"
              }
            } ]
          },
          "Ttl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The expiry time for the one-time generated token code.",
              "xml" : {
                "name" : "ttl"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "ImportBackendAuthResponse" : {
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "Error" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "If the request fails, this error is returned.",
              "xml" : {
                "name" : "error"
              }
            } ]
          },
          "JobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID for the job.",
              "xml" : {
                "name" : "jobId"
              }
            } ]
          },
          "Operation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the operation.",
              "xml" : {
                "name" : "operation"
              }
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The current status of the request.",
              "xml" : {
                "name" : "status"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "ListBackendJobsResponse" : {
        "properties" : {
          "Jobs" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfBackendJobRespObj"
            }, {
              "description" : "An array of jobs and their properties.",
              "xml" : {
                "name" : "jobs"
              }
            } ]
          },
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The token for the next set of results.",
              "xml" : {
                "name" : "nextToken"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "RemoveAllBackendsResponse" : {
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "Error" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "If the request fails, this error is returned.",
              "xml" : {
                "name" : "error"
              }
            } ]
          },
          "JobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID for the job.",
              "xml" : {
                "name" : "jobId"
              }
            } ]
          },
          "Operation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the operation.",
              "xml" : {
                "name" : "operation"
              }
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The current status of the request.",
              "xml" : {
                "name" : "status"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "RemoveBackendConfigResponse" : {
        "properties" : {
          "Error" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "If the request fails, this error is returned.",
              "xml" : {
                "name" : "error"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateBackendAPIResponse" : {
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "Error" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "If the request fails, this error is returned.",
              "xml" : {
                "name" : "error"
              }
            } ]
          },
          "JobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID for the job.",
              "xml" : {
                "name" : "jobId"
              }
            } ]
          },
          "Operation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the operation.",
              "xml" : {
                "name" : "operation"
              }
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The current status of the request.",
              "xml" : {
                "name" : "status"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateBackendAuthResponse" : {
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "Error" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "If the request fails, this error is returned.",
              "xml" : {
                "name" : "error"
              }
            } ]
          },
          "JobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID for the job.",
              "xml" : {
                "name" : "jobId"
              }
            } ]
          },
          "Operation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the operation.",
              "xml" : {
                "name" : "operation"
              }
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The current status of the request.",
              "xml" : {
                "name" : "status"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateBackendAuthIdentityPoolConfig" : {
        "description" : "Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.",
        "properties" : {
          "UnauthenticatedLogin" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__boolean"
            }, {
              "description" : "A boolean value that can be set to allow or disallow guest-level authorization into your Amplify app.",
              "xml" : {
                "name" : "unauthenticatedLogin"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateBackendAuthUserPoolConfig" : {
        "description" : "Describes the Amazon Cognito user pool configuration for the authorization resource to be configured for your Amplify project on an update.",
        "properties" : {
          "ForgotPassword" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateBackendAuthForgotPasswordConfig"
            }, {
              "description" : "Describes the forgot password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.",
              "xml" : {
                "name" : "forgotPassword"
              }
            } ]
          },
          "Mfa" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateBackendAuthMFAConfig"
            }, {
              "description" : "Describes whether to apply multi-factor authentication policies for your Amazon Cognito user pool configured as a part of your Amplify project.",
              "xml" : {
                "name" : "mfa"
              }
            } ]
          },
          "OAuth" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateBackendAuthOAuthConfig"
            }, {
              "description" : "Describes the OAuth policy and rules for your Amazon Cognito user pool, configured as a part of your Amplify project.",
              "xml" : {
                "name" : "oAuth"
              }
            } ]
          },
          "PasswordPolicy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateBackendAuthPasswordPolicyConfig"
            }, {
              "description" : "Describes the password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.",
              "xml" : {
                "name" : "passwordPolicy"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateBackendConfigResponse" : {
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "BackendManagerAppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID for the backend manager.",
              "xml" : {
                "name" : "backendManagerAppId"
              }
            } ]
          },
          "Error" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "If the request fails, this error is returned.",
              "xml" : {
                "name" : "error"
              }
            } ]
          },
          "LoginAuthConfig" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/LoginAuthConfigReqObj"
            }, {
              "description" : "Describes the Amazon Cognito configurations for the Admin UI auth resource to log in with.",
              "xml" : {
                "name" : "loginAuthConfig"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateBackendJobResponse" : {
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "CreateTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The time when the job was created.",
              "xml" : {
                "name" : "createTime"
              }
            } ]
          },
          "Error" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "If the request fails, this error is returned.",
              "xml" : {
                "name" : "error"
              }
            } ]
          },
          "JobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID for the job.",
              "xml" : {
                "name" : "jobId"
              }
            } ]
          },
          "Operation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the operation.",
              "xml" : {
                "name" : "operation"
              }
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The current status of the request.",
              "xml" : {
                "name" : "status"
              }
            } ]
          },
          "UpdateTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The time when the job was last updated.",
              "xml" : {
                "name" : "updateTime"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "__double" : {
        "format" : "double",
        "type" : "number"
      },
      "BackendAPIAppSyncAuthSettings" : {
        "description" : "The authentication settings for accessing provisioned data models in your Amplify project.",
        "properties" : {
          "CognitoUserPoolId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The Amazon Cognito user pool ID, if Amazon Cognito was used as an authentication setting to access your data models.",
              "xml" : {
                "name" : "cognitoUserPoolId"
              }
            } ]
          },
          "Description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The API key description for API_KEY, if it was used as an authentication mechanism to access your data models.",
              "xml" : {
                "name" : "description"
              }
            } ]
          },
          "ExpirationTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__double"
            }, {
              "description" : "The API key expiration time for API_KEY, if it was used as an authentication mechanism to access your data models.",
              "xml" : {
                "name" : "expirationTime"
              }
            } ]
          },
          "OpenIDAuthTTL" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The expiry time for the OpenID authentication mechanism.",
              "xml" : {
                "name" : "openIDAuthTTL"
              }
            } ]
          },
          "OpenIDClientId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The clientID for openID, if openID was used as an authentication setting to access your data models.",
              "xml" : {
                "name" : "openIDClientId"
              }
            } ]
          },
          "OpenIDIatTTL" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The expiry time for the OpenID authentication mechanism.",
              "xml" : {
                "name" : "openIDIatTTL"
              }
            } ]
          },
          "OpenIDIssueURL" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The openID issuer URL, if openID was used as an authentication setting to access your data models.",
              "xml" : {
                "name" : "openIDIssueURL"
              }
            } ]
          },
          "OpenIDProviderName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The OpenID provider name, if OpenID was used as an authentication mechanism to access your data models.",
              "xml" : {
                "name" : "openIDProviderName"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "Mode" : {
        "type" : "string",
        "enum" : [ "API_KEY", "AWS_IAM", "AMAZON_COGNITO_USER_POOLS", "OPENID_CONNECT" ]
      },
      "ResolutionStrategy" : {
        "type" : "string",
        "enum" : [ "OPTIMISTIC_CONCURRENCY", "LAMBDA", "AUTOMERGE", "NONE" ]
      },
      "BackendAPIResourceConfig" : {
        "description" : "The resource config for the data model, configured as a part of the Amplify project.",
        "properties" : {
          "AdditionalAuthTypes" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfBackendAPIAuthType"
            }, {
              "description" : "Additional authentication methods used to interact with your data models.",
              "xml" : {
                "name" : "additionalAuthTypes"
              }
            } ]
          },
          "ApiName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The API name used to interact with the data model, configured as a part of your Amplify project.",
              "xml" : {
                "name" : "apiName"
              }
            } ]
          },
          "ConflictResolution" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BackendAPIConflictResolution"
            }, {
              "description" : "The conflict resolution strategy for your data stored in the data models.",
              "xml" : {
                "name" : "conflictResolution"
              }
            } ]
          },
          "DefaultAuthType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BackendAPIAuthType"
            }, {
              "description" : "The default authentication type for interacting with the configured data models in your Amplify project.",
              "xml" : {
                "name" : "defaultAuthType"
              }
            } ]
          },
          "Service" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The service used to provision and interact with the data model.",
              "xml" : {
                "name" : "service"
              }
            } ]
          },
          "TransformSchema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The definition of the data model in the annotated transform of the GraphQL schema.",
              "xml" : {
                "name" : "transformSchema"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "BackendAuthAppleProviderConfig" : {
        "description" : "Describes Apple social federation configurations for allowing your app users to sign in using OAuth.",
        "properties" : {
          "ClientId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "Describes the client_id (also called Services ID) that comes from Apple.",
              "xml" : {
                "name" : "client_id"
              }
            } ]
          },
          "KeyId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "Describes the key_id that comes from Apple.",
              "xml" : {
                "name" : "key_id"
              }
            } ]
          },
          "PrivateKey" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "Describes the private_key that comes from Apple.",
              "xml" : {
                "name" : "private_key"
              }
            } ]
          },
          "TeamId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "Describes the team_id that comes from Apple.",
              "xml" : {
                "name" : "team_id"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "BackendAuthSocialProviderConfig" : {
        "description" : "Describes third-party social federation configurations for allowing your app users to sign in using OAuth.",
        "properties" : {
          "ClientId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "Describes the client_id, which can be obtained from the third-party social federation provider.",
              "xml" : {
                "name" : "client_id"
              }
            } ]
          },
          "ClientSecret" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "Describes the client_secret, which can be obtained from third-party social federation providers.",
              "xml" : {
                "name" : "client_secret"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "BackendJobRespObj" : {
        "description" : "The response object for this operation.",
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "CreateTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The time when the job was created.",
              "xml" : {
                "name" : "createTime"
              }
            } ]
          },
          "Error" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "If the request fails, this error is returned.",
              "xml" : {
                "name" : "error"
              }
            } ]
          },
          "JobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID for the job.",
              "xml" : {
                "name" : "jobId"
              }
            } ]
          },
          "Operation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the operation.",
              "xml" : {
                "name" : "operation"
              }
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The current status of the request.",
              "xml" : {
                "name" : "status"
              }
            } ]
          },
          "UpdateTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The time when the job was last updated.",
              "xml" : {
                "name" : "updateTime"
              }
            } ]
          }
        },
        "type" : "object",
        "required" : [ "AppId", "BackendEnvironmentName" ]
      },
      "CloneBackendRequest" : {
        "description" : "The request body for CloneBackend.",
        "properties" : {
          "TargetEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the destination backend environment to be created.",
              "xml" : {
                "name" : "targetEnvironmentName"
              }
            } ]
          }
        },
        "type" : "object",
        "title" : "CloneBackendRequest",
        "required" : [ "TargetEnvironmentName" ]
      },
      "CreateBackendAPIRequest" : {
        "description" : "The request body for CreateBackendAPI.",
        "properties" : {
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "ResourceConfig" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BackendAPIResourceConfig"
            }, {
              "description" : "The resource configuration for this request.",
              "xml" : {
                "name" : "resourceConfig"
              }
            } ]
          },
          "ResourceName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of this resource.",
              "xml" : {
                "name" : "resourceName"
              }
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateBackendAPIRequest",
        "required" : [ "ResourceName", "BackendEnvironmentName", "ResourceConfig" ]
      },
      "DeliveryMethod" : {
        "type" : "string",
        "enum" : [ "EMAIL", "SMS" ]
      },
      "EmailSettings" : {
        "description" : "The configuration for the email sent when an app user forgets their password.",
        "properties" : {
          "EmailMessage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The body of the email.",
              "xml" : {
                "name" : "emailMessage"
              }
            } ]
          },
          "EmailSubject" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The subject of the email.",
              "xml" : {
                "name" : "emailSubject"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "SmsSettings" : {
        "description" : "SMS settings for authentication.",
        "properties" : {
          "SmsMessage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The body of the SMS message.",
              "xml" : {
                "name" : "smsMessage"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "CreateBackendAuthForgotPasswordConfig" : {
        "description" : "Describes the forgot password policy for authenticating into the Amplify app.",
        "properties" : {
          "DeliveryMethod" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DeliveryMethod"
            }, {
              "description" : "Describes which mode to use (either SMS or email) to deliver messages to app users who want to recover their password.",
              "xml" : {
                "name" : "deliveryMethod"
              }
            } ]
          },
          "EmailSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EmailSettings"
            }, {
              "description" : "The configuration for the email sent when an app user forgets their password.",
              "xml" : {
                "name" : "emailSettings"
              }
            } ]
          },
          "SmsSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SmsSettings"
            }, {
              "description" : "The configuration for the SMS message sent when an app user forgets their password.",
              "xml" : {
                "name" : "smsSettings"
              }
            } ]
          }
        },
        "type" : "object",
        "required" : [ "DeliveryMethod" ]
      },
      "__boolean" : {
        "type" : "boolean"
      },
      "MFAMode" : {
        "type" : "string",
        "enum" : [ "ON", "OFF", "OPTIONAL" ]
      },
      "Settings" : {
        "description" : "The settings of your MFA configuration for the backend of your Amplify project.",
        "properties" : {
          "MfaTypes" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfMfaTypesElement"
            }, {
              "description" : "The supported MFA types.",
              "xml" : {
                "name" : "mfaTypes"
              }
            } ]
          },
          "SmsMessage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The body of the SMS message.",
              "xml" : {
                "name" : "smsMessage"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "CreateBackendAuthMFAConfig" : {
        "description" : "Describes whether to apply multi-factor authentication policies for your Amazon Cognito user pool configured as a part of your Amplify project.",
        "properties" : {
          "MFAMode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MFAMode"
            }, {
              "description" : "Describes whether MFA should be [ON, OFF, or OPTIONAL] for authentication in your Amplify project."
            } ]
          },
          "Settings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Settings"
            }, {
              "description" : "Describes the configuration settings and methods for your Amplify app users to use MFA.",
              "xml" : {
                "name" : "settings"
              }
            } ]
          }
        },
        "type" : "object",
        "required" : [ "MFAMode" ]
      },
      "OAuthGrantType" : {
        "type" : "string",
        "enum" : [ "CODE", "IMPLICIT" ]
      },
      "ListOfOAuthScopesElement" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/OAuthScopesElement"
        }
      },
      "ListOf__string" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/__string"
        }
      },
      "SocialProviderSettings" : {
        "description" : "The settings for using the social identity providers for access to your Amplify app.",
        "properties" : {
          "Facebook" : {
            "$ref" : "#/components/schemas/BackendAuthSocialProviderConfig"
          },
          "Google" : {
            "$ref" : "#/components/schemas/BackendAuthSocialProviderConfig"
          },
          "LoginWithAmazon" : {
            "$ref" : "#/components/schemas/BackendAuthSocialProviderConfig"
          },
          "SignInWithApple" : {
            "$ref" : "#/components/schemas/BackendAuthAppleProviderConfig"
          }
        },
        "type" : "object"
      },
      "CreateBackendAuthOAuthConfig" : {
        "description" : "Creates the OAuth configuration for your Amplify project.",
        "properties" : {
          "DomainPrefix" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The domain prefix for your Amplify app.",
              "xml" : {
                "name" : "domainPrefix"
              }
            } ]
          },
          "OAuthGrantType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OAuthGrantType"
            }, {
              "description" : "The OAuth grant type that you use to allow app users to authenticate from your Amplify app.",
              "xml" : {
                "name" : "oAuthGrantType"
              }
            } ]
          },
          "OAuthScopes" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfOAuthScopesElement"
            }, {
              "description" : "List of OAuth-related flows used to allow your app users to authenticate from your Amplify app.",
              "xml" : {
                "name" : "oAuthScopes"
              }
            } ]
          },
          "RedirectSignInURIs" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOf__string"
            }, {
              "description" : "The redirected URI for signing in to your Amplify app.",
              "xml" : {
                "name" : "redirectSignInURIs"
              }
            } ]
          },
          "RedirectSignOutURIs" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOf__string"
            }, {
              "description" : "Redirect URLs that OAuth uses when a user signs out of an Amplify app.",
              "xml" : {
                "name" : "redirectSignOutURIs"
              }
            } ]
          },
          "SocialProviderSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SocialProviderSettings"
            }, {
              "description" : "The settings for using social providers to access your Amplify app.",
              "xml" : {
                "name" : "socialProviderSettings"
              }
            } ]
          }
        },
        "type" : "object",
        "required" : [ "RedirectSignOutURIs", "RedirectSignInURIs", "OAuthGrantType", "OAuthScopes" ]
      },
      "ListOfAdditionalConstraintsElement" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AdditionalConstraintsElement"
        }
      },
      "CreateBackendAuthPasswordPolicyConfig" : {
        "description" : "The password policy configuration for the backend to your Amplify project.",
        "properties" : {
          "AdditionalConstraints" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfAdditionalConstraintsElement"
            }, {
              "description" : "Additional constraints for the password used to access the backend of your Amplify project.",
              "xml" : {
                "name" : "additionalConstraints"
              }
            } ]
          },
          "MinimumLength" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__double"
            }, {
              "description" : "The minimum length of the password used to access the backend of your Amplify project.",
              "xml" : {
                "name" : "minimumLength"
              }
            } ]
          }
        },
        "type" : "object",
        "required" : [ "MinimumLength" ]
      },
      "CreateBackendAuthResourceConfig" : {
        "description" : "Defines the resource configuration when creating an auth resource in your Amplify project.",
        "properties" : {
          "AuthResources" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AuthResources"
            }, {
              "description" : "Defines whether you want to configure only authentication or both authentication and authorization settings.",
              "xml" : {
                "name" : "authResources"
              }
            } ]
          },
          "IdentityPoolConfigs" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateBackendAuthIdentityPoolConfig"
            }, {
              "description" : "Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.",
              "xml" : {
                "name" : "identityPoolConfigs"
              }
            } ]
          },
          "Service" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Service"
            }, {
              "description" : "Defines the service name to use when configuring an authentication resource in your Amplify project.",
              "xml" : {
                "name" : "service"
              }
            } ]
          },
          "UserPoolConfigs" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateBackendAuthUserPoolConfig"
            }, {
              "description" : "Describes authentication configuration for the Amazon Cognito user pool, provisioned as a part of your auth resource in the Amplify project.",
              "xml" : {
                "name" : "userPoolConfigs"
              }
            } ]
          }
        },
        "type" : "object",
        "required" : [ "AuthResources", "UserPoolConfigs", "Service" ]
      },
      "CreateBackendAuthRequest" : {
        "description" : "The request body for CreateBackendAuth.",
        "properties" : {
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "ResourceConfig" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateBackendAuthResourceConfig"
            }, {
              "description" : "The resource configuration for this request object.",
              "xml" : {
                "name" : "resourceConfig"
              }
            } ]
          },
          "ResourceName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of this resource.",
              "xml" : {
                "name" : "resourceName"
              }
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateBackendAuthRequest",
        "required" : [ "ResourceName", "BackendEnvironmentName", "ResourceConfig" ]
      },
      "ListOfRequiredSignUpAttributesElement" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/RequiredSignUpAttributesElement"
        }
      },
      "SignInMethod" : {
        "type" : "string",
        "enum" : [ "EMAIL", "EMAIL_AND_PHONE_NUMBER", "PHONE_NUMBER", "USERNAME" ]
      },
      "CreateBackendConfigRequest" : {
        "description" : "The request body for CreateBackendConfig.",
        "properties" : {
          "BackendManagerAppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID for the backend manager.",
              "xml" : {
                "name" : "backendManagerAppId"
              }
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateBackendConfigRequest"
      },
      "ResourceConfig" : {
        "description" : "Defines the resource configuration for the data model in your Amplify project.",
        "properties" : { },
        "type" : "object"
      },
      "CreateBackendRequest" : {
        "description" : "The request body for CreateBackend.",
        "properties" : {
          "AppId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The app ID.",
              "xml" : {
                "name" : "appId"
              }
            } ]
          },
          "AppName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the app.",
              "xml" : {
                "name" : "appName"
              }
            } ]
          },
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          },
          "ResourceConfig" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResourceConfig"
            }, {
              "description" : "The resource configuration for the create backend request.",
              "xml" : {
                "name" : "resourceConfig"
              }
            } ]
          },
          "ResourceName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the resource.",
              "xml" : {
                "name" : "resourceName"
              }
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateBackendRequest",
        "required" : [ "AppId", "BackendEnvironmentName", "AppName" ]
      },
      "CreateTokenRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "CreateTokenRequest"
      },
      "DeleteBackendAPIRequest" : {
        "description" : "The request body for DeleteBackendAPI.",
        "properties" : {
          "ResourceConfig" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BackendAPIResourceConfig"
            }, {
              "description" : "Defines the resource configuration for the data model in your Amplify project.",
              "xml" : {
                "name" : "resourceConfig"
              }
            } ]
          },
          "ResourceName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of this resource.",
              "xml" : {
                "name" : "resourceName"
              }
            } ]
          }
        },
        "type" : "object",
        "title" : "DeleteBackendAPIRequest",
        "required" : [ "ResourceName" ]
      },
      "DeleteBackendAuthRequest" : {
        "description" : "The request body for DeleteBackendAuth.",
        "properties" : {
          "ResourceName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of this resource.",
              "xml" : {
                "name" : "resourceName"
              }
            } ]
          }
        },
        "type" : "object",
        "title" : "DeleteBackendAuthRequest",
        "required" : [ "ResourceName" ]
      },
      "DeleteBackendRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "DeleteBackendRequest"
      },
      "DeleteTokenRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "DeleteTokenRequest"
      },
      "GenerateBackendAPIModelsRequest" : {
        "description" : "The request body for GenerateBackendAPIModels.",
        "properties" : {
          "ResourceName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of this resource.",
              "xml" : {
                "name" : "resourceName"
              }
            } ]
          }
        },
        "type" : "object",
        "title" : "GenerateBackendAPIModelsRequest",
        "required" : [ "ResourceName" ]
      },
      "GetBackendAPIModelsRequest" : {
        "description" : "The request body for GetBackendAPIModels.",
        "properties" : {
          "ResourceName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of this resource.",
              "xml" : {
                "name" : "resourceName"
              }
            } ]
          }
        },
        "type" : "object",
        "title" : "GetBackendAPIModelsRequest",
        "required" : [ "ResourceName" ]
      },
      "Status" : {
        "type" : "string",
        "enum" : [ "LATEST", "STALE" ]
      },
      "GetBackendAPIRequest" : {
        "description" : "The request body for GetBackendAPI.",
        "properties" : {
          "ResourceConfig" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BackendAPIResourceConfig"
            }, {
              "description" : "Defines the resource configuration for the data model in your Amplify project.",
              "xml" : {
                "name" : "resourceConfig"
              }
            } ]
          },
          "ResourceName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of this resource.",
              "xml" : {
                "name" : "resourceName"
              }
            } ]
          }
        },
        "type" : "object",
        "title" : "GetBackendAPIRequest",
        "required" : [ "ResourceName" ]
      },
      "GetBackendAuthRequest" : {
        "description" : "The request body for GetBackendAuth.",
        "properties" : {
          "ResourceName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of this resource.",
              "xml" : {
                "name" : "resourceName"
              }
            } ]
          }
        },
        "type" : "object",
        "title" : "GetBackendAuthRequest",
        "required" : [ "ResourceName" ]
      },
      "GetBackendJobRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetBackendJobRequest"
      },
      "GetBackendRequest" : {
        "description" : "The request body for GetBackend.",
        "properties" : {
          "BackendEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the backend environment.",
              "xml" : {
                "name" : "backendEnvironmentName"
              }
            } ]
          }
        },
        "type" : "object",
        "title" : "GetBackendRequest"
      },
      "GetTokenRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetTokenRequest"
      },
      "ImportBackendAuthRequest" : {
        "description" : "The request body for ImportBackendAuth.",
        "properties" : {
          "IdentityPoolId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID of the Amazon Cognito identity pool.",
              "xml" : {
                "name" : "identityPoolId"
              }
            } ]
          },
          "NativeClientId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID of the Amazon Cognito native client.",
              "xml" : {
                "name" : "nativeClientId"
              }
            } ]
          },
          "UserPoolId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID of the Amazon Cognito user pool.",
              "xml" : {
                "name" : "userPoolId"
              }
            } ]
          },
          "WebClientId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID of the Amazon Cognito web client.",
              "xml" : {
                "name" : "webClientId"
              }
            } ]
          }
        },
        "type" : "object",
        "title" : "ImportBackendAuthRequest",
        "required" : [ "UserPoolId", "NativeClientId", "WebClientId" ]
      },
      "__integerMin1Max25" : {
        "maximum" : 25,
        "minimum" : 1,
        "type" : "integer"
      },
      "ListBackendJobsRequest" : {
        "description" : "The request body for ListBackendJobs.",
        "properties" : {
          "JobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The ID for the job.",
              "xml" : {
                "name" : "jobId"
              }
            } ]
          },
          "MaxResults" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__integerMin1Max25"
            }, {
              "description" : "The maximum number of results that you want in the response.",
              "xml" : {
                "name" : "maxResults"
              }
            } ]
          },
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The token for the next set of results.",
              "xml" : {
                "name" : "nextToken"
              }
            } ]
          },
          "Operation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "Filters the list of response objects to include only those with the specified operation name.",
              "xml" : {
                "name" : "operation"
              }
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "Filters the list of response objects to include only those with the specified status.",
              "xml" : {
                "name" : "status"
              }
            } ]
          }
        },
        "type" : "object",
        "title" : "ListBackendJobsRequest"
      },
      "ListOfBackendJobRespObj" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/BackendJobRespObj"
        }
      },
      "LoginAuthConfigReqObj" : {
        "description" : "The request object for this operation.",
        "properties" : {
          "AwsCognitoIdentityPoolId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The Amazon Cognito identity pool ID used for the Amplify Admin UI login authorization.",
              "xml" : {
                "name" : "aws_cognito_identity_pool_id"
              }
            } ]
          },
          "AwsCognitoRegion" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The AWS Region for the Amplify Admin UI login.",
              "xml" : {
                "name" : "aws_cognito_region"
              }
            } ]
          },
          "AwsUserPoolsId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The Amazon Cognito user pool ID used for Amplify Admin UI login authentication.",
              "xml" : {
                "name" : "aws_user_pools_id"
              }
            } ]
          },
          "AwsUserPoolsWebClientId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The web client ID for the Amazon Cognito user pools.",
              "xml" : {
                "name" : "aws_user_pools_web_client_id"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "RemoveAllBackendsRequest" : {
        "description" : "The request body for RemoveAllBackends.",
        "properties" : {
          "CleanAmplifyApp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__boolean"
            }, {
              "description" : "Cleans up the Amplify Console app if this value is set to true.",
              "xml" : {
                "name" : "cleanAmplifyApp"
              }
            } ]
          }
        },
        "type" : "object",
        "title" : "RemoveAllBackendsRequest"
      },
      "RemoveBackendConfigRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "RemoveBackendConfigRequest"
      },
      "ListOfMfaTypesElement" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/MfaTypesElement"
        }
      },
      "UpdateBackendAPIRequest" : {
        "description" : "The request body for UpdateBackendAPI.",
        "properties" : {
          "ResourceConfig" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BackendAPIResourceConfig"
            }, {
              "description" : "Defines the resource configuration for the data model in your Amplify project.",
              "xml" : {
                "name" : "resourceConfig"
              }
            } ]
          },
          "ResourceName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of this resource.",
              "xml" : {
                "name" : "resourceName"
              }
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateBackendAPIRequest",
        "required" : [ "ResourceName" ]
      },
      "UpdateBackendAuthForgotPasswordConfig" : {
        "description" : "Describes the forgot password policy for authenticating into the Amplify app.",
        "properties" : {
          "DeliveryMethod" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DeliveryMethod"
            }, {
              "description" : "Describes which mode to use (either SMS or email) to deliver messages to app users that want to recover their password.",
              "xml" : {
                "name" : "deliveryMethod"
              }
            } ]
          },
          "EmailSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EmailSettings"
            }, {
              "description" : "The configuration for the email sent when an app user forgets their password.",
              "xml" : {
                "name" : "emailSettings"
              }
            } ]
          },
          "SmsSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SmsSettings"
            }, {
              "description" : "The configuration for the SMS message sent when an Amplify app user forgets their password.",
              "xml" : {
                "name" : "smsSettings"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateBackendAuthMFAConfig" : {
        "description" : "Updates the multi-factor authentication (MFA) configuration for the backend of your Amplify project.",
        "properties" : {
          "MFAMode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MFAMode"
            }, {
              "description" : "The MFA mode for the backend of your Amplify project."
            } ]
          },
          "Settings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Settings"
            }, {
              "description" : "The settings of your MFA configuration for the backend of your Amplify project.",
              "xml" : {
                "name" : "settings"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateBackendAuthOAuthConfig" : {
        "description" : "The OAuth configurations for authenticating users into your Amplify app.",
        "properties" : {
          "DomainPrefix" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The Amazon Cognito domain prefix used to create a hosted UI for authentication.",
              "xml" : {
                "name" : "domainPrefix"
              }
            } ]
          },
          "OAuthGrantType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OAuthGrantType"
            }, {
              "description" : "The OAuth grant type to allow app users to authenticate from your Amplify app.",
              "xml" : {
                "name" : "oAuthGrantType"
              }
            } ]
          },
          "OAuthScopes" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfOAuthScopesElement"
            }, {
              "description" : "The list of OAuth-related flows that can allow users to authenticate from your Amplify app.",
              "xml" : {
                "name" : "oAuthScopes"
              }
            } ]
          },
          "RedirectSignInURIs" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOf__string"
            }, {
              "description" : "Redirect URLs that OAuth uses when a user signs in to an Amplify app.",
              "xml" : {
                "name" : "redirectSignInURIs"
              }
            } ]
          },
          "RedirectSignOutURIs" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOf__string"
            }, {
              "description" : "Redirect URLs that OAuth uses when a user signs out of an Amplify app.",
              "xml" : {
                "name" : "redirectSignOutURIs"
              }
            } ]
          },
          "SocialProviderSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SocialProviderSettings"
            }, {
              "description" : "Describes third-party social federation configurations for allowing your users to sign in with OAuth.",
              "xml" : {
                "name" : "socialProviderSettings"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateBackendAuthPasswordPolicyConfig" : {
        "description" : "Describes the password policy for your Amazon Cognito user pool configured as a part of your Amplify project.",
        "properties" : {
          "AdditionalConstraints" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfAdditionalConstraintsElement"
            }, {
              "description" : "Describes additional constraints on password requirements to sign in to the auth resource, configured as a part of your Amplify project.",
              "xml" : {
                "name" : "additionalConstraints"
              }
            } ]
          },
          "MinimumLength" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__double"
            }, {
              "description" : "Describes the minimum length of the password required to sign in to the auth resource, configured as a part of your Amplify project.",
              "xml" : {
                "name" : "minimumLength"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateBackendAuthResourceConfig" : {
        "description" : "Defines the resource configuration when updating an authentication resource in your Amplify project.",
        "properties" : {
          "AuthResources" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AuthResources"
            }, {
              "description" : "Defines the service name to use when configuring an authentication resource in your Amplify project.",
              "xml" : {
                "name" : "authResources"
              }
            } ]
          },
          "IdentityPoolConfigs" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateBackendAuthIdentityPoolConfig"
            }, {
              "description" : "Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.",
              "xml" : {
                "name" : "identityPoolConfigs"
              }
            } ]
          },
          "Service" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Service"
            }, {
              "description" : "Defines the service name to use when configuring an authentication resource in your Amplify project.",
              "xml" : {
                "name" : "service"
              }
            } ]
          },
          "UserPoolConfigs" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateBackendAuthUserPoolConfig"
            }, {
              "description" : "Describes the authentication configuration for the Amazon Cognito user pool, provisioned as a part of your auth resource in the Amplify project.",
              "xml" : {
                "name" : "userPoolConfigs"
              }
            } ]
          }
        },
        "type" : "object",
        "required" : [ "AuthResources", "UserPoolConfigs", "Service" ]
      },
      "UpdateBackendAuthRequest" : {
        "description" : "The request body for UpdateBackendAuth.",
        "properties" : {
          "ResourceConfig" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateBackendAuthResourceConfig"
            }, {
              "description" : "The resource configuration for this request object.",
              "xml" : {
                "name" : "resourceConfig"
              }
            } ]
          },
          "ResourceName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of this resource.",
              "xml" : {
                "name" : "resourceName"
              }
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateBackendAuthRequest",
        "required" : [ "ResourceName", "ResourceConfig" ]
      },
      "UpdateBackendConfigRequest" : {
        "description" : "The request body for UpdateBackendConfig.",
        "properties" : {
          "LoginAuthConfig" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/LoginAuthConfigReqObj"
            }, {
              "description" : "Describes the Amazon Cognito configuration for Admin UI access.",
              "xml" : {
                "name" : "loginAuthConfig"
              }
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateBackendConfigRequest"
      },
      "UpdateBackendJobRequest" : {
        "description" : "The request body for GetBackendJob.",
        "properties" : {
          "Operation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "Filters the list of response objects to include only those with the specified operation name.",
              "xml" : {
                "name" : "operation"
              }
            } ]
          },
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "Filters the list of response objects to include only those with the specified status.",
              "xml" : {
                "name" : "status"
              }
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateBackendJobRequest"
      },
      "AdditionalConstraintsElement" : {
        "type" : "string",
        "enum" : [ "REQUIRE_DIGIT", "REQUIRE_LOWERCASE", "REQUIRE_SYMBOL", "REQUIRE_UPPERCASE" ]
      },
      "MfaTypesElement" : {
        "type" : "string",
        "enum" : [ "SMS", "TOTP" ]
      },
      "OAuthScopesElement" : {
        "type" : "string",
        "enum" : [ "PHONE", "EMAIL", "OPENID", "PROFILE", "AWS_COGNITO_SIGNIN_USER_ADMIN" ]
      },
      "RequiredSignUpAttributesElement" : {
        "type" : "string",
        "enum" : [ "ADDRESS", "BIRTHDATE", "EMAIL", "FAMILY_NAME", "GENDER", "GIVEN_NAME", "LOCALE", "MIDDLE_NAME", "NAME", "NICKNAME", "PHONE_NUMBER", "PICTURE", "PREFERRED_USERNAME", "PROFILE", "UPDATED_AT", "WEBSITE", "ZONE_INFO" ]
      }
    },
    "securitySchemes" : {
      "hmac" : {
        "type" : "apiKey",
        "description" : "Amazon Signature authorization v4",
        "name" : "Authorization",
        "in" : "header",
        "x-amazon-apigateway-authtype" : "awsSigv4"
      }
    }
  },
  "externalDocs" : {
    "description" : "Amazon Web Services documentation",
    "url" : "https://docs.aws.amazon.com/amplifybackend/"
  },
  "security" : [ {
    "hmac" : [ ]
  } ]
}