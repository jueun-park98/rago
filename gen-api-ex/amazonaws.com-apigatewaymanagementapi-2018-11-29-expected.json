{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "mike.ralphson@gmail.com",
      "name" : "Mike Ralphson",
      "url" : "https://github.com/mermade/aws2openapi",
      "x-twitter" : "PermittedSoc"
    },
    "description" : "The Amazon API Gateway Management API allows you to directly manage runtime aspects of your deployed APIs. To use it, you must explicitly set the SDK's endpoint to point to the endpoint of your deployed API. The endpoint will be of the form https://{api-id}.execute-api.{region}.amazonaws.com/{stage}, or will be the endpoint corresponding to your API's custom domain and base path, if applicable.",
    "license" : {
      "name" : "Apache 2.0 License",
      "url" : "http://www.apache.org/licenses/"
    },
    "termsOfService" : "https://aws.amazon.com/service-terms/",
    "title" : "AmazonApiGatewayManagementApi",
    "version" : "2018-11-29",
    "x-providerName" : "amazonaws.com",
    "x-logo" : {
      "url" : "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png",
      "backgroundColor" : "#FFFFFF"
    },
    "x-aws-signingName" : "execute-api",
    "x-apiClientRegistration" : {
      "url" : "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-preferred" : true,
    "x-release" : "v4",
    "x-apisguru-categories" : [ "cloud" ],
    "x-serviceName" : "apigatewaymanagementapi",
    "x-origin" : [ {
      "contentType" : "application/json",
      "url" : "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/apigatewaymanagementapi-2018-11-29.normal.json",
      "converter" : {
        "url" : "https://github.com/mermade/aws2openapi",
        "version" : "1.0.0"
      },
      "x-apisguru-driver" : "external"
    } ]
  },
  "servers" : [ {
    "url" : "http://execute-api.{region}.amazonaws.com",
    "description" : "The AmazonApiGatewayManagementApi multi-region endpoint",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "us-east-1",
        "enum" : [ "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-west-1", "us-gov-east-1", "ca-central-1", "eu-north-1", "eu-west-1", "eu-west-2", "eu-west-3", "eu-central-1", "eu-south-1", "af-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ap-east-1", "ap-south-1", "sa-east-1", "me-south-1" ]
      }
    }
  }, {
    "url" : "https://execute-api.{region}.amazonaws.com",
    "description" : "The AmazonApiGatewayManagementApi multi-region endpoint",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "us-east-1",
        "enum" : [ "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-west-1", "us-gov-east-1", "ca-central-1", "eu-north-1", "eu-west-1", "eu-west-2", "eu-west-3", "eu-central-1", "eu-south-1", "af-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ap-east-1", "ap-south-1", "sa-east-1", "me-south-1" ]
      }
    }
  }, {
    "url" : "http://execute-api.{region}.amazonaws.com.cn",
    "description" : "The AmazonApiGatewayManagementApi endpoint for China (Beijing) and China (Ningxia)",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "cn-north-1",
        "enum" : [ "cn-north-1", "cn-northwest-1" ]
      }
    }
  }, {
    "url" : "https://execute-api.{region}.amazonaws.com.cn",
    "description" : "The AmazonApiGatewayManagementApi endpoint for China (Beijing) and China (Ningxia)",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "cn-north-1",
        "enum" : [ "cn-north-1", "cn-northwest-1" ]
      }
    }
  } ],
  "paths" : {
    "/@connections/{connectionId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Get information about the connection with the provided id.",
        "operationId" : "GetConnection",
        "parameters" : [ {
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "connectionId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetConnectionResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "GoneException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GoneException"
                }
              }
            }
          },
          "481" : {
            "description" : "LimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LimitExceededException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Sends the provided data to the specified connection.",
        "operationId" : "PostToConnection",
        "parameters" : [ {
          "description" : "The identifier of the connection that a specific client is using.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "connectionId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Data" : {
                    "description" : "The data to be sent to the client specified by its connection id.",
                    "maxLength" : 131072,
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "Data" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "GoneException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GoneException"
                }
              }
            }
          },
          "481" : {
            "description" : "LimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LimitExceededException"
                }
              }
            }
          },
          "482" : {
            "description" : "PayloadTooLargeException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PayloadTooLargeException"
                }
              }
            }
          },
          "483" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Delete the connection with the provided id.",
        "operationId" : "DeleteConnection",
        "parameters" : [ {
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "connectionId"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "GoneException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GoneException"
                }
              }
            }
          },
          "481" : {
            "description" : "LimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LimitExceededException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "parameters" : {
      "X-Amz-Content-Sha256" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Content-Sha256"
      },
      "X-Amz-Date" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Date"
      },
      "X-Amz-Algorithm" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Algorithm"
      },
      "X-Amz-Credential" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Credential"
      },
      "X-Amz-Security-Token" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Security-Token"
      },
      "X-Amz-Signature" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-SignedHeaders"
      }
    },
    "schemas" : {
      "GoneException" : { },
      "LimitExceededException" : { },
      "ForbiddenException" : { },
      "GetConnectionResponse" : {
        "properties" : {
          "ConnectedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__timestampIso8601"
            }, {
              "description" : "The time in ISO 8601 format for when the connection was established.",
              "xml" : {
                "name" : "connectedAt"
              }
            } ]
          },
          "Identity" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identity"
            }, {
              "xml" : {
                "name" : "identity"
              }
            } ]
          },
          "LastActiveAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__timestampIso8601"
            }, {
              "description" : "The time in ISO 8601 format for when the connection was last active.",
              "xml" : {
                "name" : "lastActiveAt"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "PayloadTooLargeException" : { },
      "Data" : {
        "description" : "The data to be sent to the client specified by its connection id.",
        "maxLength" : 131072,
        "type" : "string"
      },
      "__string" : {
        "type" : "string"
      },
      "DeleteConnectionRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "DeleteConnectionRequest"
      },
      "GetConnectionRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetConnectionRequest"
      },
      "__timestampIso8601" : {
        "format" : "date-time",
        "type" : "string"
      },
      "Identity" : {
        "properties" : {
          "SourceIp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The source IP address of the TCP connection making the request to API Gateway.",
              "xml" : {
                "name" : "sourceIp"
              }
            } ]
          },
          "UserAgent" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The User Agent of the API caller.",
              "xml" : {
                "name" : "userAgent"
              }
            } ]
          }
        },
        "type" : "object",
        "required" : [ "SourceIp", "UserAgent" ]
      },
      "PostToConnectionRequest" : {
        "properties" : {
          "Data" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Data"
            }, {
              "description" : "The data to be sent to the client specified by its connection id."
            } ]
          }
        },
        "type" : "object",
        "title" : "PostToConnectionRequest",
        "required" : [ "Data" ]
      }
    },
    "securitySchemes" : {
      "hmac" : {
        "type" : "apiKey",
        "description" : "Amazon Signature authorization v4",
        "name" : "Authorization",
        "in" : "header",
        "x-amazon-apigateway-authtype" : "awsSigv4"
      }
    }
  },
  "externalDocs" : {
    "description" : "Amazon Web Services documentation",
    "url" : "https://docs.aws.amazon.com/execute-api/"
  },
  "security" : [ {
    "hmac" : [ ]
  } ]
}