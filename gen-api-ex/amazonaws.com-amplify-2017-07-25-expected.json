{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "mike.ralphson@gmail.com",
      "name" : "Mike Ralphson",
      "url" : "https://github.com/mermade/aws2openapi",
      "x-twitter" : "PermittedSoc"
    },
    "description" : "Amplify enables developers to develop and deploy cloud-powered mobile and web apps. The Amplify Console provides a continuous delivery and hosting service for web applications. For more information, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify Console User Guide</a>. The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework.</a> ",
    "license" : {
      "name" : "Apache 2.0 License",
      "url" : "http://www.apache.org/licenses/"
    },
    "termsOfService" : "https://aws.amazon.com/service-terms/",
    "title" : "AWS Amplify",
    "version" : "2017-07-25",
    "x-providerName" : "amazonaws.com",
    "x-logo" : {
      "url" : "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png",
      "backgroundColor" : "#FFFFFF"
    },
    "x-aws-signingName" : "amplify",
    "x-apiClientRegistration" : {
      "url" : "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-preferred" : true,
    "x-release" : "v4",
    "x-apisguru-categories" : [ "cloud" ],
    "x-serviceName" : "amplify",
    "x-origin" : [ {
      "contentType" : "application/json",
      "url" : "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/amplify-2017-07-25.normal.json",
      "converter" : {
        "url" : "https://github.com/mermade/aws2openapi",
        "version" : "1.0.0"
      },
      "x-apisguru-driver" : "external"
    } ]
  },
  "servers" : [ {
    "url" : "http://amplify.{region}.amazonaws.com",
    "description" : "The Amplify multi-region endpoint",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "us-east-1",
        "enum" : [ "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-west-1", "us-gov-east-1", "ca-central-1", "eu-north-1", "eu-west-1", "eu-west-2", "eu-west-3", "eu-central-1", "eu-south-1", "af-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ap-east-1", "ap-south-1", "sa-east-1", "me-south-1" ]
      }
    }
  }, {
    "url" : "https://amplify.{region}.amazonaws.com",
    "description" : "The Amplify multi-region endpoint",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "us-east-1",
        "enum" : [ "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-west-1", "us-gov-east-1", "ca-central-1", "eu-north-1", "eu-west-1", "eu-west-2", "eu-west-3", "eu-central-1", "eu-south-1", "af-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ap-east-1", "ap-south-1", "sa-east-1", "me-south-1" ]
      }
    }
  }, {
    "url" : "http://amplify.{region}.amazonaws.com.cn",
    "description" : "The Amplify endpoint for China (Beijing) and China (Ningxia)",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "cn-north-1",
        "enum" : [ "cn-north-1", "cn-northwest-1" ]
      }
    }
  }, {
    "url" : "https://amplify.{region}.amazonaws.com.cn",
    "description" : "The Amplify endpoint for China (Beijing) and China (Ningxia)",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "cn-north-1",
        "enum" : [ "cn-north-1", "cn-northwest-1" ]
      }
    }
  } ],
  "paths" : {
    "/apps" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns a list of the existing Amplify apps. ",
        "operationId" : "ListApps",
        "parameters" : [ {
          "description" : " A pagination token. If non-null, the pagination token is returned in a result. Pass its value in another request to retrieve more entries. ",
          "required" : false,
          "schema" : {
            "maxLength" : 2000,
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : " The maximum number of records to list in a single response. ",
          "required" : false,
          "schema" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListAppsResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : " Creates a new Amplify app. ",
        "operationId" : "CreateApp",
        "parameters" : [ ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "name" : {
                    "description" : " The name for an Amplify app. ",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "description" : {
                    "description" : " The description for an Amplify app. ",
                    "maxLength" : 1000,
                    "type" : "string"
                  },
                  "repository" : {
                    "description" : " The repository for an Amplify app. ",
                    "maxLength" : 1000,
                    "type" : "string"
                  },
                  "platform" : {
                    "description" : " The platform or framework for an Amplify app. ",
                    "type" : "string",
                    "enum" : [ "WEB" ]
                  },
                  "iamServiceRoleArn" : {
                    "description" : " The AWS Identity and Access Management (IAM) service role for an Amplify app. ",
                    "maxLength" : 1000,
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "oauthToken" : {
                    "description" : " The OAuth token for a third-party source control system for an Amplify app. The OAuth token is used to create a webhook and a read-only deploy key. The OAuth token is not stored. ",
                    "format" : "password",
                    "maxLength" : 1000,
                    "type" : "string"
                  },
                  "accessToken" : {
                    "description" : " The personal access token for a third-party source control system for an Amplify app. The personal access token is used to create a webhook and a read-only deploy key. The token is not stored. ",
                    "format" : "password",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "environmentVariables" : {
                    "description" : " The environment variables map for an Amplify app. ",
                    "type" : "object",
                    "additionalProperties" : {
                      "$ref" : "#/components/schemas/EnvValue"
                    }
                  },
                  "enableBranchAutoBuild" : {
                    "description" : " Enables the auto building of branches for an Amplify app. ",
                    "type" : "boolean"
                  },
                  "enableBranchAutoDeletion" : {
                    "description" : " Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository. ",
                    "type" : "boolean"
                  },
                  "enableBasicAuth" : {
                    "description" : " Enables basic authorization for an Amplify app. This will apply to all branches that are part of this app. ",
                    "type" : "boolean"
                  },
                  "basicAuthCredentials" : {
                    "description" : " The credentials for basic authorization for an Amplify app. ",
                    "format" : "password",
                    "maxLength" : 2000,
                    "type" : "string"
                  },
                  "customRules" : {
                    "description" : " The custom rewrite and redirect rules for an Amplify app. ",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/CustomRule"
                    }
                  },
                  "tags" : {
                    "description" : " The tag for an Amplify app. ",
                    "maxProperties" : 50,
                    "minProperties" : 1,
                    "type" : "object",
                    "additionalProperties" : {
                      "$ref" : "#/components/schemas/TagValue"
                    }
                  },
                  "buildSpec" : {
                    "description" : " The build specification (build spec) file for an Amplify app build. ",
                    "maxLength" : 25000,
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "customHeaders" : {
                    "description" : "The custom HTTP headers for an Amplify app.",
                    "maxLength" : 25000,
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "enableAutoBranchCreation" : {
                    "description" : " Enables automated branch creation for an Amplify app. ",
                    "type" : "boolean"
                  },
                  "autoBranchCreationPatterns" : {
                    "description" : " The automated branch creation glob patterns for an Amplify app. ",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/AutoBranchCreationPattern"
                    }
                  },
                  "autoBranchCreationConfig" : {
                    "description" : " Describes the automated branch creation configuration. ",
                    "properties" : {
                      "stage" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Stage"
                        }, {
                          "description" : " Describes the current stage for the autocreated branch. "
                        } ]
                      },
                      "framework" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Framework"
                        }, {
                          "description" : " The framework for the autocreated branch. "
                        } ]
                      },
                      "enableAutoBuild" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/EnableAutoBuild"
                        }, {
                          "description" : " Enables auto building for the autocreated branch. "
                        } ]
                      },
                      "environmentVariables" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/EnvironmentVariables"
                        }, {
                          "description" : " The environment variables for the autocreated branch. "
                        } ]
                      },
                      "basicAuthCredentials" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/BasicAuthCredentials"
                        }, {
                          "description" : " The basic authorization credentials for the autocreated branch. "
                        } ]
                      },
                      "enableBasicAuth" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/EnableBasicAuth"
                        }, {
                          "description" : " Enables basic authorization for the autocreated branch. "
                        } ]
                      },
                      "enablePerformanceMode" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/EnablePerformanceMode"
                        }, {
                          "description" : "<p>Enables performance mode for the branch.</p> <p>Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out. </p>"
                        } ]
                      },
                      "buildSpec" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/BuildSpec"
                        }, {
                          "description" : " The build specification (build spec) for the autocreated branch. "
                        } ]
                      },
                      "enablePullRequestPreview" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/EnablePullRequestPreview"
                        }, {
                          "description" : " Enables pull request previews for the autocreated branch. "
                        } ]
                      },
                      "pullRequestEnvironmentName" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/PullRequestEnvironmentName"
                        }, {
                          "description" : " The Amplify environment name for the pull request. "
                        } ]
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object",
                "required" : [ "name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateAppResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "483" : {
            "description" : "LimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LimitExceededException"
                }
              }
            }
          },
          "484" : {
            "description" : "DependentServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DependentServiceFailureException"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/backendenvironments" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Lists the backend environments for an Amplify app. ",
        "operationId" : "ListBackendEnvironments",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : " The name of the backend environment ",
          "required" : false,
          "schema" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "in" : "query",
          "name" : "environmentName"
        }, {
          "description" : " A pagination token. Set to null to start listing backend environments from the start. If a non-null pagination token is returned in a result, pass its value in here to list more backend environments. ",
          "required" : false,
          "schema" : {
            "maxLength" : 2000,
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : " The maximum number of records to list in a single response. ",
          "required" : false,
          "schema" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListBackendEnvironmentsResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : " Creates a new backend environment for an Amplify app. ",
        "operationId" : "CreateBackendEnvironment",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "environmentName" : {
                    "description" : " The name for the backend environment. ",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "stackName" : {
                    "description" : " The AWS CloudFormation stack name of a backend environment. ",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "deploymentArtifacts" : {
                    "description" : " The name of deployment artifacts. ",
                    "maxLength" : 1000,
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "environmentName" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateBackendEnvironmentResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "484" : {
            "description" : "LimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LimitExceededException"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/branches" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Lists the branches of an Amplify app. ",
        "operationId" : "ListBranches",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : " A pagination token. Set to null to start listing branches from the start. If a non-null pagination token is returned in a result, pass its value in here to list more branches. ",
          "required" : false,
          "schema" : {
            "maxLength" : 2000,
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : " The maximum number of records to list in a single response. ",
          "required" : false,
          "schema" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListBranchesResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : " Creates a new branch for an Amplify app. ",
        "operationId" : "CreateBranch",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "branchName" : {
                    "description" : " The name for the branch. ",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "description" : {
                    "description" : " The description for the branch. ",
                    "maxLength" : 1000,
                    "type" : "string"
                  },
                  "stage" : {
                    "description" : " Describes the current stage for the branch. ",
                    "type" : "string",
                    "enum" : [ "PRODUCTION", "BETA", "DEVELOPMENT", "EXPERIMENTAL", "PULL_REQUEST" ]
                  },
                  "framework" : {
                    "description" : " The framework for the branch. ",
                    "maxLength" : 255,
                    "type" : "string"
                  },
                  "enableNotification" : {
                    "description" : " Enables notifications for the branch. ",
                    "type" : "boolean"
                  },
                  "enableAutoBuild" : {
                    "description" : " Enables auto building for the branch. ",
                    "type" : "boolean"
                  },
                  "environmentVariables" : {
                    "description" : " The environment variables for the branch. ",
                    "type" : "object",
                    "additionalProperties" : {
                      "$ref" : "#/components/schemas/EnvValue"
                    }
                  },
                  "basicAuthCredentials" : {
                    "description" : " The basic authorization credentials for the branch. ",
                    "format" : "password",
                    "maxLength" : 2000,
                    "type" : "string"
                  },
                  "enableBasicAuth" : {
                    "description" : " Enables basic authorization for the branch. ",
                    "type" : "boolean"
                  },
                  "enablePerformanceMode" : {
                    "description" : "<p>Enables performance mode for the branch.</p> <p>Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out. </p>",
                    "type" : "boolean"
                  },
                  "tags" : {
                    "description" : " The tag for the branch. ",
                    "maxProperties" : 50,
                    "minProperties" : 1,
                    "type" : "object",
                    "additionalProperties" : {
                      "$ref" : "#/components/schemas/TagValue"
                    }
                  },
                  "buildSpec" : {
                    "description" : " The build specification (build spec) file for an Amplify app build. ",
                    "maxLength" : 25000,
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ttl" : {
                    "description" : " The content Time to Live (TTL) for the website in seconds. ",
                    "type" : "string"
                  },
                  "displayName" : {
                    "description" : " The display name for a branch. This is used as the default domain prefix. ",
                    "maxLength" : 255,
                    "type" : "string"
                  },
                  "enablePullRequestPreview" : {
                    "description" : " Enables pull request previews for this branch. ",
                    "type" : "boolean"
                  },
                  "pullRequestEnvironmentName" : {
                    "description" : " The Amplify environment name for the pull request. ",
                    "maxLength" : 20,
                    "type" : "string"
                  },
                  "backendEnvironmentArn" : {
                    "description" : " The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify app. ",
                    "maxLength" : 1000,
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "branchName" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateBranchResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "484" : {
            "description" : "LimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LimitExceededException"
                }
              }
            }
          },
          "485" : {
            "description" : "DependentServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DependentServiceFailureException"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/branches/{branchName}/deployments" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : " Creates a deployment for a manually deployed Amplify app. Manually deployed apps are not connected to a repository. ",
        "operationId" : "CreateDeployment",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : " The name for the branch, for the job. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "in" : "path",
          "name" : "branchName"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "fileMap" : {
                    "description" : " An optional file map that contains the file name as the key and the file content md5 hash as the value. If this argument is provided, the service will generate a unique upload URL per file. Otherwise, the service will only generate a single upload URL for the zipped files. ",
                    "type" : "object",
                    "additionalProperties" : {
                      "$ref" : "#/components/schemas/MD5Hash"
                    }
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateDeploymentResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "483" : {
            "description" : "LimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LimitExceededException"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/domains" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns the domain associations for an Amplify app. ",
        "operationId" : "ListDomainAssociations",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : " A pagination token. Set to null to start listing apps from the start. If non-null, a pagination token is returned in a result. Pass its value in here to list more projects. ",
          "required" : false,
          "schema" : {
            "maxLength" : 2000,
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : " The maximum number of records to list in a single response. ",
          "required" : false,
          "schema" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListDomainAssociationsResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : " Creates a new domain association for an Amplify app. This action associates a custom domain with the Amplify app ",
        "operationId" : "CreateDomainAssociation",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "domainName" : {
                    "description" : " The domain name for the domain association. ",
                    "maxLength" : 255,
                    "type" : "string"
                  },
                  "enableAutoSubDomain" : {
                    "description" : " Enables the automated creation of subdomains for branches. ",
                    "type" : "boolean"
                  },
                  "subDomainSettings" : {
                    "description" : " The setting for the subdomain. ",
                    "maxItems" : 255,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/SubDomainSetting"
                    }
                  },
                  "autoSubDomainCreationPatterns" : {
                    "description" : " Sets the branch patterns for automatic subdomain creation. ",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/AutoSubDomainCreationPattern"
                    }
                  },
                  "autoSubDomainIAMRole" : {
                    "description" : " The required AWS Identity and Access Management (IAM) service role for the Amazon Resource Name (ARN) for automatically creating subdomains. ",
                    "maxLength" : 1000,
                    "pattern" : "^$|^arn:aws:iam::\\d{12}:role.+",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "domainName", "subDomainSettings" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateDomainAssociationResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "484" : {
            "description" : "LimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LimitExceededException"
                }
              }
            }
          },
          "485" : {
            "description" : "DependentServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DependentServiceFailureException"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/webhooks" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns a list of webhooks for an Amplify app. ",
        "operationId" : "ListWebhooks",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : " A pagination token. Set to null to start listing webhooks from the start. If non-null,the pagination token is returned in a result. Pass its value in here to list more webhooks. ",
          "required" : false,
          "schema" : {
            "maxLength" : 2000,
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : " The maximum number of records to list in a single response. ",
          "required" : false,
          "schema" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListWebhooksResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "483" : {
            "description" : "LimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LimitExceededException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : " Creates a new webhook on an Amplify app. ",
        "operationId" : "CreateWebhook",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "branchName" : {
                    "description" : " The name for a branch that is part of an Amplify app. ",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "description" : {
                    "description" : " The description for a webhook. ",
                    "maxLength" : 1000,
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "branchName" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateWebhookResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "484" : {
            "description" : "LimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LimitExceededException"
                }
              }
            }
          },
          "485" : {
            "description" : "DependentServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DependentServiceFailureException"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns an existing Amplify app by appID. ",
        "operationId" : "GetApp",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAppResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : " Updates an existing Amplify app. ",
        "operationId" : "UpdateApp",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "name" : {
                    "description" : " The name for an Amplify app. ",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "description" : {
                    "description" : " The description for an Amplify app. ",
                    "maxLength" : 1000,
                    "type" : "string"
                  },
                  "platform" : {
                    "description" : " The platform for an Amplify app. ",
                    "type" : "string",
                    "enum" : [ "WEB" ]
                  },
                  "iamServiceRoleArn" : {
                    "description" : " The AWS Identity and Access Management (IAM) service role for an Amplify app. ",
                    "maxLength" : 1000,
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "environmentVariables" : {
                    "description" : " The environment variables for an Amplify app. ",
                    "type" : "object",
                    "additionalProperties" : {
                      "$ref" : "#/components/schemas/EnvValue"
                    }
                  },
                  "enableBranchAutoBuild" : {
                    "description" : " Enables branch auto-building for an Amplify app. ",
                    "type" : "boolean"
                  },
                  "enableBranchAutoDeletion" : {
                    "description" : " Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository. ",
                    "type" : "boolean"
                  },
                  "enableBasicAuth" : {
                    "description" : " Enables basic authorization for an Amplify app. ",
                    "type" : "boolean"
                  },
                  "basicAuthCredentials" : {
                    "description" : " The basic authorization credentials for an Amplify app. ",
                    "format" : "password",
                    "maxLength" : 2000,
                    "type" : "string"
                  },
                  "customRules" : {
                    "description" : " The custom redirect and rewrite rules for an Amplify app. ",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/CustomRule"
                    }
                  },
                  "buildSpec" : {
                    "description" : " The build specification (build spec) file for an Amplify app build. ",
                    "maxLength" : 25000,
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "customHeaders" : {
                    "description" : "The custom HTTP headers for an Amplify app.",
                    "maxLength" : 25000,
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "enableAutoBranchCreation" : {
                    "description" : " Enables automated branch creation for an Amplify app. ",
                    "type" : "boolean"
                  },
                  "autoBranchCreationPatterns" : {
                    "description" : " Describes the automated branch creation glob patterns for an Amplify app. ",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/AutoBranchCreationPattern"
                    }
                  },
                  "autoBranchCreationConfig" : {
                    "description" : " Describes the automated branch creation configuration. ",
                    "properties" : {
                      "stage" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Stage"
                        }, {
                          "description" : " Describes the current stage for the autocreated branch. "
                        } ]
                      },
                      "framework" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Framework"
                        }, {
                          "description" : " The framework for the autocreated branch. "
                        } ]
                      },
                      "enableAutoBuild" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/EnableAutoBuild"
                        }, {
                          "description" : " Enables auto building for the autocreated branch. "
                        } ]
                      },
                      "environmentVariables" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/EnvironmentVariables"
                        }, {
                          "description" : " The environment variables for the autocreated branch. "
                        } ]
                      },
                      "basicAuthCredentials" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/BasicAuthCredentials"
                        }, {
                          "description" : " The basic authorization credentials for the autocreated branch. "
                        } ]
                      },
                      "enableBasicAuth" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/EnableBasicAuth"
                        }, {
                          "description" : " Enables basic authorization for the autocreated branch. "
                        } ]
                      },
                      "enablePerformanceMode" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/EnablePerformanceMode"
                        }, {
                          "description" : "<p>Enables performance mode for the branch.</p> <p>Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out. </p>"
                        } ]
                      },
                      "buildSpec" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/BuildSpec"
                        }, {
                          "description" : " The build specification (build spec) for the autocreated branch. "
                        } ]
                      },
                      "enablePullRequestPreview" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/EnablePullRequestPreview"
                        }, {
                          "description" : " Enables pull request previews for the autocreated branch. "
                        } ]
                      },
                      "pullRequestEnvironmentName" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/PullRequestEnvironmentName"
                        }, {
                          "description" : " The Amplify environment name for the pull request. "
                        } ]
                      }
                    },
                    "type" : "object"
                  },
                  "repository" : {
                    "description" : " The name of the repository for an Amplify app ",
                    "maxLength" : 1000,
                    "type" : "string"
                  },
                  "oauthToken" : {
                    "description" : " The OAuth token for a third-party source control system for an Amplify app. The token is used to create a webhook and a read-only deploy key. The OAuth token is not stored. ",
                    "format" : "password",
                    "maxLength" : 1000,
                    "type" : "string"
                  },
                  "accessToken" : {
                    "description" : " The personal access token for a third-party source control system for an Amplify app. The token is used to create webhook and a read-only deploy key. The token is not stored. ",
                    "format" : "password",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateAppResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : " Deletes an existing Amplify app specified by an app ID. ",
        "operationId" : "DeleteApp",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteAppResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "484" : {
            "description" : "DependentServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DependentServiceFailureException"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/backendenvironments/{environmentName}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns a backend environment for an Amplify app. ",
        "operationId" : "GetBackendEnvironment",
        "parameters" : [ {
          "description" : " The unique id for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : " The name for the backend environment. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "in" : "path",
          "name" : "environmentName"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetBackendEnvironmentResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : " Deletes a backend environment for an Amplify app. ",
        "operationId" : "DeleteBackendEnvironment",
        "parameters" : [ {
          "description" : " The unique ID of an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : " The name of a backend environment of an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "in" : "path",
          "name" : "environmentName"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteBackendEnvironmentResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "484" : {
            "description" : "DependentServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DependentServiceFailureException"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/branches/{branchName}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns a branch for an Amplify app. ",
        "operationId" : "GetBranch",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : " The name for the branch. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "in" : "path",
          "name" : "branchName"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetBranchResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : " Updates a branch for an Amplify app. ",
        "operationId" : "UpdateBranch",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : " The name for the branch. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "in" : "path",
          "name" : "branchName"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "description" : {
                    "description" : " The description for the branch. ",
                    "maxLength" : 1000,
                    "type" : "string"
                  },
                  "framework" : {
                    "description" : " The framework for the branch. ",
                    "maxLength" : 255,
                    "type" : "string"
                  },
                  "stage" : {
                    "description" : " Describes the current stage for the branch. ",
                    "type" : "string",
                    "enum" : [ "PRODUCTION", "BETA", "DEVELOPMENT", "EXPERIMENTAL", "PULL_REQUEST" ]
                  },
                  "enableNotification" : {
                    "description" : " Enables notifications for the branch. ",
                    "type" : "boolean"
                  },
                  "enableAutoBuild" : {
                    "description" : " Enables auto building for the branch. ",
                    "type" : "boolean"
                  },
                  "environmentVariables" : {
                    "description" : " The environment variables for the branch. ",
                    "type" : "object",
                    "additionalProperties" : {
                      "$ref" : "#/components/schemas/EnvValue"
                    }
                  },
                  "basicAuthCredentials" : {
                    "description" : " The basic authorization credentials for the branch. ",
                    "format" : "password",
                    "maxLength" : 2000,
                    "type" : "string"
                  },
                  "enableBasicAuth" : {
                    "description" : " Enables basic authorization for the branch. ",
                    "type" : "boolean"
                  },
                  "enablePerformanceMode" : {
                    "description" : "<p>Enables performance mode for the branch.</p> <p>Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out. </p>",
                    "type" : "boolean"
                  },
                  "buildSpec" : {
                    "description" : " The build specification (build spec) file for an Amplify app build. ",
                    "maxLength" : 25000,
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ttl" : {
                    "description" : " The content Time to Live (TTL) for the website in seconds. ",
                    "type" : "string"
                  },
                  "displayName" : {
                    "description" : " The display name for a branch. This is used as the default domain prefix. ",
                    "maxLength" : 255,
                    "type" : "string"
                  },
                  "enablePullRequestPreview" : {
                    "description" : " Enables pull request previews for this branch. ",
                    "type" : "boolean"
                  },
                  "pullRequestEnvironmentName" : {
                    "description" : " The Amplify environment name for the pull request. ",
                    "maxLength" : 20,
                    "type" : "string"
                  },
                  "backendEnvironmentArn" : {
                    "description" : " The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify app. ",
                    "maxLength" : 1000,
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateBranchResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "484" : {
            "description" : "DependentServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DependentServiceFailureException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : " Deletes a branch for an Amplify app. ",
        "operationId" : "DeleteBranch",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : " The name for the branch. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "in" : "path",
          "name" : "branchName"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteBranchResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "484" : {
            "description" : "DependentServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DependentServiceFailureException"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/domains/{domainName}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns the domain information for an Amplify app. ",
        "operationId" : "GetDomainAssociation",
        "parameters" : [ {
          "description" : " The unique id for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : " The name of the domain. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "in" : "path",
          "name" : "domainName"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetDomainAssociationResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : " Creates a new domain association for an Amplify app.",
        "operationId" : "UpdateDomainAssociation",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : " The name of the domain. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "in" : "path",
          "name" : "domainName"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "enableAutoSubDomain" : {
                    "description" : " Enables the automated creation of subdomains for branches. ",
                    "type" : "boolean"
                  },
                  "subDomainSettings" : {
                    "description" : " Describes the settings for the subdomain. ",
                    "maxItems" : 255,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/SubDomainSetting"
                    }
                  },
                  "autoSubDomainCreationPatterns" : {
                    "description" : " Sets the branch patterns for automatic subdomain creation. ",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/AutoSubDomainCreationPattern"
                    }
                  },
                  "autoSubDomainIAMRole" : {
                    "description" : " The required AWS Identity and Access Management (IAM) service role for the Amazon Resource Name (ARN) for automatically creating subdomains. ",
                    "maxLength" : 1000,
                    "pattern" : "^$|^arn:aws:iam::\\d{12}:role.+",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "subDomainSettings" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateDomainAssociationResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "484" : {
            "description" : "DependentServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DependentServiceFailureException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : " Deletes a domain association for an Amplify app. ",
        "operationId" : "DeleteDomainAssociation",
        "parameters" : [ {
          "description" : " The unique id for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : " The name of the domain. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "in" : "path",
          "name" : "domainName"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteDomainAssociationResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "484" : {
            "description" : "DependentServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DependentServiceFailureException"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/branches/{branchName}/jobs/{jobId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns a job for a branch of an Amplify app. ",
        "operationId" : "GetJob",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : " The branch name for the job. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "in" : "path",
          "name" : "branchName"
        }, {
          "description" : " The unique ID for the job. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "in" : "path",
          "name" : "jobId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetJobResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "483" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "484" : {
            "description" : "LimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LimitExceededException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : " Deletes a job for a branch of an Amplify app. ",
        "operationId" : "DeleteJob",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : " The name for the branch, for the job. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "in" : "path",
          "name" : "branchName"
        }, {
          "description" : " The unique ID for the job. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "in" : "path",
          "name" : "jobId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteJobResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "483" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "484" : {
            "description" : "LimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LimitExceededException"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/{webhookId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns the webhook information that corresponds to a specified webhook ID. ",
        "operationId" : "GetWebhook",
        "parameters" : [ {
          "description" : " The unique ID for a webhook. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "in" : "path",
          "name" : "webhookId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetWebhookResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "483" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "484" : {
            "description" : "LimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LimitExceededException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : " Updates a webhook. ",
        "operationId" : "UpdateWebhook",
        "parameters" : [ {
          "description" : " The unique ID for a webhook. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "in" : "path",
          "name" : "webhookId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "branchName" : {
                    "description" : " The name for a branch that is part of an Amplify app. ",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "description" : {
                    "description" : " The description for a webhook. ",
                    "maxLength" : 1000,
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateWebhookResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "484" : {
            "description" : "DependentServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DependentServiceFailureException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : " Deletes a webhook. ",
        "operationId" : "DeleteWebhook",
        "parameters" : [ {
          "description" : " The unique ID for a webhook. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "in" : "path",
          "name" : "webhookId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteWebhookResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "483" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "484" : {
            "description" : "LimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LimitExceededException"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/accesslogs" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : " Returns the website access logs for a specific time range using a presigned URL. ",
        "operationId" : "GenerateAccessLogs",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "startTime" : {
                    "description" : " The time at which the logs should start. The time range specified is inclusive of the start time. ",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "endTime" : {
                    "description" : " The time at which the logs should end. The time range specified is inclusive of the end time. ",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "domainName" : {
                    "description" : " The name of the domain. ",
                    "maxLength" : 255,
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "domainName" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateAccessLogsResult"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          }
        }
      }
    },
    "/artifacts/{artifactId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns the artifact info that corresponds to an artifact id. ",
        "operationId" : "GetArtifactUrl",
        "parameters" : [ {
          "description" : " The unique ID for an artifact. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "in" : "path",
          "name" : "artifactId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetArtifactUrlResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "483" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "484" : {
            "description" : "LimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LimitExceededException"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/branches/{branchName}/jobs/{jobId}/artifacts" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns a list of artifacts for a specified app, branch, and job. ",
        "operationId" : "ListArtifacts",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : " The name of a branch that is part of an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "in" : "path",
          "name" : "branchName"
        }, {
          "description" : " The unique ID for a job. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "in" : "path",
          "name" : "jobId"
        }, {
          "description" : " A pagination token. Set to null to start listing artifacts from start. If a non-null pagination token is returned in a result, pass its value in here to list more artifacts. ",
          "required" : false,
          "schema" : {
            "maxLength" : 2000,
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : " The maximum number of records to list in a single response. ",
          "required" : false,
          "schema" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListArtifactsResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "483" : {
            "description" : "LimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LimitExceededException"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/branches/{branchName}/jobs" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Lists the jobs for a branch of an Amplify app. ",
        "operationId" : "ListJobs",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : " The name for a branch. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "in" : "path",
          "name" : "branchName"
        }, {
          "description" : " A pagination token. Set to null to start listing steps from the start. If a non-null pagination token is returned in a result, pass its value in here to list more steps. ",
          "required" : false,
          "schema" : {
            "maxLength" : 2000,
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : " The maximum number of records to list in a single response. ",
          "required" : false,
          "schema" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListJobsResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "483" : {
            "description" : "LimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LimitExceededException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : " Starts a new job for a branch of an Amplify app. ",
        "operationId" : "StartJob",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : " The branch name for the job. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "in" : "path",
          "name" : "branchName"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "jobId" : {
                    "description" : " The unique ID for an existing job. This is required if the value of <code>jobType</code> is <code>RETRY</code>. ",
                    "maxLength" : 255,
                    "type" : "string"
                  },
                  "jobType" : {
                    "description" : " Describes the type for the job. The job type <code>RELEASE</code> starts a new job with the latest change from the specified branch. This value is available only for apps that are connected to a repository. The job type <code>RETRY</code> retries an existing job. If the job type value is <code>RETRY</code>, the <code>jobId</code> is also required. ",
                    "maxLength" : 10,
                    "type" : "string",
                    "enum" : [ "RELEASE", "RETRY", "MANUAL", "WEB_HOOK" ]
                  },
                  "jobReason" : {
                    "description" : " A descriptive reason for starting this job. ",
                    "maxLength" : 255,
                    "type" : "string"
                  },
                  "commitId" : {
                    "description" : " The commit ID from a third-party repository provider for the job. ",
                    "maxLength" : 255,
                    "type" : "string"
                  },
                  "commitMessage" : {
                    "description" : " The commit message from a third-party repository provider for the job. ",
                    "maxLength" : 10000,
                    "type" : "string"
                  },
                  "commitTime" : {
                    "description" : " The commit date and time for the job. ",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "jobType" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StartJobResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "483" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "484" : {
            "description" : "LimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LimitExceededException"
                }
              }
            }
          }
        }
      }
    },
    "/tags/{resourceArn}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Returns a list of tags for a specified Amazon Resource Name (ARN). ",
        "operationId" : "ListTagsForResource",
        "parameters" : [ {
          "description" : " The Amazon Resource Name (ARN) to use to list tags. ",
          "required" : true,
          "schema" : {
            "pattern" : "^arn:aws:amplify:.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "resourceArn"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListTagsForResourceResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "481" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "482" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : " Tags the resource with a tag key and value. ",
        "operationId" : "TagResource",
        "parameters" : [ {
          "description" : " The Amazon Resource Name (ARN) to use to tag a resource. ",
          "required" : true,
          "schema" : {
            "pattern" : "^arn:aws:amplify:.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "resourceArn"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "tags" : {
                    "description" : " The tags used to tag the resource. ",
                    "maxProperties" : 50,
                    "minProperties" : 1,
                    "type" : "object",
                    "additionalProperties" : {
                      "$ref" : "#/components/schemas/TagValue"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "tags" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TagResourceResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "481" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "482" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/branches/{branchName}/deployments/start" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : " Starts a deployment for a manually deployed app. Manually deployed apps are not connected to a repository. ",
        "operationId" : "StartDeployment",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : " The name for the branch, for the job. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "in" : "path",
          "name" : "branchName"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "jobId" : {
                    "description" : " The job ID for this deployment, generated by the create deployment request. ",
                    "maxLength" : 255,
                    "type" : "string"
                  },
                  "sourceUrl" : {
                    "description" : " The source URL for this deployment, used when calling start deployment without create deployment. The source URL can be any HTTP GET URL that is publicly accessible and downloads a single .zip file. ",
                    "maxLength" : 1000,
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StartDeploymentResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "483" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "484" : {
            "description" : "LimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LimitExceededException"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/branches/{branchName}/jobs/{jobId}/stop" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "delete" : {
        "description" : " Stops a job that is in progress for a branch of an Amplify app. ",
        "operationId" : "StopJob",
        "parameters" : [ {
          "description" : " The unique ID for an Amplify app. ",
          "required" : true,
          "schema" : {
            "maxLength" : 20,
            "minLength" : 1,
            "pattern" : "d[a-z0-9]+",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appId"
        }, {
          "description" : " The name for the branch, for the job. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "in" : "path",
          "name" : "branchName"
        }, {
          "description" : " The unique id for the job. ",
          "required" : true,
          "schema" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "in" : "path",
          "name" : "jobId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StopJobResult"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "483" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "484" : {
            "description" : "LimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LimitExceededException"
                }
              }
            }
          }
        }
      }
    },
    "/tags/{resourceArn}#tagKeys" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "delete" : {
        "description" : " Untags a resource with a specified Amazon Resource Name (ARN). ",
        "operationId" : "UntagResource",
        "parameters" : [ {
          "description" : " The Amazon Resource Name (ARN) to use to untag a resource. ",
          "required" : true,
          "schema" : {
            "pattern" : "^arn:aws:amplify:.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "resourceArn"
        }, {
          "description" : " The tag keys to use to untag a resource. ",
          "required" : true,
          "schema" : {
            "maxItems" : 50,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TagKey"
            }
          },
          "in" : "query",
          "name" : "tagKeys"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UntagResourceResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "InternalFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalFailureException"
                }
              }
            }
          },
          "481" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "482" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "parameters" : {
      "X-Amz-Content-Sha256" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Content-Sha256"
      },
      "X-Amz-Date" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Date"
      },
      "X-Amz-Algorithm" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Algorithm"
      },
      "X-Amz-Credential" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Credential"
      },
      "X-Amz-Security-Token" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Security-Token"
      },
      "X-Amz-Signature" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-SignedHeaders"
      }
    },
    "schemas" : {
      "CreateAppResult" : {
        "properties" : {
          "app" : {
            "$ref" : "#/components/schemas/App"
          }
        },
        "type" : "object",
        "required" : [ "app" ]
      },
      "EnvValue" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "CustomRule" : {
        "description" : " Describes a custom rewrite or redirect rule. ",
        "properties" : {
          "source" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Source"
            }, {
              "description" : " The source pattern for a URL rewrite or redirect rule. "
            } ]
          },
          "target" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Target"
            }, {
              "description" : " The target pattern for a URL rewrite or redirect rule. "
            } ]
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Status"
            }, {
              "description" : "<p> The status code for a URL rewrite or redirect rule. </p> <dl> <dt>200</dt> <dd> <p>Represents a 200 rewrite rule.</p> </dd> <dt>301</dt> <dd> <p>Represents a 301 (moved pemanently) redirect rule. This and all future requests should be directed to the target URL. </p> </dd> <dt>302</dt> <dd> <p>Represents a 302 temporary redirect rule.</p> </dd> <dt>404</dt> <dd> <p>Represents a 404 redirect rule.</p> </dd> <dt>404-200</dt> <dd> <p>Represents a 404 rewrite rule.</p> </dd> </dl>"
            } ]
          },
          "condition" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Condition"
            }, {
              "description" : " The condition for a URL rewrite or redirect rule, such as a country code. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "source", "target" ]
      },
      "TagValue" : {
        "maxLength" : 256,
        "type" : "string"
      },
      "AutoBranchCreationPattern" : {
        "maxLength" : 2048,
        "minLength" : 1,
        "type" : "string"
      },
      "Stage" : {
        "type" : "string",
        "enum" : [ "PRODUCTION", "BETA", "DEVELOPMENT", "EXPERIMENTAL", "PULL_REQUEST" ]
      },
      "Framework" : {
        "maxLength" : 255,
        "type" : "string"
      },
      "EnableAutoBuild" : {
        "type" : "boolean"
      },
      "EnvironmentVariables" : {
        "type" : "object",
        "additionalProperties" : {
          "$ref" : "#/components/schemas/EnvValue"
        }
      },
      "BasicAuthCredentials" : {
        "format" : "password",
        "maxLength" : 2000,
        "type" : "string"
      },
      "EnableBasicAuth" : {
        "type" : "boolean"
      },
      "EnablePerformanceMode" : {
        "type" : "boolean"
      },
      "BuildSpec" : {
        "description" : " The build specification (build spec) file for an Amplify app build. ",
        "maxLength" : 25000,
        "minLength" : 1,
        "type" : "string"
      },
      "EnablePullRequestPreview" : {
        "type" : "boolean"
      },
      "PullRequestEnvironmentName" : {
        "maxLength" : 20,
        "type" : "string"
      },
      "BadRequestException" : { },
      "UnauthorizedException" : { },
      "InternalFailureException" : { },
      "LimitExceededException" : { },
      "DependentServiceFailureException" : { },
      "CreateBackendEnvironmentResult" : {
        "description" : " The result structure for the create backend environment request. ",
        "properties" : {
          "backendEnvironment" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BackendEnvironment"
            }, {
              "description" : " Describes the backend environment for an Amplify app. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "backendEnvironment" ]
      },
      "NotFoundException" : { },
      "CreateBranchResult" : {
        "description" : " The result structure for create branch request. ",
        "properties" : {
          "branch" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Branch"
            }, {
              "description" : " Describes the branch for an Amplify app, which maps to a third-party repository branch. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "branch" ]
      },
      "CreateDeploymentResult" : {
        "description" : " The result structure for the create a new deployment request. ",
        "properties" : {
          "jobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/JobId"
            }, {
              "description" : " The job ID for this deployment. will supply to start deployment api. "
            } ]
          },
          "fileUploadUrls" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/FileUploadUrls"
            }, {
              "description" : " When the <code>fileMap</code> argument is provided in the request, <code>fileUploadUrls</code> will contain a map of file names to upload URLs. "
            } ]
          },
          "zipUploadUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UploadUrl"
            }, {
              "description" : " When the <code>fileMap</code> argument is not provided in the request, this <code>zipUploadUrl</code> is returned. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "fileUploadUrls", "zipUploadUrl" ]
      },
      "MD5Hash" : {
        "maxLength" : 32,
        "type" : "string"
      },
      "CreateDomainAssociationResult" : {
        "description" : " The result structure for the create domain association request. ",
        "properties" : {
          "domainAssociation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DomainAssociation"
            }, {
              "description" : " Describes the structure of a domain association, which associates a custom domain with an Amplify app. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "domainAssociation" ]
      },
      "SubDomainSetting" : {
        "description" : " Describes the settings for the subdomain. ",
        "properties" : {
          "prefix" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DomainPrefix"
            }, {
              "description" : " The prefix setting for the subdomain. "
            } ]
          },
          "branchName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BranchName"
            }, {
              "description" : " The branch name setting for the subdomain. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "prefix", "branchName" ]
      },
      "AutoSubDomainCreationPattern" : {
        "maxLength" : 2048,
        "minLength" : 1,
        "type" : "string"
      },
      "CreateWebhookResult" : {
        "description" : " The result structure for the create webhook request. ",
        "properties" : {
          "webhook" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Webhook"
            }, {
              "description" : " Describes a webhook that connects repository events to an Amplify app. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "webhook" ]
      },
      "DeleteAppResult" : {
        "description" : " The result structure for the delete app request. ",
        "properties" : {
          "app" : {
            "$ref" : "#/components/schemas/App"
          }
        },
        "type" : "object",
        "required" : [ "app" ]
      },
      "DeleteBackendEnvironmentResult" : {
        "description" : " The result structure of the delete backend environment result. ",
        "properties" : {
          "backendEnvironment" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BackendEnvironment"
            }, {
              "description" : " Describes the backend environment for an Amplify app. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "backendEnvironment" ]
      },
      "DeleteBranchResult" : {
        "description" : " The result structure for the delete branch request. ",
        "properties" : {
          "branch" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Branch"
            }, {
              "description" : " The branch for an Amplify app, which maps to a third-party repository branch. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "branch" ]
      },
      "DeleteDomainAssociationResult" : {
        "properties" : {
          "domainAssociation" : {
            "$ref" : "#/components/schemas/DomainAssociation"
          }
        },
        "type" : "object",
        "required" : [ "domainAssociation" ]
      },
      "DeleteJobResult" : {
        "description" : " The result structure for the delete job request. ",
        "properties" : {
          "jobSummary" : {
            "$ref" : "#/components/schemas/JobSummary"
          }
        },
        "type" : "object",
        "required" : [ "jobSummary" ]
      },
      "DeleteWebhookResult" : {
        "description" : " The result structure for the delete webhook request. ",
        "properties" : {
          "webhook" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Webhook"
            }, {
              "description" : " Describes a webhook that connects repository events to an Amplify app. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "webhook" ]
      },
      "GenerateAccessLogsResult" : {
        "description" : " The result structure for the generate access logs request. ",
        "properties" : {
          "logUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/LogUrl"
            }, {
              "description" : " The pre-signed URL for the requested access logs. "
            } ]
          }
        },
        "type" : "object"
      },
      "GetAppResult" : {
        "properties" : {
          "app" : {
            "$ref" : "#/components/schemas/App"
          }
        },
        "type" : "object",
        "required" : [ "app" ]
      },
      "GetArtifactUrlResult" : {
        "description" : " Returns the result structure for the get artifact request. ",
        "properties" : {
          "artifactId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ArtifactId"
            }, {
              "description" : " The unique ID for an artifact. "
            } ]
          },
          "artifactUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ArtifactUrl"
            }, {
              "description" : " The presigned URL for the artifact. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "artifactId", "artifactUrl" ]
      },
      "GetBackendEnvironmentResult" : {
        "description" : " The result structure for the get backend environment result. ",
        "properties" : {
          "backendEnvironment" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BackendEnvironment"
            }, {
              "description" : " Describes the backend environment for an Amplify app. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "backendEnvironment" ]
      },
      "GetBranchResult" : {
        "properties" : {
          "branch" : {
            "$ref" : "#/components/schemas/Branch"
          }
        },
        "type" : "object",
        "required" : [ "branch" ]
      },
      "GetDomainAssociationResult" : {
        "description" : " The result structure for the get domain association request. ",
        "properties" : {
          "domainAssociation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DomainAssociation"
            }, {
              "description" : " Describes the structure of a domain association, which associates a custom domain with an Amplify app. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "domainAssociation" ]
      },
      "GetJobResult" : {
        "properties" : {
          "job" : {
            "$ref" : "#/components/schemas/Job"
          }
        },
        "type" : "object",
        "required" : [ "job" ]
      },
      "GetWebhookResult" : {
        "description" : " The result structure for the get webhook request. ",
        "properties" : {
          "webhook" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Webhook"
            }, {
              "description" : " Describes the structure of a webhook. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "webhook" ]
      },
      "ListAppsResult" : {
        "description" : " The result structure for an Amplify app list request. ",
        "properties" : {
          "apps" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Apps"
            }, {
              "description" : " A list of Amplify apps. "
            } ]
          },
          "nextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : " A pagination token. Set to null to start listing apps from start. If non-null, the pagination token is returned in a result. Pass its value in here to list more projects. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "apps" ]
      },
      "ListArtifactsResult" : {
        "description" : " The result structure for the list artifacts request. ",
        "properties" : {
          "artifacts" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Artifacts"
            }, {
              "description" : " A list of artifacts. "
            } ]
          },
          "nextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : " A pagination token. If a non-null pagination token is returned in a result, pass its value in another request to retrieve more entries. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "artifacts" ]
      },
      "ListBackendEnvironmentsResult" : {
        "description" : " The result structure for the list backend environments result. ",
        "properties" : {
          "backendEnvironments" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BackendEnvironments"
            }, {
              "description" : " The list of backend environments for an Amplify app. "
            } ]
          },
          "nextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : " A pagination token. If a non-null pagination token is returned in a result, pass its value in another request to retrieve more entries. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "backendEnvironments" ]
      },
      "ListBranchesResult" : {
        "description" : " The result structure for the list branches request. ",
        "properties" : {
          "branches" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Branches"
            }, {
              "description" : " A list of branches for an Amplify app. "
            } ]
          },
          "nextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : " A pagination token. If a non-null pagination token is returned in a result, pass its value in another request to retrieve more entries. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "branches" ]
      },
      "ListDomainAssociationsResult" : {
        "description" : " The result structure for the list domain association request. ",
        "properties" : {
          "domainAssociations" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DomainAssociations"
            }, {
              "description" : " A list of domain associations. "
            } ]
          },
          "nextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : " A pagination token. If non-null, a pagination token is returned in a result. Pass its value in another request to retrieve more entries. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "domainAssociations" ]
      },
      "ListJobsResult" : {
        "description" : " The maximum number of records to list in a single response. ",
        "properties" : {
          "jobSummaries" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/JobSummaries"
            }, {
              "description" : " The result structure for the list job result request. "
            } ]
          },
          "nextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : " A pagination token. If non-null the pagination token is returned in a result. Pass its value in another request to retrieve more entries. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "jobSummaries" ]
      },
      "ListTagsForResourceResponse" : {
        "description" : " The response for the list tags for resource request. ",
        "properties" : {
          "tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagMap"
            }, {
              "description" : " A list of tags for the specified The Amazon Resource Name (ARN). "
            } ]
          }
        },
        "type" : "object"
      },
      "ResourceNotFoundException" : { },
      "ListWebhooksResult" : {
        "description" : " The result structure for the list webhooks request. ",
        "properties" : {
          "webhooks" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Webhooks"
            }, {
              "description" : " A list of webhooks. "
            } ]
          },
          "nextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : " A pagination token. If non-null, the pagination token is returned in a result. Pass its value in another request to retrieve more entries. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "webhooks" ]
      },
      "StartDeploymentResult" : {
        "description" : " The result structure for the start a deployment request. ",
        "properties" : {
          "jobSummary" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/JobSummary"
            }, {
              "description" : " The summary for the job. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "jobSummary" ]
      },
      "StartJobResult" : {
        "description" : " The result structure for the run job request. ",
        "properties" : {
          "jobSummary" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/JobSummary"
            }, {
              "description" : " The summary for the job. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "jobSummary" ]
      },
      "StopJobResult" : {
        "description" : " The result structure for the stop job request. ",
        "properties" : {
          "jobSummary" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/JobSummary"
            }, {
              "description" : " The summary for the job. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "jobSummary" ]
      },
      "TagResourceResponse" : {
        "description" : " The response for the tag resource request. ",
        "properties" : { },
        "type" : "object"
      },
      "UntagResourceResponse" : {
        "description" : " The response for the untag resource request. ",
        "properties" : { },
        "type" : "object"
      },
      "TagKey" : {
        "maxLength" : 128,
        "minLength" : 1,
        "pattern" : "^(?!aws:)[a-zA-Z+-=._:/]+$",
        "type" : "string"
      },
      "UpdateAppResult" : {
        "description" : " The result structure for an Amplify app update request. ",
        "properties" : {
          "app" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/App"
            }, {
              "description" : " Represents the updated Amplify app. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "app" ]
      },
      "UpdateBranchResult" : {
        "description" : " The result structure for the update branch request. ",
        "properties" : {
          "branch" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Branch"
            }, {
              "description" : " The branch for an Amplify app, which maps to a third-party repository branch. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "branch" ]
      },
      "UpdateDomainAssociationResult" : {
        "description" : " The result structure for the update domain association request. ",
        "properties" : {
          "domainAssociation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DomainAssociation"
            }, {
              "description" : " Describes a domain association, which associates a custom domain with an Amplify app. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "domainAssociation" ]
      },
      "UpdateWebhookResult" : {
        "description" : " The result structure for the update webhook request. ",
        "properties" : {
          "webhook" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Webhook"
            }, {
              "description" : " Describes a webhook that connects repository events to an Amplify app. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "webhook" ]
      },
      "AccessToken" : {
        "format" : "password",
        "maxLength" : 255,
        "minLength" : 1,
        "type" : "string"
      },
      "ActiveJobId" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "AppId" : {
        "maxLength" : 20,
        "minLength" : 1,
        "pattern" : "d[a-z0-9]+",
        "type" : "string"
      },
      "AppArn" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "Name" : {
        "maxLength" : 255,
        "minLength" : 1,
        "type" : "string"
      },
      "TagMap" : {
        "maxProperties" : 50,
        "minProperties" : 1,
        "type" : "object",
        "additionalProperties" : {
          "$ref" : "#/components/schemas/TagValue"
        }
      },
      "Description" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "Repository" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "Platform" : {
        "type" : "string",
        "enum" : [ "WEB" ]
      },
      "CreateTime" : {
        "format" : "date-time",
        "type" : "string"
      },
      "UpdateTime" : {
        "format" : "date-time",
        "type" : "string"
      },
      "ServiceRoleArn" : {
        "maxLength" : 1000,
        "minLength" : 1,
        "type" : "string"
      },
      "DefaultDomain" : {
        "maxLength" : 1000,
        "minLength" : 1,
        "type" : "string"
      },
      "EnableBranchAutoBuild" : {
        "type" : "boolean"
      },
      "EnableBranchAutoDeletion" : {
        "type" : "boolean"
      },
      "CustomRules" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomRule"
        }
      },
      "ProductionBranch" : {
        "description" : " Describes the information about a production branch for an Amplify app. ",
        "properties" : {
          "lastDeployTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/LastDeployTime"
            }, {
              "description" : " The last deploy time of the production branch. "
            } ]
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Status"
            }, {
              "description" : " The status of the production branch. "
            } ]
          },
          "thumbnailUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ThumbnailUrl"
            }, {
              "description" : " The thumbnail URL for the production branch. "
            } ]
          },
          "branchName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BranchName"
            }, {
              "description" : " The branch name for the production branch. "
            } ]
          }
        },
        "type" : "object"
      },
      "CustomHeaders" : {
        "maxLength" : 25000,
        "minLength" : 1,
        "type" : "string"
      },
      "EnableAutoBranchCreation" : {
        "type" : "boolean"
      },
      "AutoBranchCreationPatterns" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AutoBranchCreationPattern"
        }
      },
      "AutoBranchCreationConfig" : {
        "description" : " Describes the automated branch creation configuration. ",
        "properties" : {
          "stage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Stage"
            }, {
              "description" : " Describes the current stage for the autocreated branch. "
            } ]
          },
          "framework" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Framework"
            }, {
              "description" : " The framework for the autocreated branch. "
            } ]
          },
          "enableAutoBuild" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableAutoBuild"
            }, {
              "description" : " Enables auto building for the autocreated branch. "
            } ]
          },
          "environmentVariables" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnvironmentVariables"
            }, {
              "description" : " The environment variables for the autocreated branch. "
            } ]
          },
          "basicAuthCredentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BasicAuthCredentials"
            }, {
              "description" : " The basic authorization credentials for the autocreated branch. "
            } ]
          },
          "enableBasicAuth" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableBasicAuth"
            }, {
              "description" : " Enables basic authorization for the autocreated branch. "
            } ]
          },
          "enablePerformanceMode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnablePerformanceMode"
            }, {
              "description" : "<p>Enables performance mode for the branch.</p> <p>Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out. </p>"
            } ]
          },
          "buildSpec" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BuildSpec"
            }, {
              "description" : " The build specification (build spec) for the autocreated branch. "
            } ]
          },
          "enablePullRequestPreview" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnablePullRequestPreview"
            }, {
              "description" : " Enables pull request previews for the autocreated branch. "
            } ]
          },
          "pullRequestEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PullRequestEnvironmentName"
            }, {
              "description" : " The Amplify environment name for the pull request. "
            } ]
          }
        },
        "type" : "object"
      },
      "App" : {
        "description" : " Represents the different branches of a repository for building, deploying, and hosting an Amplify app. ",
        "properties" : {
          "appId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppId"
            }, {
              "description" : " The unique ID of the Amplify app. "
            } ]
          },
          "appArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppArn"
            }, {
              "description" : " The Amazon Resource Name (ARN) of the Amplify app. "
            } ]
          },
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Name"
            }, {
              "description" : " The name for the Amplify app. "
            } ]
          },
          "tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagMap"
            }, {
              "description" : " The tag for the Amplify app. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Description"
            }, {
              "description" : " The description for the Amplify app. "
            } ]
          },
          "repository" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Repository"
            }, {
              "description" : " The repository for the Amplify app. "
            } ]
          },
          "platform" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Platform"
            }, {
              "description" : " The platform for the Amplify app. "
            } ]
          },
          "createTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateTime"
            }, {
              "description" : " Creates a date and time for the Amplify app. "
            } ]
          },
          "updateTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateTime"
            }, {
              "description" : " Updates the date and time for the Amplify app. "
            } ]
          },
          "iamServiceRoleArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ServiceRoleArn"
            }, {
              "description" : " The AWS Identity and Access Management (IAM) service role for the Amazon Resource Name (ARN) of the Amplify app. "
            } ]
          },
          "environmentVariables" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnvironmentVariables"
            }, {
              "description" : " The environment variables for the Amplify app. "
            } ]
          },
          "defaultDomain" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DefaultDomain"
            }, {
              "description" : " The default domain for the Amplify app. "
            } ]
          },
          "enableBranchAutoBuild" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableBranchAutoBuild"
            }, {
              "description" : " Enables the auto-building of branches for the Amplify app. "
            } ]
          },
          "enableBranchAutoDeletion" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableBranchAutoDeletion"
            }, {
              "description" : " Automatically disconnect a branch in the Amplify Console when you delete a branch from your Git repository. "
            } ]
          },
          "enableBasicAuth" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableBasicAuth"
            }, {
              "description" : " Enables basic authorization for the Amplify app's branches. "
            } ]
          },
          "basicAuthCredentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BasicAuthCredentials"
            }, {
              "description" : " The basic authorization credentials for branches for the Amplify app. "
            } ]
          },
          "customRules" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CustomRules"
            }, {
              "description" : " Describes the custom redirect and rewrite rules for the Amplify app. "
            } ]
          },
          "productionBranch" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProductionBranch"
            }, {
              "description" : " Describes the information about a production branch of the Amplify app. "
            } ]
          },
          "buildSpec" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BuildSpec"
            }, {
              "description" : " Describes the content of the build specification (build spec) for the Amplify app. "
            } ]
          },
          "customHeaders" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CustomHeaders"
            }, {
              "description" : "Describes the custom HTTP headers for the Amplify app."
            } ]
          },
          "enableAutoBranchCreation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableAutoBranchCreation"
            }, {
              "description" : " Enables automated branch creation for the Amplify app. "
            } ]
          },
          "autoBranchCreationPatterns" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutoBranchCreationPatterns"
            }, {
              "description" : " Describes the automated branch creation glob patterns for the Amplify app. "
            } ]
          },
          "autoBranchCreationConfig" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutoBranchCreationConfig"
            }, {
              "description" : " Describes the automated branch creation configuration for the Amplify app. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "appId", "appArn", "name", "description", "repository", "platform", "createTime", "updateTime", "environmentVariables", "defaultDomain", "enableBranchAutoBuild", "enableBasicAuth" ]
      },
      "Apps" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/App"
        }
      },
      "ArtifactFileName" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "ArtifactId" : {
        "maxLength" : 255,
        "type" : "string"
      },
      "Artifact" : {
        "description" : " Describes an artifact. ",
        "properties" : {
          "artifactFileName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ArtifactFileName"
            }, {
              "description" : " The file name for the artifact. "
            } ]
          },
          "artifactId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ArtifactId"
            }, {
              "description" : " The unique ID for the artifact. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "artifactFileName", "artifactId" ]
      },
      "ArtifactUrl" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "Artifacts" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Artifact"
        }
      },
      "ArtifactsUrl" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "AssociatedResource" : {
        "maxLength" : 2048,
        "minLength" : 1,
        "type" : "string"
      },
      "AssociatedResources" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AssociatedResource"
        }
      },
      "AutoSubDomainCreationPatterns" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AutoSubDomainCreationPattern"
        }
      },
      "AutoSubDomainIAMRole" : {
        "maxLength" : 1000,
        "pattern" : "^$|^arn:aws:iam::\\d{12}:role.+",
        "type" : "string"
      },
      "BackendEnvironmentArn" : {
        "maxLength" : 1000,
        "minLength" : 1,
        "type" : "string"
      },
      "EnvironmentName" : {
        "maxLength" : 255,
        "minLength" : 1,
        "type" : "string"
      },
      "StackName" : {
        "maxLength" : 255,
        "minLength" : 1,
        "type" : "string"
      },
      "DeploymentArtifacts" : {
        "maxLength" : 1000,
        "minLength" : 1,
        "type" : "string"
      },
      "BackendEnvironment" : {
        "description" : " Describes the backend environment for an Amplify app. ",
        "properties" : {
          "backendEnvironmentArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BackendEnvironmentArn"
            }, {
              "description" : " The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify app. "
            } ]
          },
          "environmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnvironmentName"
            }, {
              "description" : " The name for a backend environment that is part of an Amplify app. "
            } ]
          },
          "stackName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StackName"
            }, {
              "description" : " The AWS CloudFormation stack name of a backend environment. "
            } ]
          },
          "deploymentArtifacts" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DeploymentArtifacts"
            }, {
              "description" : " The name of deployment artifacts. "
            } ]
          },
          "createTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateTime"
            }, {
              "description" : " The creation date and time for a backend environment that is part of an Amplify app. "
            } ]
          },
          "updateTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateTime"
            }, {
              "description" : " The last updated date and time for a backend environment that is part of an Amplify app. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "backendEnvironmentArn", "environmentName", "createTime", "updateTime" ]
      },
      "BackendEnvironments" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/BackendEnvironment"
        }
      },
      "BranchArn" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "BranchName" : {
        "maxLength" : 255,
        "minLength" : 1,
        "type" : "string"
      },
      "DisplayName" : {
        "maxLength" : 255,
        "type" : "string"
      },
      "EnableNotification" : {
        "type" : "boolean"
      },
      "CustomDomains" : {
        "maxItems" : 255,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomDomain"
        }
      },
      "TotalNumberOfJobs" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "ThumbnailUrl" : {
        "maxLength" : 2000,
        "minLength" : 1,
        "type" : "string"
      },
      "TTL" : {
        "description" : " The content Time to Live (TTL) for the website in seconds. ",
        "type" : "string"
      },
      "Branch" : {
        "description" : " The branch for an Amplify app, which maps to a third-party repository branch. ",
        "properties" : {
          "branchArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BranchArn"
            }, {
              "description" : " The Amazon Resource Name (ARN) for a branch that is part of an Amplify app. "
            } ]
          },
          "branchName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BranchName"
            }, {
              "description" : " The name for the branch that is part of an Amplify app. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Description"
            }, {
              "description" : " The description for the branch that is part of an Amplify app. "
            } ]
          },
          "tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagMap"
            }, {
              "description" : " The tag for the branch of an Amplify app. "
            } ]
          },
          "stage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Stage"
            }, {
              "description" : " The current stage for the branch that is part of an Amplify app. "
            } ]
          },
          "displayName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DisplayName"
            }, {
              "description" : " The display name for the branch. This is used as the default domain prefix. "
            } ]
          },
          "enableNotification" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableNotification"
            }, {
              "description" : " Enables notifications for a branch that is part of an Amplify app. "
            } ]
          },
          "createTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateTime"
            }, {
              "description" : " The creation date and time for a branch that is part of an Amplify app. "
            } ]
          },
          "updateTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateTime"
            }, {
              "description" : " The last updated date and time for a branch that is part of an Amplify app. "
            } ]
          },
          "environmentVariables" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnvironmentVariables"
            }, {
              "description" : " The environment variables specific to a branch of an Amplify app. "
            } ]
          },
          "enableAutoBuild" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableAutoBuild"
            }, {
              "description" : " Enables auto-building on push for a branch of an Amplify app. "
            } ]
          },
          "customDomains" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CustomDomains"
            }, {
              "description" : " The custom domains for a branch of an Amplify app. "
            } ]
          },
          "framework" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Framework"
            }, {
              "description" : " The framework for a branch of an Amplify app. "
            } ]
          },
          "activeJobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ActiveJobId"
            }, {
              "description" : " The ID of the active job for a branch of an Amplify app. "
            } ]
          },
          "totalNumberOfJobs" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TotalNumberOfJobs"
            }, {
              "description" : " The total number of jobs that are part of an Amplify app. "
            } ]
          },
          "enableBasicAuth" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableBasicAuth"
            }, {
              "description" : " Enables basic authorization for a branch of an Amplify app. "
            } ]
          },
          "enablePerformanceMode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnablePerformanceMode"
            }, {
              "description" : "<p>Enables performance mode for the branch.</p> <p>Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out. </p>"
            } ]
          },
          "thumbnailUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ThumbnailUrl"
            }, {
              "description" : " The thumbnail URL for the branch of an Amplify app. "
            } ]
          },
          "basicAuthCredentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BasicAuthCredentials"
            }, {
              "description" : " The basic authorization credentials for a branch of an Amplify app. "
            } ]
          },
          "buildSpec" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BuildSpec"
            }, {
              "description" : " The build specification (build spec) content for the branch of an Amplify app. "
            } ]
          },
          "ttl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TTL"
            }, {
              "description" : " The content Time to Live (TTL) for the website in seconds. "
            } ]
          },
          "associatedResources" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssociatedResources"
            }, {
              "description" : " A list of custom resources that are linked to this branch. "
            } ]
          },
          "enablePullRequestPreview" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnablePullRequestPreview"
            }, {
              "description" : " Enables pull request previews for the branch. "
            } ]
          },
          "pullRequestEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PullRequestEnvironmentName"
            }, {
              "description" : " The Amplify environment name for the pull request. "
            } ]
          },
          "destinationBranch" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BranchName"
            }, {
              "description" : " The destination branch if the branch is a pull request branch. "
            } ]
          },
          "sourceBranch" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BranchName"
            }, {
              "description" : " The source branch if the branch is a pull request branch. "
            } ]
          },
          "backendEnvironmentArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BackendEnvironmentArn"
            }, {
              "description" : " The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify app. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "branchArn", "branchName", "description", "stage", "displayName", "enableNotification", "createTime", "updateTime", "environmentVariables", "enableAutoBuild", "customDomains", "framework", "activeJobId", "totalNumberOfJobs", "enableBasicAuth", "ttl", "enablePullRequestPreview" ]
      },
      "Branches" : {
        "maxItems" : 255,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Branch"
        }
      },
      "CertificateVerificationDNSRecord" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "CommitId" : {
        "maxLength" : 255,
        "type" : "string"
      },
      "CommitMessage" : {
        "maxLength" : 10000,
        "type" : "string"
      },
      "CommitTime" : {
        "format" : "date-time",
        "type" : "string"
      },
      "Condition" : {
        "maxLength" : 2048,
        "minLength" : 1,
        "type" : "string"
      },
      "Context" : {
        "type" : "string"
      },
      "OauthToken" : {
        "format" : "password",
        "maxLength" : 1000,
        "type" : "string"
      },
      "CreateAppRequest" : {
        "description" : " The request structure used to create apps in Amplify. ",
        "properties" : {
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Name"
            }, {
              "description" : " The name for an Amplify app. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Description"
            }, {
              "description" : " The description for an Amplify app. "
            } ]
          },
          "repository" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Repository"
            }, {
              "description" : " The repository for an Amplify app. "
            } ]
          },
          "platform" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Platform"
            }, {
              "description" : " The platform or framework for an Amplify app. "
            } ]
          },
          "iamServiceRoleArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ServiceRoleArn"
            }, {
              "description" : " The AWS Identity and Access Management (IAM) service role for an Amplify app. "
            } ]
          },
          "oauthToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OauthToken"
            }, {
              "description" : " The OAuth token for a third-party source control system for an Amplify app. The OAuth token is used to create a webhook and a read-only deploy key. The OAuth token is not stored. "
            } ]
          },
          "accessToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccessToken"
            }, {
              "description" : " The personal access token for a third-party source control system for an Amplify app. The personal access token is used to create a webhook and a read-only deploy key. The token is not stored. "
            } ]
          },
          "environmentVariables" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnvironmentVariables"
            }, {
              "description" : " The environment variables map for an Amplify app. "
            } ]
          },
          "enableBranchAutoBuild" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableBranchAutoBuild"
            }, {
              "description" : " Enables the auto building of branches for an Amplify app. "
            } ]
          },
          "enableBranchAutoDeletion" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableBranchAutoDeletion"
            }, {
              "description" : " Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository. "
            } ]
          },
          "enableBasicAuth" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableBasicAuth"
            }, {
              "description" : " Enables basic authorization for an Amplify app. This will apply to all branches that are part of this app. "
            } ]
          },
          "basicAuthCredentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BasicAuthCredentials"
            }, {
              "description" : " The credentials for basic authorization for an Amplify app. "
            } ]
          },
          "customRules" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CustomRules"
            }, {
              "description" : " The custom rewrite and redirect rules for an Amplify app. "
            } ]
          },
          "tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagMap"
            }, {
              "description" : " The tag for an Amplify app. "
            } ]
          },
          "buildSpec" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BuildSpec"
            }, {
              "description" : " The build specification (build spec) for an Amplify app. "
            } ]
          },
          "customHeaders" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CustomHeaders"
            }, {
              "description" : "The custom HTTP headers for an Amplify app."
            } ]
          },
          "enableAutoBranchCreation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableAutoBranchCreation"
            }, {
              "description" : " Enables automated branch creation for an Amplify app. "
            } ]
          },
          "autoBranchCreationPatterns" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutoBranchCreationPatterns"
            }, {
              "description" : " The automated branch creation glob patterns for an Amplify app. "
            } ]
          },
          "autoBranchCreationConfig" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutoBranchCreationConfig"
            }, {
              "description" : " The automated branch creation configuration for an Amplify app. "
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateAppRequest",
        "required" : [ "name" ]
      },
      "CreateBackendEnvironmentRequest" : {
        "description" : " The request structure for the backend environment create request. ",
        "properties" : {
          "environmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnvironmentName"
            }, {
              "description" : " The name for the backend environment. "
            } ]
          },
          "stackName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StackName"
            }, {
              "description" : " The AWS CloudFormation stack name of a backend environment. "
            } ]
          },
          "deploymentArtifacts" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DeploymentArtifacts"
            }, {
              "description" : " The name of deployment artifacts. "
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateBackendEnvironmentRequest",
        "required" : [ "environmentName" ]
      },
      "CreateBranchRequest" : {
        "description" : " The request structure for the create branch request. ",
        "properties" : {
          "branchName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BranchName"
            }, {
              "description" : " The name for the branch. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Description"
            }, {
              "description" : " The description for the branch. "
            } ]
          },
          "stage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Stage"
            }, {
              "description" : " Describes the current stage for the branch. "
            } ]
          },
          "framework" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Framework"
            }, {
              "description" : " The framework for the branch. "
            } ]
          },
          "enableNotification" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableNotification"
            }, {
              "description" : " Enables notifications for the branch. "
            } ]
          },
          "enableAutoBuild" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableAutoBuild"
            }, {
              "description" : " Enables auto building for the branch. "
            } ]
          },
          "environmentVariables" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnvironmentVariables"
            }, {
              "description" : " The environment variables for the branch. "
            } ]
          },
          "basicAuthCredentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BasicAuthCredentials"
            }, {
              "description" : " The basic authorization credentials for the branch. "
            } ]
          },
          "enableBasicAuth" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableBasicAuth"
            }, {
              "description" : " Enables basic authorization for the branch. "
            } ]
          },
          "enablePerformanceMode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnablePerformanceMode"
            }, {
              "description" : "<p>Enables performance mode for the branch.</p> <p>Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out. </p>"
            } ]
          },
          "tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagMap"
            }, {
              "description" : " The tag for the branch. "
            } ]
          },
          "buildSpec" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BuildSpec"
            }, {
              "description" : " The build specification (build spec) for the branch. "
            } ]
          },
          "ttl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TTL"
            }, {
              "description" : " The content Time To Live (TTL) for the website in seconds. "
            } ]
          },
          "displayName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DisplayName"
            }, {
              "description" : " The display name for a branch. This is used as the default domain prefix. "
            } ]
          },
          "enablePullRequestPreview" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnablePullRequestPreview"
            }, {
              "description" : " Enables pull request previews for this branch. "
            } ]
          },
          "pullRequestEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PullRequestEnvironmentName"
            }, {
              "description" : " The Amplify environment name for the pull request. "
            } ]
          },
          "backendEnvironmentArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BackendEnvironmentArn"
            }, {
              "description" : " The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify app. "
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateBranchRequest",
        "required" : [ "branchName" ]
      },
      "FileMap" : {
        "type" : "object",
        "additionalProperties" : {
          "$ref" : "#/components/schemas/MD5Hash"
        }
      },
      "CreateDeploymentRequest" : {
        "description" : " The request structure for the create a new deployment request. ",
        "properties" : {
          "fileMap" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/FileMap"
            }, {
              "description" : " An optional file map that contains the file name as the key and the file content md5 hash as the value. If this argument is provided, the service will generate a unique upload URL per file. Otherwise, the service will only generate a single upload URL for the zipped files. "
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateDeploymentRequest"
      },
      "JobId" : {
        "maxLength" : 255,
        "type" : "string"
      },
      "FileUploadUrls" : {
        "type" : "object",
        "additionalProperties" : {
          "$ref" : "#/components/schemas/UploadUrl"
        }
      },
      "UploadUrl" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "DomainName" : {
        "maxLength" : 255,
        "type" : "string"
      },
      "EnableAutoSubDomain" : {
        "type" : "boolean"
      },
      "SubDomainSettings" : {
        "maxItems" : 255,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/SubDomainSetting"
        }
      },
      "CreateDomainAssociationRequest" : {
        "description" : " The request structure for the create domain association request. ",
        "properties" : {
          "domainName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DomainName"
            }, {
              "description" : " The domain name for the domain association. "
            } ]
          },
          "enableAutoSubDomain" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableAutoSubDomain"
            }, {
              "description" : " Enables the automated creation of subdomains for branches. "
            } ]
          },
          "subDomainSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SubDomainSettings"
            }, {
              "description" : " The setting for the subdomain. "
            } ]
          },
          "autoSubDomainCreationPatterns" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutoSubDomainCreationPatterns"
            }, {
              "description" : " Sets the branch patterns for automatic subdomain creation. "
            } ]
          },
          "autoSubDomainIAMRole" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutoSubDomainIAMRole"
            }, {
              "description" : " The required AWS Identity and Access Management (IAM) service role for the Amazon Resource Name (ARN) for automatically creating subdomains. "
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateDomainAssociationRequest",
        "required" : [ "domainName", "subDomainSettings" ]
      },
      "DomainAssociation" : {
        "description" : " Describes a domain association that associates a custom domain with an Amplify app. ",
        "properties" : {
          "domainAssociationArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DomainAssociationArn"
            }, {
              "description" : " The Amazon Resource Name (ARN) for the domain association. "
            } ]
          },
          "domainName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DomainName"
            }, {
              "description" : " The name of the domain. "
            } ]
          },
          "enableAutoSubDomain" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableAutoSubDomain"
            }, {
              "description" : " Enables the automated creation of subdomains for branches. "
            } ]
          },
          "autoSubDomainCreationPatterns" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutoSubDomainCreationPatterns"
            }, {
              "description" : " Sets branch patterns for automatic subdomain creation. "
            } ]
          },
          "autoSubDomainIAMRole" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutoSubDomainIAMRole"
            }, {
              "description" : " The required AWS Identity and Access Management (IAM) service role for the Amazon Resource Name (ARN) for automatically creating subdomains. "
            } ]
          },
          "domainStatus" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DomainStatus"
            }, {
              "description" : " The current status of the domain association. "
            } ]
          },
          "statusReason" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StatusReason"
            }, {
              "description" : " The reason for the current status of the domain association. "
            } ]
          },
          "certificateVerificationDNSRecord" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CertificateVerificationDNSRecord"
            }, {
              "description" : " The DNS record for certificate verification. "
            } ]
          },
          "subDomains" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SubDomains"
            }, {
              "description" : " The subdomains for the domain association. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "domainAssociationArn", "domainName", "enableAutoSubDomain", "domainStatus", "statusReason", "subDomains" ]
      },
      "CreateWebhookRequest" : {
        "description" : " The request structure for the create webhook request. ",
        "properties" : {
          "branchName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BranchName"
            }, {
              "description" : " The name for a branch that is part of an Amplify app. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Description"
            }, {
              "description" : " The description for a webhook. "
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateWebhookRequest",
        "required" : [ "branchName" ]
      },
      "Webhook" : {
        "description" : " Describes a webhook that connects repository events to an Amplify app. ",
        "properties" : {
          "webhookArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WebhookArn"
            }, {
              "description" : " The Amazon Resource Name (ARN) for the webhook. "
            } ]
          },
          "webhookId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WebhookId"
            }, {
              "description" : " The ID of the webhook. "
            } ]
          },
          "webhookUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WebhookUrl"
            }, {
              "description" : " The URL of the webhook. "
            } ]
          },
          "branchName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BranchName"
            }, {
              "description" : " The name for a branch that is part of an Amplify app. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Description"
            }, {
              "description" : " The description for a webhook. "
            } ]
          },
          "createTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateTime"
            }, {
              "description" : " The create date and time for a webhook. "
            } ]
          },
          "updateTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateTime"
            }, {
              "description" : " Updates the date and time for a webhook. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "webhookArn", "webhookId", "webhookUrl", "branchName", "description", "createTime", "updateTime" ]
      },
      "CustomDomain" : {
        "maxLength" : 255,
        "type" : "string"
      },
      "Source" : {
        "maxLength" : 2048,
        "minLength" : 1,
        "type" : "string"
      },
      "Target" : {
        "maxLength" : 2048,
        "minLength" : 1,
        "type" : "string"
      },
      "Status" : {
        "maxLength" : 7,
        "minLength" : 3,
        "type" : "string"
      },
      "DNSRecord" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "DeleteAppRequest" : {
        "description" : " Describes the request structure for the delete app request. ",
        "properties" : { },
        "type" : "object",
        "title" : "DeleteAppRequest"
      },
      "DeleteBackendEnvironmentRequest" : {
        "description" : " The request structure for the delete backend environment request. ",
        "properties" : { },
        "type" : "object",
        "title" : "DeleteBackendEnvironmentRequest"
      },
      "DeleteBranchRequest" : {
        "description" : " The request structure for the delete branch request. ",
        "properties" : { },
        "type" : "object",
        "title" : "DeleteBranchRequest"
      },
      "DeleteDomainAssociationRequest" : {
        "description" : " The request structure for the delete domain association request. ",
        "properties" : { },
        "type" : "object",
        "title" : "DeleteDomainAssociationRequest"
      },
      "DeleteJobRequest" : {
        "description" : " The request structure for the delete job request. ",
        "properties" : { },
        "type" : "object",
        "title" : "DeleteJobRequest"
      },
      "JobSummary" : {
        "description" : " Describes the summary for an execution job for an Amplify app. ",
        "properties" : {
          "jobArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/JobArn"
            }, {
              "description" : " The Amazon Resource Name (ARN) for the job. "
            } ]
          },
          "jobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/JobId"
            }, {
              "description" : " The unique ID for the job. "
            } ]
          },
          "commitId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CommitId"
            }, {
              "description" : " The commit ID from a third-party repository provider for the job. "
            } ]
          },
          "commitMessage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CommitMessage"
            }, {
              "description" : " The commit message from a third-party repository provider for the job. "
            } ]
          },
          "commitTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CommitTime"
            }, {
              "description" : " The commit date and time for the job. "
            } ]
          },
          "startTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StartTime"
            }, {
              "description" : " The start date and time for the job. "
            } ]
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/JobStatus"
            }, {
              "description" : " The current status for the job. "
            } ]
          },
          "endTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EndTime"
            }, {
              "description" : " The end date and time for the job. "
            } ]
          },
          "jobType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/JobType"
            }, {
              "description" : " The type for the job. If the value is <code>RELEASE</code>, the job was manually released from its source by using the <code>StartJob</code> API. If the value is <code>RETRY</code>, the job was manually retried using the <code>StartJob</code> API. If the value is <code>WEB_HOOK</code>, the job was automatically triggered by webhooks. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "jobArn", "jobId", "commitId", "commitMessage", "commitTime", "startTime", "status", "jobType" ]
      },
      "WebhookId" : {
        "maxLength" : 255,
        "type" : "string"
      },
      "DeleteWebhookRequest" : {
        "description" : " The request structure for the delete webhook request. ",
        "properties" : { },
        "type" : "object",
        "title" : "DeleteWebhookRequest"
      },
      "DomainAssociationArn" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "DomainStatus" : {
        "type" : "string",
        "enum" : [ "PENDING_VERIFICATION", "IN_PROGRESS", "AVAILABLE", "PENDING_DEPLOYMENT", "FAILED", "CREATING", "REQUESTING_CERTIFICATE", "UPDATING" ]
      },
      "StatusReason" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "SubDomains" : {
        "maxItems" : 255,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/SubDomain"
        }
      },
      "DomainAssociations" : {
        "maxItems" : 255,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/DomainAssociation"
        }
      },
      "DomainPrefix" : {
        "maxLength" : 255,
        "type" : "string"
      },
      "EndTime" : {
        "format" : "date-time",
        "type" : "string"
      },
      "EnvKey" : {
        "maxLength" : 255,
        "type" : "string"
      },
      "FileName" : {
        "maxLength" : 255,
        "type" : "string"
      },
      "StartTime" : {
        "format" : "date-time",
        "type" : "string"
      },
      "GenerateAccessLogsRequest" : {
        "description" : " The request structure for the generate access logs request. ",
        "properties" : {
          "startTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StartTime"
            }, {
              "description" : " The time at which the logs should start. The time range specified is inclusive of the start time. "
            } ]
          },
          "endTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EndTime"
            }, {
              "description" : " The time at which the logs should end. The time range specified is inclusive of the end time. "
            } ]
          },
          "domainName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DomainName"
            }, {
              "description" : " The name of the domain. "
            } ]
          }
        },
        "type" : "object",
        "title" : "GenerateAccessLogsRequest",
        "required" : [ "domainName" ]
      },
      "LogUrl" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "GetAppRequest" : {
        "description" : " The request structure for the get app request. ",
        "properties" : { },
        "type" : "object",
        "title" : "GetAppRequest"
      },
      "GetArtifactUrlRequest" : {
        "description" : " Returns the request structure for the get artifact request. ",
        "properties" : { },
        "type" : "object",
        "title" : "GetArtifactUrlRequest"
      },
      "GetBackendEnvironmentRequest" : {
        "description" : " The request structure for the get backend environment request. ",
        "properties" : { },
        "type" : "object",
        "title" : "GetBackendEnvironmentRequest"
      },
      "GetBranchRequest" : {
        "description" : " The request structure for the get branch request. ",
        "properties" : { },
        "type" : "object",
        "title" : "GetBranchRequest"
      },
      "GetDomainAssociationRequest" : {
        "description" : " The request structure for the get domain association request. ",
        "properties" : { },
        "type" : "object",
        "title" : "GetDomainAssociationRequest"
      },
      "GetJobRequest" : {
        "description" : " The request structure for the get job request. ",
        "properties" : { },
        "type" : "object",
        "title" : "GetJobRequest"
      },
      "Job" : {
        "description" : " Describes an execution job for an Amplify app. ",
        "properties" : {
          "summary" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/JobSummary"
            }, {
              "description" : " Describes the summary for an execution job for an Amplify app. "
            } ]
          },
          "steps" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Steps"
            }, {
              "description" : " The execution steps for an execution job, for an Amplify app. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "summary", "steps" ]
      },
      "GetWebhookRequest" : {
        "description" : " The request structure for the get webhook request. ",
        "properties" : { },
        "type" : "object",
        "title" : "GetWebhookRequest"
      },
      "Steps" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Step"
        }
      },
      "JobArn" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "JobReason" : {
        "maxLength" : 255,
        "type" : "string"
      },
      "JobStatus" : {
        "type" : "string",
        "enum" : [ "PENDING", "PROVISIONING", "RUNNING", "FAILED", "SUCCEED", "CANCELLING", "CANCELLED" ]
      },
      "JobSummaries" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/JobSummary"
        }
      },
      "JobType" : {
        "maxLength" : 10,
        "type" : "string",
        "enum" : [ "RELEASE", "RETRY", "MANUAL", "WEB_HOOK" ]
      },
      "LastDeployTime" : {
        "format" : "date-time",
        "type" : "string"
      },
      "NextToken" : {
        "maxLength" : 2000,
        "type" : "string"
      },
      "MaxResults" : {
        "maximum" : 100,
        "minimum" : 0,
        "type" : "integer"
      },
      "ListAppsRequest" : {
        "description" : " The request structure for the list apps request. ",
        "properties" : { },
        "type" : "object",
        "title" : "ListAppsRequest"
      },
      "ListArtifactsRequest" : {
        "description" : " Describes the request structure for the list artifacts request. ",
        "properties" : { },
        "type" : "object",
        "title" : "ListArtifactsRequest"
      },
      "ListBackendEnvironmentsRequest" : {
        "description" : " The request structure for the list backend environments request. ",
        "properties" : { },
        "type" : "object",
        "title" : "ListBackendEnvironmentsRequest"
      },
      "ListBranchesRequest" : {
        "description" : " The request structure for the list branches request. ",
        "properties" : { },
        "type" : "object",
        "title" : "ListBranchesRequest"
      },
      "ListDomainAssociationsRequest" : {
        "description" : " The request structure for the list domain associations request. ",
        "properties" : { },
        "type" : "object",
        "title" : "ListDomainAssociationsRequest"
      },
      "ListJobsRequest" : {
        "description" : " The request structure for the list jobs request. ",
        "properties" : { },
        "type" : "object",
        "title" : "ListJobsRequest"
      },
      "ResourceArn" : {
        "pattern" : "^arn:aws:amplify:.*",
        "type" : "string"
      },
      "ListTagsForResourceRequest" : {
        "description" : " The request structure to use to list tags for a resource. ",
        "properties" : { },
        "type" : "object",
        "title" : "ListTagsForResourceRequest"
      },
      "ListWebhooksRequest" : {
        "description" : " The request structure for the list webhooks request. ",
        "properties" : { },
        "type" : "object",
        "title" : "ListWebhooksRequest"
      },
      "Webhooks" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Webhook"
        }
      },
      "Screenshots" : {
        "type" : "object",
        "additionalProperties" : {
          "$ref" : "#/components/schemas/ThumbnailUrl"
        }
      },
      "SourceUrl" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "StartDeploymentRequest" : {
        "description" : " The request structure for the start a deployment request. ",
        "properties" : {
          "jobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/JobId"
            }, {
              "description" : " The job ID for this deployment, generated by the create deployment request. "
            } ]
          },
          "sourceUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SourceUrl"
            }, {
              "description" : " The source URL for this deployment, used when calling start deployment without create deployment. The source URL can be any HTTP GET URL that is publicly accessible and downloads a single .zip file. "
            } ]
          }
        },
        "type" : "object",
        "title" : "StartDeploymentRequest"
      },
      "StartJobRequest" : {
        "description" : " The request structure for the start job request. ",
        "properties" : {
          "jobId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/JobId"
            }, {
              "description" : " The unique ID for an existing job. This is required if the value of <code>jobType</code> is <code>RETRY</code>. "
            } ]
          },
          "jobType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/JobType"
            }, {
              "description" : " Describes the type for the job. The job type <code>RELEASE</code> starts a new job with the latest change from the specified branch. This value is available only for apps that are connected to a repository. The job type <code>RETRY</code> retries an existing job. If the job type value is <code>RETRY</code>, the <code>jobId</code> is also required. "
            } ]
          },
          "jobReason" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/JobReason"
            }, {
              "description" : " A descriptive reason for starting this job. "
            } ]
          },
          "commitId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CommitId"
            }, {
              "description" : " The commit ID from a third-party repository provider for the job. "
            } ]
          },
          "commitMessage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CommitMessage"
            }, {
              "description" : " The commit message from a third-party repository provider for the job. "
            } ]
          },
          "commitTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CommitTime"
            }, {
              "description" : " The commit date and time for the job. "
            } ]
          }
        },
        "type" : "object",
        "title" : "StartJobRequest",
        "required" : [ "jobType" ]
      },
      "StepName" : {
        "maxLength" : 255,
        "type" : "string"
      },
      "TestArtifactsUrl" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "TestConfigUrl" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "Step" : {
        "description" : " Describes an execution step, for an execution job, for an Amplify app. ",
        "properties" : {
          "stepName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StepName"
            }, {
              "description" : " The name of the execution step. "
            } ]
          },
          "startTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StartTime"
            }, {
              "description" : " The start date and time of the execution step. "
            } ]
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/JobStatus"
            }, {
              "description" : " The status of the execution step. "
            } ]
          },
          "endTime" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EndTime"
            }, {
              "description" : " The end date and time of the execution step. "
            } ]
          },
          "logUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/LogUrl"
            }, {
              "description" : " The URL to the logs for the execution step. "
            } ]
          },
          "artifactsUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ArtifactsUrl"
            }, {
              "description" : " The URL to the artifact for the execution step. "
            } ]
          },
          "testArtifactsUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TestArtifactsUrl"
            }, {
              "description" : " The URL to the test artifact for the execution step. "
            } ]
          },
          "testConfigUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TestConfigUrl"
            }, {
              "description" : " The URL to the test configuration for the execution step. "
            } ]
          },
          "screenshots" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Screenshots"
            }, {
              "description" : " The list of screenshot URLs for the execution step, if relevant. "
            } ]
          },
          "statusReason" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StatusReason"
            }, {
              "description" : " The reason for the current step status. "
            } ]
          },
          "context" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Context"
            }, {
              "description" : " The context for the current step. Includes a build image if the step is build. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "stepName", "startTime", "status", "endTime" ]
      },
      "StopJobRequest" : {
        "description" : " The request structure for the stop job request. ",
        "properties" : { },
        "type" : "object",
        "title" : "StopJobRequest"
      },
      "Verified" : {
        "type" : "boolean"
      },
      "SubDomain" : {
        "description" : " The subdomain for the domain association. ",
        "properties" : {
          "subDomainSetting" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SubDomainSetting"
            }, {
              "description" : " Describes the settings for the subdomain. "
            } ]
          },
          "verified" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Verified"
            }, {
              "description" : " The verified status of the subdomain "
            } ]
          },
          "dnsRecord" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DNSRecord"
            }, {
              "description" : " The DNS record for the subdomain. "
            } ]
          }
        },
        "type" : "object",
        "required" : [ "subDomainSetting", "verified", "dnsRecord" ]
      },
      "TagKeyList" : {
        "maxItems" : 50,
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/TagKey"
        }
      },
      "TagResourceRequest" : {
        "description" : " The request structure to tag a resource with a tag key and value. ",
        "properties" : {
          "tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagMap"
            }, {
              "description" : " The tags used to tag the resource. "
            } ]
          }
        },
        "type" : "object",
        "title" : "TagResourceRequest",
        "required" : [ "tags" ]
      },
      "ThumbnailName" : {
        "maxLength" : 256,
        "type" : "string"
      },
      "UntagResourceRequest" : {
        "description" : " The request structure for the untag resource request. ",
        "properties" : { },
        "type" : "object",
        "title" : "UntagResourceRequest"
      },
      "UpdateAppRequest" : {
        "description" : " The request structure for the update app request. ",
        "properties" : {
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Name"
            }, {
              "description" : " The name for an Amplify app. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Description"
            }, {
              "description" : " The description for an Amplify app. "
            } ]
          },
          "platform" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Platform"
            }, {
              "description" : " The platform for an Amplify app. "
            } ]
          },
          "iamServiceRoleArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ServiceRoleArn"
            }, {
              "description" : " The AWS Identity and Access Management (IAM) service role for an Amplify app. "
            } ]
          },
          "environmentVariables" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnvironmentVariables"
            }, {
              "description" : " The environment variables for an Amplify app. "
            } ]
          },
          "enableBranchAutoBuild" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableAutoBuild"
            }, {
              "description" : " Enables branch auto-building for an Amplify app. "
            } ]
          },
          "enableBranchAutoDeletion" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableBranchAutoDeletion"
            }, {
              "description" : " Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository. "
            } ]
          },
          "enableBasicAuth" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableBasicAuth"
            }, {
              "description" : " Enables basic authorization for an Amplify app. "
            } ]
          },
          "basicAuthCredentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BasicAuthCredentials"
            }, {
              "description" : " The basic authorization credentials for an Amplify app. "
            } ]
          },
          "customRules" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CustomRules"
            }, {
              "description" : " The custom redirect and rewrite rules for an Amplify app. "
            } ]
          },
          "buildSpec" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BuildSpec"
            }, {
              "description" : " The build specification (build spec) for an Amplify app. "
            } ]
          },
          "customHeaders" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CustomHeaders"
            }, {
              "description" : "The custom HTTP headers for an Amplify app."
            } ]
          },
          "enableAutoBranchCreation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableAutoBranchCreation"
            }, {
              "description" : " Enables automated branch creation for an Amplify app. "
            } ]
          },
          "autoBranchCreationPatterns" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutoBranchCreationPatterns"
            }, {
              "description" : " Describes the automated branch creation glob patterns for an Amplify app. "
            } ]
          },
          "autoBranchCreationConfig" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutoBranchCreationConfig"
            }, {
              "description" : " The automated branch creation configuration for an Amplify app. "
            } ]
          },
          "repository" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Repository"
            }, {
              "description" : " The name of the repository for an Amplify app "
            } ]
          },
          "oauthToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OauthToken"
            }, {
              "description" : " The OAuth token for a third-party source control system for an Amplify app. The token is used to create a webhook and a read-only deploy key. The OAuth token is not stored. "
            } ]
          },
          "accessToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccessToken"
            }, {
              "description" : " The personal access token for a third-party source control system for an Amplify app. The token is used to create webhook and a read-only deploy key. The token is not stored. "
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateAppRequest"
      },
      "UpdateBranchRequest" : {
        "description" : " The request structure for the update branch request. ",
        "properties" : {
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Description"
            }, {
              "description" : " The description for the branch. "
            } ]
          },
          "framework" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Framework"
            }, {
              "description" : " The framework for the branch. "
            } ]
          },
          "stage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Stage"
            }, {
              "description" : " Describes the current stage for the branch. "
            } ]
          },
          "enableNotification" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableNotification"
            }, {
              "description" : " Enables notifications for the branch. "
            } ]
          },
          "enableAutoBuild" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableAutoBuild"
            }, {
              "description" : " Enables auto building for the branch. "
            } ]
          },
          "environmentVariables" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnvironmentVariables"
            }, {
              "description" : " The environment variables for the branch. "
            } ]
          },
          "basicAuthCredentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BasicAuthCredentials"
            }, {
              "description" : " The basic authorization credentials for the branch. "
            } ]
          },
          "enableBasicAuth" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableBasicAuth"
            }, {
              "description" : " Enables basic authorization for the branch. "
            } ]
          },
          "enablePerformanceMode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnablePerformanceMode"
            }, {
              "description" : "<p>Enables performance mode for the branch.</p> <p>Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out. </p>"
            } ]
          },
          "buildSpec" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BuildSpec"
            }, {
              "description" : " The build specification (build spec) for the branch. "
            } ]
          },
          "ttl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TTL"
            }, {
              "description" : " The content Time to Live (TTL) for the website in seconds. "
            } ]
          },
          "displayName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DisplayName"
            }, {
              "description" : " The display name for a branch. This is used as the default domain prefix. "
            } ]
          },
          "enablePullRequestPreview" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnablePullRequestPreview"
            }, {
              "description" : " Enables pull request previews for this branch. "
            } ]
          },
          "pullRequestEnvironmentName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PullRequestEnvironmentName"
            }, {
              "description" : " The Amplify environment name for the pull request. "
            } ]
          },
          "backendEnvironmentArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BackendEnvironmentArn"
            }, {
              "description" : " The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify app. "
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateBranchRequest"
      },
      "UpdateDomainAssociationRequest" : {
        "description" : " The request structure for the update domain association request. ",
        "properties" : {
          "enableAutoSubDomain" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnableAutoSubDomain"
            }, {
              "description" : " Enables the automated creation of subdomains for branches. "
            } ]
          },
          "subDomainSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SubDomainSettings"
            }, {
              "description" : " Describes the settings for the subdomain. "
            } ]
          },
          "autoSubDomainCreationPatterns" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutoSubDomainCreationPatterns"
            }, {
              "description" : " Sets the branch patterns for automatic subdomain creation. "
            } ]
          },
          "autoSubDomainIAMRole" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutoSubDomainIAMRole"
            }, {
              "description" : " The required AWS Identity and Access Management (IAM) service role for the Amazon Resource Name (ARN) for automatically creating subdomains. "
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateDomainAssociationRequest",
        "required" : [ "subDomainSettings" ]
      },
      "UpdateWebhookRequest" : {
        "description" : " The request structure for the update webhook request. ",
        "properties" : {
          "branchName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BranchName"
            }, {
              "description" : " The name for a branch that is part of an Amplify app. "
            } ]
          },
          "description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Description"
            }, {
              "description" : " The description for a webhook. "
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateWebhookRequest"
      },
      "WebhookArn" : {
        "maxLength" : 1000,
        "type" : "string"
      },
      "WebhookUrl" : {
        "maxLength" : 1000,
        "type" : "string"
      }
    },
    "securitySchemes" : {
      "hmac" : {
        "type" : "apiKey",
        "description" : "Amazon Signature authorization v4",
        "name" : "Authorization",
        "in" : "header",
        "x-amazon-apigateway-authtype" : "awsSigv4"
      }
    }
  },
  "externalDocs" : {
    "description" : "Amazon Web Services documentation",
    "url" : "https://docs.aws.amazon.com/amplify/"
  },
  "security" : [ {
    "hmac" : [ ]
  } ],
  "x-hasEquivalentPaths" : true
}