{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "mike.ralphson@gmail.com",
      "name" : "Mike Ralphson",
      "url" : "https://github.com/mermade/aws2openapi",
      "x-twitter" : "PermittedSoc"
    },
    "description" : "<p>Contact Lens for Amazon Connect enables you to analyze conversations between customer and agents, by using speech transcription, natural language processing, and intelligent search capabilities. It performs sentiment analysis, detects issues, and enables you to automatically categorize contacts.</p> <p>Contact Lens for Amazon Connect provides both real-time and post-call analytics of customer-agent conversations. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/analyze-conversations.html\">Analyze conversations using Contact Lens</a> in the <i>Amazon Connect Administrator Guide</i>. </p>",
    "license" : {
      "name" : "Apache 2.0 License",
      "url" : "http://www.apache.org/licenses/"
    },
    "termsOfService" : "https://aws.amazon.com/service-terms/",
    "title" : "Amazon Connect Contact Lens",
    "version" : "2020-08-21",
    "x-providerName" : "amazonaws.com",
    "x-logo" : {
      "url" : "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png",
      "backgroundColor" : "#FFFFFF"
    },
    "x-aws-signingName" : "connect",
    "x-apiClientRegistration" : {
      "url" : "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-preferred" : true,
    "x-release" : "v4",
    "x-apisguru-categories" : [ "cloud" ],
    "x-serviceName" : "connect-contact-lens",
    "x-origin" : [ {
      "contentType" : "application/json",
      "url" : "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/connect-contact-lens-2020-08-21.normal.json",
      "converter" : {
        "url" : "https://github.com/mermade/aws2openapi",
        "version" : "1.0.0"
      },
      "x-apisguru-driver" : "external"
    } ]
  },
  "servers" : [ {
    "url" : "http://contact-lens.{region}.amazonaws.com",
    "description" : "The Amazon Connect Contact Lens multi-region endpoint",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "us-east-1",
        "enum" : [ "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-west-1", "us-gov-east-1", "ca-central-1", "eu-north-1", "eu-west-1", "eu-west-2", "eu-west-3", "eu-central-1", "eu-south-1", "af-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ap-east-1", "ap-south-1", "sa-east-1", "me-south-1" ]
      }
    }
  }, {
    "url" : "https://contact-lens.{region}.amazonaws.com",
    "description" : "The Amazon Connect Contact Lens multi-region endpoint",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "us-east-1",
        "enum" : [ "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-west-1", "us-gov-east-1", "ca-central-1", "eu-north-1", "eu-west-1", "eu-west-2", "eu-west-3", "eu-central-1", "eu-south-1", "af-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ap-east-1", "ap-south-1", "sa-east-1", "me-south-1" ]
      }
    }
  }, {
    "url" : "http://contact-lens.{region}.amazonaws.com.cn",
    "description" : "The Amazon Connect Contact Lens endpoint for China (Beijing) and China (Ningxia)",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "cn-north-1",
        "enum" : [ "cn-north-1", "cn-northwest-1" ]
      }
    }
  }, {
    "url" : "https://contact-lens.{region}.amazonaws.com.cn",
    "description" : "The Amazon Connect Contact Lens endpoint for China (Beijing) and China (Ningxia)",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "cn-north-1",
        "enum" : [ "cn-north-1", "cn-northwest-1" ]
      }
    }
  } ],
  "paths" : {
    "/realtime-contact-analysis/analysis-segments" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Provides a list of analysis segments for a real-time analysis session.",
        "operationId" : "ListRealtimeContactAnalysisSegments",
        "parameters" : [ {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "NextToken" : {
                    "description" : "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
                    "maxLength" : 131070,
                    "minLength" : 1,
                    "pattern" : ".*\\S.*",
                    "type" : "string"
                  },
                  "InstanceId" : {
                    "description" : "The identifier of the Amazon Connect instance.",
                    "maxLength" : 256,
                    "minLength" : 1,
                    "pattern" : ".*\\S.*",
                    "type" : "string"
                  },
                  "MaxResults" : {
                    "description" : "The maximimum number of results to return per page.",
                    "maximum" : 100,
                    "minimum" : 1,
                    "type" : "integer"
                  },
                  "ContactId" : {
                    "description" : "The identifier of the contact.",
                    "maxLength" : 256,
                    "minLength" : 1,
                    "pattern" : ".*\\S.*",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "InstanceId", "ContactId" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListRealtimeContactAnalysisSegmentsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "InvalidRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvalidRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServiceException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServiceException"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "parameters" : {
      "X-Amz-Date" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Date"
      },
      "X-Amz-Algorithm" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Algorithm"
      },
      "X-Amz-Signature" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-SignedHeaders"
      },
      "X-Amz-Security-Token" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Security-Token"
      },
      "X-Amz-Credential" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Credential"
      },
      "X-Amz-Content-Sha256" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Content-Sha256"
      }
    },
    "schemas" : {
      "AccessDeniedException" : { },
      "TranscriptId" : {
        "maxLength" : 256,
        "minLength" : 1,
        "pattern" : ".*\\S.*",
        "type" : "string"
      },
      "PointsOfInterest" : {
        "maxItems" : 20,
        "minItems" : 0,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/PointOfInterest"
        }
      },
      "CategoryDetails" : {
        "description" : "Provides information about the category rule that was matched.",
        "properties" : {
          "PointsOfInterest" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PointsOfInterest"
            }, {
              "description" : "The section of audio where the category rule was detected."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "PointsOfInterest" ]
      },
      "NextToken" : {
        "maxLength" : 131070,
        "minLength" : 1,
        "pattern" : ".*\\S.*",
        "type" : "string"
      },
      "RealtimeContactAnalysisSegment" : {
        "description" : "An analyzed segment for a real-time analysis session.",
        "properties" : {
          "Transcript" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Transcript"
            }, {
              "description" : "The analyzed transcript."
            } ]
          },
          "Categories" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Categories"
            }, {
              "description" : "The matched category rules."
            } ]
          }
        },
        "type" : "object"
      },
      "IssuesDetected" : {
        "maxItems" : 20,
        "minItems" : 0,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/IssueDetected"
        }
      },
      "PointOfInterest" : {
        "description" : "The section of the contact audio where that category rule was detected.",
        "properties" : {
          "BeginOffsetMillis" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OffsetMillis"
            }, {
              "description" : "The beginning offset in milliseconds where the category rule was detected."
            } ]
          },
          "EndOffsetMillis" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OffsetMillis"
            }, {
              "description" : "The ending offset in milliseconds where the category rule was detected."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "BeginOffsetMillis", "EndOffsetMillis" ]
      },
      "ContactId" : {
        "maxLength" : 256,
        "minLength" : 1,
        "pattern" : ".*\\S.*",
        "type" : "string"
      },
      "MatchedCategories" : {
        "maxItems" : 150,
        "minItems" : 0,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CategoryName"
        }
      },
      "ListRealtimeContactAnalysisSegmentsResponse" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : "<p>If there are additional results, this is the token for the next set of results. If response includes <code>nextToken</code> there are two possible scenarios:</p> <ul> <li> <p>There are more segments so another call is required to get them.</p> </li> <li> <p>There are no more segments at this time, but more may be available later (real-time analysis is in progress) so the client should call the operation again to get new segments.</p> </li> </ul> <p>If response does not include <code>nextToken</code>, the analysis is completed (successfully or failed) and there are no more segments to retrieve.</p>"
            } ]
          },
          "Segments" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RealtimeContactAnalysisSegments"
            }, {
              "description" : "An analyzed transcript or category."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "Segments" ]
      },
      "ParticipantId" : {
        "maxLength" : 256,
        "minLength" : 1,
        "pattern" : ".*\\S.*",
        "type" : "string"
      },
      "SentimentValue" : {
        "type" : "string",
        "enum" : [ "POSITIVE", "NEUTRAL", "NEGATIVE" ]
      },
      "TranscriptContent" : {
        "minLength" : 1,
        "pattern" : ".*\\S.*",
        "type" : "string"
      },
      "IssueDetected" : {
        "description" : "Potential issues that are detected based on an artificial intelligence analysis of each turn in the conversation.",
        "properties" : {
          "CharacterOffsets" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CharacterOffsets"
            }, {
              "description" : "The offset for when the issue was detected in the segment."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "CharacterOffsets" ]
      },
      "CharacterOffsets" : {
        "description" : "For characters that were detected as issues, where they occur in the transcript.",
        "properties" : {
          "BeginOffsetChar" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CharacterOffset"
            }, {
              "description" : "The beginning of the issue."
            } ]
          },
          "EndOffsetChar" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CharacterOffset"
            }, {
              "description" : "The end of the issue."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "BeginOffsetChar", "EndOffsetChar" ]
      },
      "InvalidRequestException" : { },
      "ResourceNotFoundException" : { },
      "ParticipantRole" : {
        "maxLength" : 256,
        "minLength" : 1,
        "pattern" : ".*\\S.*",
        "type" : "string"
      },
      "Transcript" : {
        "description" : "A list of messages in the session.",
        "properties" : {
          "ParticipantId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ParticipantId"
            }, {
              "description" : "The identifier of the participant."
            } ]
          },
          "Content" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TranscriptContent"
            }, {
              "description" : "The content of the transcript."
            } ]
          },
          "IssuesDetected" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/IssuesDetected"
            }, {
              "description" : "List of positions where issues were detected on the transcript."
            } ]
          },
          "Id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TranscriptId"
            }, {
              "description" : "The identifier of the transcript."
            } ]
          },
          "BeginOffsetMillis" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OffsetMillis"
            }, {
              "description" : "The beginning offset in the contact for this transcript."
            } ]
          },
          "EndOffsetMillis" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OffsetMillis"
            }, {
              "description" : "The end offset in the contact for this transcript."
            } ]
          },
          "Sentiment" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SentimentValue"
            }, {
              "description" : "The sentiment of the detected for this piece of transcript."
            } ]
          },
          "ParticipantRole" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ParticipantRole"
            }, {
              "description" : "The role of participant. For example, is it a customer, agent, or system."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "Id", "ParticipantId", "ParticipantRole", "Content", "BeginOffsetMillis", "EndOffsetMillis", "Sentiment" ]
      },
      "OffsetMillis" : {
        "minimum" : 0,
        "type" : "integer"
      },
      "ListRealtimeContactAnalysisSegmentsRequest" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results."
            } ]
          },
          "InstanceId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/InstanceId"
            }, {
              "description" : "The identifier of the Amazon Connect instance."
            } ]
          },
          "MaxResults" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MaxResults"
            }, {
              "description" : "The maximimum number of results to return per page."
            } ]
          },
          "ContactId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ContactId"
            }, {
              "description" : "The identifier of the contact."
            } ]
          }
        },
        "type" : "object",
        "title" : "ListRealtimeContactAnalysisSegmentsRequest",
        "required" : [ "InstanceId", "ContactId" ]
      },
      "Categories" : {
        "description" : "Provides the category rules that are used to automatically categorize contacts based on uttered keywords and phrases.",
        "properties" : {
          "MatchedDetails" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MatchedDetails"
            }, {
              "description" : "The category rule that was matched and when it occurred in the transcript."
            } ]
          },
          "MatchedCategories" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MatchedCategories"
            }, {
              "description" : "The category rules that have been matched in the analyzed segment."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "MatchedCategories", "MatchedDetails" ]
      },
      "InstanceId" : {
        "maxLength" : 256,
        "minLength" : 1,
        "pattern" : ".*\\S.*",
        "type" : "string"
      },
      "MaxResults" : {
        "maximum" : 100,
        "minimum" : 1,
        "type" : "integer"
      },
      "CharacterOffset" : {
        "minimum" : 0,
        "type" : "integer"
      },
      "InternalServiceException" : { },
      "RealtimeContactAnalysisSegments" : {
        "maxItems" : 100,
        "minItems" : 0,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/RealtimeContactAnalysisSegment"
        }
      },
      "MatchedDetails" : {
        "maxProperties" : 150,
        "minProperties" : 0,
        "type" : "object",
        "additionalProperties" : {
          "$ref" : "#/components/schemas/CategoryDetails"
        }
      },
      "CategoryName" : {
        "maxLength" : 256,
        "minLength" : 1,
        "pattern" : ".*\\S.*",
        "type" : "string"
      },
      "ThrottlingException" : { }
    },
    "securitySchemes" : {
      "hmac" : {
        "type" : "apiKey",
        "description" : "Amazon Signature authorization v4",
        "name" : "Authorization",
        "in" : "header",
        "x-amazon-apigateway-authtype" : "awsSigv4"
      }
    }
  },
  "externalDocs" : {
    "description" : "Amazon Web Services documentation",
    "url" : "https://docs.aws.amazon.com/contact-lens/"
  },
  "security" : [ {
    "hmac" : [ ]
  } ]
}