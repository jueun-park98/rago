{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "mike.ralphson@gmail.com",
      "name" : "Mike Ralphson",
      "url" : "https://github.com/mermade/aws2openapi",
      "x-twitter" : "PermittedSoc"
    },
    "description" : "<p>The Amazon Chime API (application programming interface) is designed for developers to perform key tasks, such as creating and managing Amazon Chime accounts, users, and Voice Connectors. This guide provides detailed information about the Amazon Chime API, including operations, types, inputs and outputs, and error codes. It also includes some server-side API actions to use with the Amazon Chime SDK. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\"> Using the Amazon Chime SDK </a> in the <i>Amazon Chime Developer Guide</i>.</p> <p>You can use an AWS SDK, the AWS Command Line Interface (AWS CLI), or the REST API to make API calls. We recommend using an AWS SDK or the AWS CLI. Each API operation includes links to information about using it with a language-specific AWS SDK or the AWS CLI.</p> <dl> <dt>Using an AWS SDK</dt> <dd> <p> You don't need to write code to calculate a signature for request authentication. The SDK clients authenticate your requests by using access keys that you provide. For more information about AWS SDKs, see the <a href=\"http://aws.amazon.com/developer/\">AWS Developer Center</a>. </p> </dd> <dt>Using the AWS CLI</dt> <dd> <p>Use your access keys with the AWS CLI to make API calls. For information about setting up the AWS CLI, see <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/installing.html\">Installing the AWS Command Line Interface</a> in the <i>AWS Command Line Interface User Guide</i>. For a list of available Amazon Chime commands, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/chime/index.html\">Amazon Chime commands</a> in the <i>AWS CLI Command Reference</i>. </p> </dd> <dt>Using REST APIs</dt> <dd> <p>If you use REST to make API calls, you must authenticate your request by providing a signature. Amazon Chime supports signature version 4. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>When making REST API calls, use the service name <code>chime</code> and REST endpoint <code>https://service.chime.aws.amazon.com</code>.</p> </dd> </dl> <p>Administrative permissions are controlled using AWS Identity and Access Management (IAM). For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/security-iam.html\">Identity and Access Management for Amazon Chime</a> in the <i>Amazon Chime Administration Guide</i>.</p>",
    "license" : {
      "name" : "Apache 2.0 License",
      "url" : "http://www.apache.org/licenses/"
    },
    "termsOfService" : "https://aws.amazon.com/service-terms/",
    "title" : "Amazon Chime",
    "version" : "2018-05-01",
    "x-providerName" : "amazonaws.com",
    "x-logo" : {
      "url" : "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png",
      "backgroundColor" : "#FFFFFF"
    },
    "x-apiClientRegistration" : {
      "url" : "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-preferred" : true,
    "x-release" : "v4",
    "x-apisguru-categories" : [ "cloud" ],
    "x-serviceName" : "chime",
    "x-origin" : [ {
      "contentType" : "application/json",
      "url" : "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/chime-2018-05-01.normal.json",
      "converter" : {
        "url" : "https://github.com/mermade/aws2openapi",
        "version" : "1.0.0"
      },
      "x-apisguru-driver" : "external"
    } ]
  },
  "servers" : [ {
    "url" : "http://service.chime.aws.amazon.com",
    "description" : "The general Amazon Chime multi-region endpoint"
  }, {
    "url" : "https://service.chime.aws.amazon.com",
    "description" : "The general Amazon Chime multi-region endpoint"
  }, {
    "url" : "http://chime.{region}.amazonaws.com.cn",
    "description" : "The Amazon Chime endpoint for China (Beijing) and China (Ningxia)",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "cn-north-1",
        "enum" : [ "cn-north-1", "cn-northwest-1" ]
      }
    }
  }, {
    "url" : "https://chime.{region}.amazonaws.com.cn",
    "description" : "The Amazon Chime endpoint for China (Beijing) and China (Ningxia)",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "cn-north-1",
        "enum" : [ "cn-north-1", "cn-northwest-1" ]
      }
    }
  } ],
  "paths" : {
    "/voice-connectors/{voiceConnectorId}/streaming-configuration" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Retrieves the streaming configuration details for the specified Amazon Chime Voice Connector. Shows whether media streaming is enabled for sending to Amazon Kinesis. It also shows the retention period, in hours, for the Amazon Kinesis data.",
        "operationId" : "GetVoiceConnectorStreamingConfiguration",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetVoiceConnectorStreamingConfigurationResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Adds a streaming configuration for the specified Amazon Chime Voice Connector. The streaming configuration specifies whether media streaming is enabled for sending to Indonesians. It also sets the retention period, in hours, for the Amazon Kinesis data.",
        "operationId" : "PutVoiceConnectorStreamingConfiguration",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "StreamingConfiguration" : {
                    "description" : "The streaming configuration associated with an Amazon Chime Voice Connector. Specifies whether media streaming is enabled for sending to Amazon Kinesis, and shows the retention period for the Amazon Kinesis data, in hours.",
                    "properties" : {
                      "Disabled" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Boolean"
                        }, {
                          "description" : "When true, media streaming to Amazon Kinesis is turned off."
                        } ]
                      },
                      "StreamingNotificationTargets" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/StreamingNotificationTargetList"
                        }, {
                          "description" : "The streaming notification targets."
                        } ]
                      },
                      "DataRetentionInHours" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/DataRetentionInHours"
                        }, {
                          "description" : "The retention period, in hours, for the Amazon Kinesis data."
                        } ]
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object",
                "required" : [ "StreamingConfiguration" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PutVoiceConnectorStreamingConfigurationResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes the streaming configuration for the specified Amazon Chime Voice Connector.",
        "operationId" : "DeleteVoiceConnectorStreamingConfiguration",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/users#operation=add" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Sends email to a maximum of 50 users, inviting them to the specified Amazon Chime <code>Team</code> account. Only <code>Team</code> account types are currently supported for this action.",
        "operationId" : "InviteUsers",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "add" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "UserEmailList" : {
                    "description" : "The user email addresses to which to send the email invitation.",
                    "maxItems" : 50,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/EmailAddress"
                    }
                  },
                  "UserType" : {
                    "description" : "The user type.",
                    "type" : "string",
                    "enum" : [ "PrivateUser", "SharedDevice" ]
                  }
                },
                "type" : "object",
                "required" : [ "UserEmailList" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InviteUsersResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/media-capture-pipelines" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Returns a list of media capture pipelines.",
        "operationId" : "ListMediaCapturePipelines",
        "parameters" : [ {
          "description" : "The token used to retrieve the next page of results.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "The maximum number of results to return in a single call. Valid Range: 1 - 99.",
          "required" : false,
          "schema" : {
            "maximum" : 99,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListMediaCapturePipelinesResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a media capture pipeline.",
        "operationId" : "CreateMediaCapturePipeline",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "ClientRequestToken" : {
                    "description" : "The token assigned to the client making the pipeline request.",
                    "format" : "password",
                    "maxLength" : 64,
                    "minLength" : 2,
                    "pattern" : "[-_a-zA-Z0-9]*",
                    "type" : "string"
                  },
                  "SourceArn" : {
                    "description" : "ARN of the source from which the media artifacts are captured.",
                    "format" : "password",
                    "maxLength" : 1024,
                    "minLength" : 1,
                    "pattern" : "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
                    "type" : "string"
                  },
                  "SourceType" : {
                    "description" : "Source type from which the media artifacts will be captured. A Chime SDK Meeting is the only supported source.",
                    "type" : "string",
                    "enum" : [ "ChimeSdkMeeting" ]
                  },
                  "SinkArn" : {
                    "description" : "The ARN of the sink type.",
                    "format" : "password",
                    "maxLength" : 1024,
                    "minLength" : 1,
                    "pattern" : "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
                    "type" : "string"
                  },
                  "SinkType" : {
                    "description" : "Destination type to which the media artifacts are saved. You must use an S3 bucket. ",
                    "type" : "string",
                    "enum" : [ "S3Bucket" ]
                  }
                },
                "type" : "object",
                "required" : [ "SourceType", "SourceArn", "SinkType", "SinkArn" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateMediaCapturePipelineResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      }
    },
    "/voice-connectors/{voiceConnectorId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Retrieves details for the specified Amazon Chime Voice Connector, such as timestamps,name, outbound host, and encryption requirements.",
        "operationId" : "GetVoiceConnector",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetVoiceConnectorResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates details for the specified Amazon Chime Voice Connector.",
        "operationId" : "UpdateVoiceConnector",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "RequireEncryption" : {
                    "description" : "When enabled, requires encryption for the Amazon Chime Voice Connector.",
                    "type" : "boolean"
                  },
                  "Name" : {
                    "description" : "The name of the Amazon Chime Voice Connector.",
                    "maxLength" : 256,
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "Name", "RequireEncryption" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateVoiceConnectorResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes the specified Amazon Chime Voice Connector. Any phone numbers associated with the Amazon Chime Voice Connector must be disassociated from it before it can be deleted.",
        "operationId" : "DeleteVoiceConnector",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/users/{userId}#operation=disassociate-phone-number" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Disassociates the primary provisioned phone number from the specified Amazon Chime user.",
        "operationId" : "DisassociatePhoneNumberFromUser",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The user ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "userId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "disassociate-phone-number" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DisassociatePhoneNumberFromUserResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/attendees#operation=batch-create" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : " Creates up to 100 new attendees for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>. ",
        "operationId" : "BatchCreateAttendee",
        "parameters" : [ {
          "description" : "The Amazon Chime SDK meeting ID.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "meetingId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "batch-create" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Attendees" : {
                    "description" : "The request containing the attendees to create.",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/CreateAttendeeRequestItem"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "Attendees" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchCreateAttendeeResponse"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          }
        }
      }
    },
    "/channels" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "<p>Creates a channel to which you can add users and send messages.</p> <p> <b>Restriction</b>: You can't change a channel's privacy.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "CreateChannel",
        "parameters" : [ {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Privacy" : {
                    "description" : "The channel's privacy level: <code>PUBLIC</code> or <code>PRIVATE</code>. Private channels aren't discoverable by users outside the channel. Public channels are discoverable by anyone in the <code>AppInstance</code>.",
                    "type" : "string",
                    "enum" : [ "PUBLIC", "PRIVATE" ]
                  },
                  "ClientRequestToken" : {
                    "description" : "The client token for the request. An <code>Idempotency</code> token.",
                    "format" : "password",
                    "maxLength" : 64,
                    "minLength" : 2,
                    "pattern" : "[-_a-zA-Z0-9]*",
                    "type" : "string"
                  },
                  "Mode" : {
                    "description" : "The channel mode: <code>UNRESTRICTED</code> or <code>RESTRICTED</code>. Administrators, moderators, and channel members can add themselves and other members to unrestricted channels. Only administrators and moderators can add members to restricted channels.",
                    "type" : "string",
                    "enum" : [ "UNRESTRICTED", "RESTRICTED" ]
                  },
                  "Metadata" : {
                    "description" : "The metadata of the creation request. Limited to 1KB and UTF-8.",
                    "format" : "password",
                    "maxLength" : 1024,
                    "minLength" : 0,
                    "pattern" : ".*",
                    "type" : "string"
                  },
                  "AppInstanceArn" : {
                    "description" : "The ARN of the channel request.",
                    "maxLength" : 1600,
                    "minLength" : 5,
                    "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                    "type" : "string"
                  },
                  "Tags" : {
                    "description" : "The tags for the creation request.",
                    "maxItems" : 50,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Tag"
                    }
                  },
                  "Name" : {
                    "description" : "The name of the channel.",
                    "format" : "password",
                    "maxLength" : 256,
                    "minLength" : 1,
                    "pattern" : "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "AppInstanceArn", "Name", "ClientRequestToken" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateChannelResponse"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          }
        }
      }
    },
    "/voice-connectors/{voiceConnectorId}/programmable-numbers/proxy" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Gets the proxy configuration details for the specified Amazon Chime Voice Connector.",
        "operationId" : "GetVoiceConnectorProxy",
        "parameters" : [ {
          "description" : "The Amazon Chime voice connector ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetVoiceConnectorProxyResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Puts the specified proxy configuration to the specified Amazon Chime Voice Connector.",
        "operationId" : "PutVoiceConnectorProxy",
        "parameters" : [ {
          "description" : "The Amazon Chime voice connector ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "FallBackPhoneNumber" : {
                    "description" : "The phone number to route calls to after a proxy session expires.",
                    "format" : "password",
                    "pattern" : "^\\+?[1-9]\\d{1,14}$",
                    "type" : "string"
                  },
                  "PhoneNumberPoolCountries" : {
                    "description" : "The countries for proxy phone numbers to be selected from.",
                    "maxItems" : 100,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Country"
                    }
                  },
                  "Disabled" : {
                    "description" : "When true, stops proxy sessions from being created on the specified Amazon Chime Voice Connector.",
                    "type" : "boolean"
                  },
                  "DefaultSessionExpiryMinutes" : {
                    "description" : "The default number of minutes allowed for proxy sessions.",
                    "type" : "integer"
                  }
                },
                "type" : "object",
                "required" : [ "DefaultSessionExpiryMinutes", "PhoneNumberPoolCountries" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PutVoiceConnectorProxyResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes the proxy configuration from the specified Amazon Chime Voice Connector.",
        "operationId" : "DeleteVoiceConnectorProxy",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/app-instances/{appInstanceArn}/admins" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Returns a list of the administrators in the <code>AppInstance</code>.",
        "operationId" : "ListAppInstanceAdmins",
        "parameters" : [ {
          "description" : "The ARN of the <code>AppInstance</code>.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appInstanceArn"
        }, {
          "description" : "The maximum number of administrators that you want to return.",
          "required" : false,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "The token returned from previous API requests until the number of administrators is reached.",
          "required" : false,
          "schema" : {
            "format" : "password",
            "maxLength" : 2048,
            "minLength" : 0,
            "pattern" : ".*",
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListAppInstanceAdminsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "<p>Promotes an <code>AppInstanceUser</code> to an <code>AppInstanceAdmin</code>. The promoted user can perform the following actions. </p> <ul> <li> <p> <code>ChannelModerator</code> actions across all channels in the <code>AppInstance</code>.</p> </li> <li> <p> <code>DeleteChannelMessage</code> actions.</p> </li> </ul> <p>Only an <code>AppInstanceUser</code> can be promoted to an <code>AppInstanceAdmin</code> role.</p>",
        "operationId" : "CreateAppInstanceAdmin",
        "parameters" : [ {
          "description" : "The ARN of the <code>AppInstance</code>.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appInstanceArn"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "AppInstanceAdminArn" : {
                    "description" : "The ARN of the administrator of the current <code>AppInstance</code>.",
                    "maxLength" : 1600,
                    "minLength" : 5,
                    "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "AppInstanceAdminArn" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateAppInstanceAdminResponse"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          }
        }
      }
    },
    "/channels#scope=app-instance-user-memberships" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "<p> Lists all channels that a particular <code>AppInstanceUser</code> is a part of. Only an <code>AppInstanceAdmin</code> can call the API with a user ARN that is not their own. </p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "ListChannelMembershipsForAppInstanceUser",
        "parameters" : [ {
          "description" : "The ARN of the <code>AppInstanceUser</code>s",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "query",
          "name" : "app-instance-user-arn"
        }, {
          "description" : "The maximum number of users that you want returned.",
          "required" : false,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "The token returned from previous API requests until the number of channel memberships is reached.",
          "required" : false,
          "schema" : {
            "format" : "password",
            "maxLength" : 2048,
            "minLength" : 0,
            "pattern" : ".*",
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "app-instance-user-memberships" ]
          },
          "in" : "query",
          "name" : "scope"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListChannelMembershipsForAppInstanceUserResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/app-instances/{appInstanceArn}/retention-settings" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Gets the retention settings for an <code>AppInstance</code>.",
        "operationId" : "GetAppInstanceRetentionSettings",
        "parameters" : [ {
          "description" : "The ARN of the <code>AppInstance</code>.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appInstanceArn"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAppInstanceRetentionSettingsResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Sets the amount of time in days that a given <code>AppInstance</code> retains data.",
        "operationId" : "PutAppInstanceRetentionSettings",
        "parameters" : [ {
          "description" : "The ARN of the <code>AppInstance</code>.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appInstanceArn"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "AppInstanceRetentionSettings" : {
                    "description" : "The details of the data-retention settings for an <code>AppInstance</code>.",
                    "properties" : {
                      "ChannelRetentionSettings" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/ChannelRetentionSettings"
                        }, {
                          "description" : "The length of time in days to retain the messages in a channel."
                        } ]
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object",
                "required" : [ "AppInstanceRetentionSettings" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PutAppInstanceRetentionSettingsResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          }
        }
      }
    },
    "/phone-numbers#operation=batch-delete" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "<p> Moves phone numbers into the <b>Deletion queue</b>. Phone numbers must be disassociated from any users or Amazon Chime Voice Connectors before they can be deleted. </p> <p> Phone numbers remain in the <b>Deletion queue</b> for 7 days before they are deleted permanently. </p>",
        "operationId" : "BatchDeletePhoneNumber",
        "parameters" : [ {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "batch-delete" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "PhoneNumberIds" : {
                    "description" : "List of phone number IDs.",
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/String"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "PhoneNumberIds" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchDeletePhoneNumberResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/app-instance-users#app-instance-arn" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "List all <code>AppInstanceUsers</code> created under a single <code>AppInstance</code>. ",
        "operationId" : "ListAppInstanceUsers",
        "parameters" : [ {
          "description" : "The ARN of the <code>AppInstance</code>.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "query",
          "name" : "app-instance-arn"
        }, {
          "description" : "The maximum number of requests that you want returned.",
          "required" : false,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "The token passed by previous API calls until all requested users are returned.",
          "required" : false,
          "schema" : {
            "format" : "password",
            "maxLength" : 2048,
            "minLength" : 0,
            "pattern" : ".*",
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListAppInstanceUsersResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      }
    },
    "/search#type=phone-numbers" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Searches for phone numbers that can be ordered. For US numbers, provide at least one of the following search filters: <code>AreaCode</code>, <code>City</code>, <code>State</code>, or <code>TollFreePrefix</code>. If you provide <code>City</code>, you must also provide <code>State</code>. Numbers outside the US only support the <code>PhoneNumberType</code> filter, which you must use.",
        "operationId" : "SearchAvailablePhoneNumbers",
        "parameters" : [ {
          "description" : "The area code used to filter results. Only applies to the US.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "area-code"
        }, {
          "description" : "The city used to filter results. Only applies to the US.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "city"
        }, {
          "description" : "The country used to filter results. Defaults to the US Format: ISO 3166-1 alpha-2.",
          "required" : false,
          "schema" : {
            "pattern" : "[A-Z]{2}",
            "type" : "string"
          },
          "in" : "query",
          "name" : "country"
        }, {
          "description" : "The state used to filter results. Required only if you provide <code>City</code>. Only applies to the US.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "state"
        }, {
          "description" : "The toll-free prefix that you use to filter results. Only applies to the US.",
          "required" : false,
          "schema" : {
            "maxLength" : 3,
            "minLength" : 3,
            "pattern" : "^8(00|33|44|55|66|77|88)$",
            "type" : "string"
          },
          "in" : "query",
          "name" : "toll-free-prefix"
        }, {
          "description" : "The phone number type used to filter results. Required for non-US numbers.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "Local", "TollFree" ]
          },
          "in" : "query",
          "name" : "phone-number-type"
        }, {
          "description" : "The maximum number of results to return in a single call.",
          "required" : false,
          "schema" : {
            "maximum" : 500,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "The token used to retrieve the next page of results.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "phone-numbers" ]
          },
          "in" : "query",
          "name" : "type"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchAvailablePhoneNumbersResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/rooms/{roomId}/memberships" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Lists the membership details for the specified room in an Amazon Chime Enterprise account, such as the members' IDs, email addresses, and names.",
        "operationId" : "ListRoomMemberships",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The room ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "roomId"
        }, {
          "description" : "The maximum number of results to return in a single call.",
          "required" : false,
          "schema" : {
            "maximum" : 99,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "The token to use to retrieve the next page of results.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListRoomMembershipsResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds a member to a chat room in an Amazon Chime Enterprise account. A member can be either a user or a bot. The member role designates whether the member is a chat room administrator or a general chat room member.",
        "operationId" : "CreateRoomMembership",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The room ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "roomId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Role" : {
                    "description" : "The role of the member.",
                    "type" : "string",
                    "enum" : [ "Administrator", "Member" ]
                  },
                  "MemberId" : {
                    "description" : "The Amazon Chime member ID (user ID or bot ID).",
                    "pattern" : ".*\\S.*",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "MemberId" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "485" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "486" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateRoomMembershipResponse"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "488" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "481" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/voice-connector-groups" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Lists the Amazon Chime Voice Connector groups for the administrator's AWS account.",
        "operationId" : "ListVoiceConnectorGroups",
        "parameters" : [ {
          "description" : "The token to use to retrieve the next page of results.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "The maximum number of results to return in a single call.",
          "required" : false,
          "schema" : {
            "maximum" : 99,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListVoiceConnectorGroupsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "<p>Creates an Amazon Chime Voice Connector group under the administrator's AWS account. You can associate Amazon Chime Voice Connectors with the Amazon Chime Voice Connector group by including <code>VoiceConnectorItems</code> in the request.</p> <p>You can include Amazon Chime Voice Connectors from different AWS Regions in your group. This creates a fault tolerant mechanism for fallback in case of availability events.</p>",
        "operationId" : "CreateVoiceConnectorGroup",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "VoiceConnectorItems" : {
                    "description" : "The Amazon Chime Voice Connectors to route inbound calls to.",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/VoiceConnectorItem"
                    }
                  },
                  "Name" : {
                    "description" : "The name of the Amazon Chime Voice Connector group.",
                    "maxLength" : 256,
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateVoiceConnectorGroupResponse"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      }
    },
    "/sip-rules/{sipRuleId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Retrieves the details of a SIP rule, such as the rule ID, name, triggers, and target endpoints.",
        "operationId" : "GetSipRule",
        "parameters" : [ {
          "description" : "The SIP rule ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "sipRuleId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetSipRuleResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the details of the specified SIP rule.",
        "operationId" : "UpdateSipRule",
        "parameters" : [ {
          "description" : "The SIP rule ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "sipRuleId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "TargetApplications" : {
                    "description" : "The new value of the list of target applications.",
                    "maxItems" : 25,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/SipRuleTargetApplication"
                    }
                  },
                  "Disabled" : {
                    "description" : "The new value specified to indicate whether the rule is disabled.",
                    "type" : "boolean"
                  },
                  "Name" : {
                    "description" : "The new name for the specified SIP rule.",
                    "maxLength" : 256,
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "202" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateSipRuleResponse"
                }
              }
            }
          },
          "488" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a SIP rule. You must disable a SIP rule before you can delete it.",
        "operationId" : "DeleteSipRule",
        "parameters" : [ {
          "description" : "The SIP rule ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "sipRuleId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/channels/{channelArn}/readMarker" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "put" : {
        "description" : "<p>The details of the time when a user last read messages in a channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "UpdateChannelReadMarker",
        "parameters" : [ {
          "description" : "The ARN of the channel.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateChannelReadMarkerResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/tags" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Lists the tags applied to an Amazon Chime SDK meeting resource.",
        "operationId" : "ListMeetingTags",
        "parameters" : [ {
          "description" : "The Amazon Chime SDK meeting ID.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "meetingId"
        } ],
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListMeetingTagsResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/voice-connectors" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Lists the Amazon Chime Voice Connectors for the administrator's AWS account.",
        "operationId" : "ListVoiceConnectors",
        "parameters" : [ {
          "description" : "The token to use to retrieve the next page of results.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "The maximum number of results to return in a single call.",
          "required" : false,
          "schema" : {
            "maximum" : 99,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListVoiceConnectorsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "<p>Creates an Amazon Chime Voice Connector under the administrator's AWS account. You can choose to create an Amazon Chime Voice Connector in a specific AWS Region.</p> <p> Enabling <a>CreateVoiceConnectorRequest$RequireEncryption</a> configures your Amazon Chime Voice Connector to use TLS transport for SIP signaling and Secure RTP (SRTP) for media. Inbound calls use TLS transport, and unencrypted outbound calls are blocked. </p>",
        "operationId" : "CreateVoiceConnector",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "RequireEncryption" : {
                    "description" : "When enabled, requires encryption for the Amazon Chime Voice Connector.",
                    "type" : "boolean"
                  },
                  "AwsRegion" : {
                    "description" : " The AWS Region in which the Amazon Chime Voice Connector is created. Default value: <code>us-east-1</code> . ",
                    "type" : "string",
                    "enum" : [ "us-east-1", "us-west-2" ]
                  },
                  "Name" : {
                    "description" : "The name of the Amazon Chime Voice Connector.",
                    "maxLength" : 256,
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "Name", "RequireEncryption" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateVoiceConnectorResponse"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      }
    },
    "/sip-media-applications/{sipMediaApplicationId}/logging-configuration" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Returns the logging configuration for the specified SIP media application.",
        "operationId" : "GetSipMediaApplicationLoggingConfiguration",
        "parameters" : [ {
          "description" : "The SIP media application ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "sipMediaApplicationId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetSipMediaApplicationLoggingConfigurationResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the logging configuration for the specified SIP media application.",
        "operationId" : "PutSipMediaApplicationLoggingConfiguration",
        "parameters" : [ {
          "description" : "The SIP media application ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "sipMediaApplicationId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "SipMediaApplicationLoggingConfiguration" : {
                    "description" : "Logging configuration of the SIP media application.",
                    "properties" : {
                      "EnableSipMediaApplicationMessageLogs" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Boolean"
                        }, {
                          "description" : "Enables application message logs for the SIP media application."
                        } ]
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PutSipMediaApplicationLoggingConfigurationResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/voice-connector-groups/{voiceConnectorGroupId}#operation=disassociate-phone-numbers" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Disassociates the specified phone numbers from the specified Amazon Chime Voice Connector group.",
        "operationId" : "DisassociatePhoneNumbersFromVoiceConnectorGroup",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector group ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorGroupId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "disassociate-phone-numbers" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "E164PhoneNumbers" : {
                    "description" : "List of phone numbers, in E.164 format.",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/E164PhoneNumber"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "E164PhoneNumbers" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DisassociatePhoneNumbersFromVoiceConnectorGroupResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/meetings#operation=create-attendees" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : " Creates a new Amazon Chime SDK meeting in the specified media Region, with attendees. For more information about specifying media Regions, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/chime-sdk-meetings-regions.html\">Amazon Chime SDK Media Regions</a> in the <i>Amazon Chime Developer Guide</i> . For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i> . ",
        "operationId" : "CreateMeetingWithAttendees",
        "parameters" : [ {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "create-attendees" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "ClientRequestToken" : {
                    "description" : "The unique identifier for the client request. Use a different token for different meetings.",
                    "format" : "password",
                    "maxLength" : 64,
                    "minLength" : 2,
                    "pattern" : "[-_a-zA-Z0-9]*",
                    "type" : "string"
                  },
                  "Attendees" : {
                    "description" : "The request containing the attendees to create.",
                    "maxItems" : 10,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/CreateAttendeeRequestItem"
                    }
                  },
                  "MeetingHostId" : {
                    "description" : "Reserved.",
                    "format" : "password",
                    "maxLength" : 64,
                    "minLength" : 2,
                    "type" : "string"
                  },
                  "MediaRegion" : {
                    "description" : "<p> The Region in which to create the meeting. Default: <code>us-east-1</code> . </p> <p> Available values: <code>af-south-1</code> , <code>ap-northeast-1</code> , <code>ap-northeast-2</code> , <code>ap-south-1</code> , <code>ap-southeast-1</code> , <code>ap-southeast-2</code> , <code>ca-central-1</code> , <code>eu-central-1</code> , <code>eu-north-1</code> , <code>eu-south-1</code> , <code>eu-west-1</code> , <code>eu-west-2</code> , <code>eu-west-3</code> , <code>sa-east-1</code> , <code>us-east-1</code> , <code>us-east-2</code> , <code>us-west-1</code> , <code>us-west-2</code> . </p>",
                    "type" : "string"
                  },
                  "ExternalMeetingId" : {
                    "description" : "The external meeting ID.",
                    "format" : "password",
                    "maxLength" : 64,
                    "minLength" : 2,
                    "type" : "string"
                  },
                  "Tags" : {
                    "description" : "The tag key-value pairs.",
                    "maxItems" : 50,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Tag"
                    }
                  },
                  "NotificationsConfiguration" : {
                    "description" : " The resource target configurations for receiving Amazon Chime SDK meeting and attendee event notifications. The Amazon Chime SDK supports resource targets located in the US East (N. Virginia) AWS Region (<code>us-east-1</code>). ",
                    "properties" : {
                      "SqsQueueArn" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Arn"
                        }, {
                          "description" : "The SQS queue ARN."
                        } ]
                      },
                      "SnsTopicArn" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Arn"
                        }, {
                          "description" : "The SNS topic ARN."
                        } ]
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object",
                "required" : [ "ClientRequestToken" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateMeetingWithAttendeesResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/attendees/{attendeeId}/tags#operation=delete" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Untags the specified tags from the specified Amazon Chime SDK attendee.",
        "operationId" : "UntagAttendee",
        "parameters" : [ {
          "description" : "The Amazon Chime SDK meeting ID.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "meetingId"
        }, {
          "description" : "The Amazon Chime SDK attendee ID.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "attendeeId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "delete" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "TagKeys" : {
                    "description" : "The tag keys.",
                    "maxItems" : 10,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/TagKey"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "TagKeys" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Lists the Amazon Chime accounts under the administrator's AWS account. You can filter accounts by account name prefix. To find out which Amazon Chime account a user belongs to, you can filter by the user's email address, which returns one account result.",
        "operationId" : "ListAccounts",
        "parameters" : [ {
          "description" : "Amazon Chime account name prefix with which to filter results.",
          "required" : false,
          "schema" : {
            "maxLength" : 100,
            "minLength" : 1,
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "query",
          "name" : "name"
        }, {
          "description" : "User email address with which to filter results.",
          "required" : false,
          "schema" : {
            "format" : "password",
            "pattern" : ".+@.+\\..+",
            "type" : "string"
          },
          "in" : "query",
          "name" : "user-email"
        }, {
          "description" : "The token to use to retrieve the next page of results.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "The maximum number of results to return in a single call. Defaults to 100.",
          "required" : false,
          "schema" : {
            "maximum" : 200,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListAccountsResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates an Amazon Chime account under the administrator's AWS account. Only <code>Team</code> account types are currently supported for this action. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.",
        "operationId" : "CreateAccount",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Name" : {
                    "description" : "The name of the Amazon Chime account.",
                    "maxLength" : 100,
                    "minLength" : 1,
                    "pattern" : ".*\\S.*",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateAccountResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/channels/{channelArn}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "<p>Returns the full details of a channel in an Amazon Chime <code>AppInstance</code>.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "DescribeChannel",
        "parameters" : [ {
          "description" : "The ARN of the channel.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DescribeChannelResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "<p>Update a channel's attributes.</p> <p> <b>Restriction</b>: You can't change a channel's privacy. </p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "UpdateChannel",
        "parameters" : [ {
          "description" : "The ARN of the channel.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Mode" : {
                    "description" : "The mode of the update request.",
                    "type" : "string",
                    "enum" : [ "UNRESTRICTED", "RESTRICTED" ]
                  },
                  "Metadata" : {
                    "description" : "The metadata for the update request.",
                    "format" : "password",
                    "maxLength" : 1024,
                    "minLength" : 0,
                    "pattern" : ".*",
                    "type" : "string"
                  },
                  "Name" : {
                    "description" : "The name of the channel.",
                    "format" : "password",
                    "maxLength" : 256,
                    "minLength" : 1,
                    "pattern" : "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "Name", "Mode" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateChannelResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "<p>Immediately makes a channel and its memberships inaccessible and marks them for deletion. This is an irreversible process.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "DeleteChannel",
        "parameters" : [ {
          "description" : "The ARN of the channel being deleted.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/settings" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Retrieves global settings for the administrator's AWS account, such as Amazon Chime Business Calling and Amazon Chime Voice Connector settings.",
        "operationId" : "GetGlobalSettings",
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetGlobalSettingsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates global settings for the administrator's AWS account, such as Amazon Chime Business Calling and Amazon Chime Voice Connector settings.",
        "operationId" : "UpdateGlobalSettings",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "BusinessCalling" : {
                    "description" : "The Amazon Chime Business Calling settings for the administrator's AWS account. Includes any Amazon S3 buckets designated for storing call detail records.",
                    "properties" : {
                      "CdrBucket" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/String"
                        }, {
                          "description" : "The Amazon S3 bucket designated for call detail record storage."
                        } ]
                      }
                    },
                    "type" : "object"
                  },
                  "VoiceConnector" : {
                    "description" : "The Amazon Chime Voice Connector settings. Includes any Amazon S3 buckets designated for storing call detail records.",
                    "properties" : {
                      "CdrBucket" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/String"
                        }, {
                          "description" : "The Amazon S3 bucket designated for call detail record storage."
                        } ]
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object",
                "required" : [ "BusinessCalling", "VoiceConnector" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/transcription#operation=stop" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Stops transcription for the specified <code>meetingId</code>.",
        "operationId" : "StopMeetingTranscription",
        "parameters" : [ {
          "description" : "The unique ID of the meeting for which you stop transcription.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "meetingId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "stop" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "UnprocessableEntityException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnprocessableEntityException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StopMeetingTranscriptionResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/phone-numbers/{phoneNumberId}#operation=restore" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Moves a phone number from the <b>Deletion queue</b> back into the phone number <b>Inventory</b>.",
        "operationId" : "RestorePhoneNumber",
        "parameters" : [ {
          "description" : "The phone number.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "phoneNumberId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "restore" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestorePhoneNumberResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/dial-outs" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "<p>Uses the join token and call metadata in a meeting request (From number, To number, and so forth) to initiate an outbound call to a public switched telephone network (PSTN) and join them into a Chime meeting. Also ensures that the From number belongs to the customer.</p> <p>To play welcome audio or implement an interactive voice response (IVR), use the <code>CreateSipMediaApplicationCall</code> action with the corresponding SIP media application ID.</p>",
        "operationId" : "CreateMeetingDialOut",
        "parameters" : [ {
          "description" : "The Amazon Chime SDK meeting ID.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "meetingId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "FromPhoneNumber" : {
                    "description" : "Phone number used as the caller ID when the remote party receives a call.",
                    "format" : "password",
                    "pattern" : "^\\+?[1-9]\\d{1,14}$",
                    "type" : "string"
                  },
                  "JoinToken" : {
                    "description" : "Token used by the Amazon Chime SDK attendee. Call the <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_CreateAttendee.html\">CreateAttendee</a> action to get a join token.",
                    "format" : "password",
                    "maxLength" : 2048,
                    "minLength" : 2,
                    "pattern" : "^[a-zA-Z0-9+/]+$",
                    "type" : "string"
                  },
                  "ToPhoneNumber" : {
                    "description" : "Phone number called when inviting someone to a meeting.",
                    "format" : "password",
                    "pattern" : "^\\+?[1-9]\\d{1,14}$",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "FromPhoneNumber", "ToPhoneNumber", "JoinToken" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateMeetingDialOutResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/app-instances/{appInstanceArn}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Returns the full details of an <code>AppInstance</code>.",
        "operationId" : "DescribeAppInstance",
        "parameters" : [ {
          "description" : "The ARN of the <code>AppInstance</code>.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appInstanceArn"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DescribeAppInstanceResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates <code>AppInstance</code> metadata.",
        "operationId" : "UpdateAppInstance",
        "parameters" : [ {
          "description" : "The ARN of the <code>AppInstance</code>.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appInstanceArn"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Metadata" : {
                    "description" : "The metadata that you want to change.",
                    "format" : "password",
                    "maxLength" : 1024,
                    "minLength" : 0,
                    "pattern" : ".*",
                    "type" : "string"
                  },
                  "Name" : {
                    "description" : "The name that you want to change.",
                    "format" : "password",
                    "maxLength" : 256,
                    "minLength" : 1,
                    "pattern" : "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateAppInstanceResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes an <code>AppInstance</code> and all associated data asynchronously.",
        "operationId" : "DeleteAppInstance",
        "parameters" : [ {
          "description" : "The ARN of the <code>AppInstance</code>.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appInstanceArn"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      }
    },
    "/voice-connector-groups/{voiceConnectorGroupId}#operation=associate-phone-numbers" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Associates phone numbers with the specified Amazon Chime Voice Connector group.",
        "operationId" : "AssociatePhoneNumbersWithVoiceConnectorGroup",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector group ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorGroupId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "associate-phone-numbers" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "E164PhoneNumbers" : {
                    "description" : "List of phone numbers, in E.164 format.",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/E164PhoneNumber"
                    }
                  },
                  "ForceAssociate" : {
                    "description" : "If true, associates the provided phone numbers with the provided Amazon Chime Voice Connector Group and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations.",
                    "type" : "boolean"
                  }
                },
                "type" : "object",
                "required" : [ "E164PhoneNumbers" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociatePhoneNumbersWithVoiceConnectorGroupResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Retrieves details for the specified Amazon Chime account, such as account type and supported licenses.",
        "operationId" : "GetAccount",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAccountResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Updates account details for the specified Amazon Chime account. Currently, only account name and default license updates are supported for this action.",
        "operationId" : "UpdateAccount",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "DefaultLicense" : {
                    "description" : "The default license applied when you add users to an Amazon Chime account.",
                    "type" : "string",
                    "enum" : [ "Basic", "Plus", "Pro", "ProTrial" ]
                  },
                  "Name" : {
                    "description" : "The new name for the specified Amazon Chime account.",
                    "maxLength" : 100,
                    "minLength" : 1,
                    "pattern" : ".*\\S.*",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateAccountResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "<p>Deletes the specified Amazon Chime account. You must suspend all users before deleting <code>Team</code> account. You can use the <a>BatchSuspendUser</a> action to dodo.</p> <p>For <code>EnterpriseLWA</code> and <code>EnterpriseAD</code> accounts, you must release the claimed domains for your Amazon Chime account before deletion. As soon as you release the domain, all users under that account are suspended.</p> <p>Deleted accounts appear in your <code>Disabled</code> accounts list for 90 days. To restore deleted account from your <code>Disabled</code> accounts list, you must contact AWS Support.</p> <p>After 90 days, deleted accounts are permanently removed from your <code>Disabled</code> accounts list.</p>",
        "operationId" : "DeleteAccount",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "UnprocessableEntityException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnprocessableEntityException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteAccountResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/tags#operation=add" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Applies the specified tags to the specified Amazon Chime SDK meeting.",
        "operationId" : "TagMeeting",
        "parameters" : [ {
          "description" : "The Amazon Chime SDK meeting ID.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "meetingId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "add" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Tags" : {
                    "description" : "The tag key-value pairs.",
                    "maxItems" : 50,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Tag"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "Tags" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          }
        }
      }
    },
    "/voice-connectors/{voiceConnectorId}/termination/health" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Retrieves information about the last time a SIP <code>OPTIONS</code> ping was received from your SIP infrastructure for the specified Amazon Chime Voice Connector.",
        "operationId" : "GetVoiceConnectorTerminationHealth",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetVoiceConnectorTerminationHealthResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/attendees/{attendeeId}/tags#operation=add" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Applies the specified tags to the specified Amazon Chime SDK attendee.",
        "operationId" : "TagAttendee",
        "parameters" : [ {
          "description" : "The Amazon Chime SDK meeting ID.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "meetingId"
        }, {
          "description" : "The Amazon Chime SDK attendee ID.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "attendeeId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "add" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Tags" : {
                    "description" : "The tag key-value pairs.",
                    "maxItems" : 10,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Tag"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "Tags" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          }
        }
      }
    },
    "/channels/{channelArn}/bans" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "<p>Lists all the users banned from a particular channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "ListChannelBans",
        "parameters" : [ {
          "description" : "The ARN of the channel.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The maximum number of bans that you want returned.",
          "required" : false,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "The token passed by previous API calls until all requested bans are returned.",
          "required" : false,
          "schema" : {
            "format" : "password",
            "maxLength" : 2048,
            "minLength" : 0,
            "pattern" : ".*",
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListChannelBansResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "<p>Permanently bans a member from a channel. Moderators can't add banned members to a channel. To undo a ban, you first have to <code>DeleteChannelBan</code>, and then <code>CreateChannelMembership</code>. Bans are cleaned up when you delete users or channels.</p> <p>If you ban a user who is already part of a channel, that user is automatically kicked from the channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "CreateChannelBan",
        "parameters" : [ {
          "description" : "The ARN of the ban request.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "MemberArn" : {
                    "description" : "The ARN of the member being banned.",
                    "maxLength" : 1600,
                    "minLength" : 5,
                    "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "MemberArn" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateChannelBanResponse"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          }
        }
      }
    },
    "/phone-numbers" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Lists the phone numbers for the specified Amazon Chime account, Amazon Chime user, Amazon Chime Voice Connector, or Amazon Chime Voice Connector group.",
        "operationId" : "ListPhoneNumbers",
        "parameters" : [ {
          "description" : "The phone number status.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "AcquireInProgress", "AcquireFailed", "Unassigned", "Assigned", "ReleaseInProgress", "DeleteInProgress", "ReleaseFailed", "DeleteFailed" ]
          },
          "in" : "query",
          "name" : "status"
        }, {
          "description" : "The phone number product type.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "BusinessCalling", "VoiceConnector", "SipMediaApplicationDialIn" ]
          },
          "in" : "query",
          "name" : "product-type"
        }, {
          "description" : "The filter to use to limit the number of results.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "AccountId", "UserId", "VoiceConnectorId", "VoiceConnectorGroupId", "SipRuleId" ]
          },
          "in" : "query",
          "name" : "filter-name"
        }, {
          "description" : "The value to use for the filter.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "filter-value"
        }, {
          "description" : "The maximum number of results to return in a single call.",
          "required" : false,
          "schema" : {
            "maximum" : 99,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "The token to use to retrieve the next page of results.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListPhoneNumbersResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          }
        }
      }
    },
    "/voice-connectors/{voiceConnectorId}/proxy-sessions" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Lists the proxy sessions for the specified Amazon Chime Voice Connector.",
        "operationId" : "ListProxySessions",
        "parameters" : [ {
          "description" : "The Amazon Chime voice connector ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        }, {
          "description" : "The proxy session status.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "Open", "InProgress", "Closed" ]
          },
          "in" : "query",
          "name" : "status"
        }, {
          "description" : "The token to use to retrieve the next page of results.",
          "required" : false,
          "schema" : {
            "maxLength" : 65535,
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "The maximum number of results to return in a single call.",
          "required" : false,
          "schema" : {
            "maximum" : 99,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListProxySessionsResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a proxy session on the specified Amazon Chime Voice Connector for the specified participant phone numbers.",
        "operationId" : "CreateProxySession",
        "parameters" : [ {
          "description" : "The Amazon Chime voice connector ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "ExpiryMinutes" : {
                    "description" : "The number of minutes allowed for the proxy session.",
                    "minimum" : 1,
                    "type" : "integer"
                  },
                  "GeoMatchLevel" : {
                    "description" : "The preference for matching the country or area code of the proxy phone number with that of the first participant.",
                    "type" : "string",
                    "enum" : [ "Country", "AreaCode" ]
                  },
                  "NumberSelectionBehavior" : {
                    "description" : "The preference for proxy phone number reuse, or stickiness, between the same participants across sessions.",
                    "type" : "string",
                    "enum" : [ "PreferSticky", "AvoidSticky" ]
                  },
                  "Capabilities" : {
                    "description" : "The proxy session capabilities.",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Capability"
                    }
                  },
                  "ParticipantPhoneNumbers" : {
                    "description" : "The participant phone numbers.",
                    "maxItems" : 2,
                    "minItems" : 2,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/E164PhoneNumber"
                    }
                  },
                  "GeoMatchParams" : {
                    "description" : "The country and area code for a proxy phone number in a proxy phone session.",
                    "properties" : {
                      "Country" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Country"
                        }, {
                          "description" : "The country."
                        } ]
                      },
                      "AreaCode" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/AreaCode"
                        }, {
                          "description" : "The area code."
                        } ]
                      }
                    },
                    "type" : "object"
                  },
                  "Name" : {
                    "description" : "The name of the proxy session.",
                    "format" : "password",
                    "pattern" : "^$|^[a-zA-Z0-9 ]{0,30}$",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "ParticipantPhoneNumbers", "Capabilities" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateProxySessionResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/users/{userId}#operation=associate-phone-number" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Associates a phone number with the specified Amazon Chime user.",
        "operationId" : "AssociatePhoneNumberWithUser",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The user ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "userId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "associate-phone-number" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "E164PhoneNumber" : {
                    "description" : "The phone number, in E.164 format.",
                    "format" : "password",
                    "pattern" : "^\\+?[1-9]\\d{1,14}$",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "E164PhoneNumber" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociatePhoneNumberWithUserResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/sip-media-applications/{sipMediaApplicationId}/calls" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Creates an outbound call to a phone number from the phone number specified in the request, and it invokes the endpoint of the specified <code>sipMediaApplicationId</code>.",
        "operationId" : "CreateSipMediaApplicationCall",
        "parameters" : [ {
          "description" : "The ID of the SIP media application.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "sipMediaApplicationId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "FromPhoneNumber" : {
                    "description" : "The phone number that a user calls from. This is a phone number in your Amazon Chime phone number inventory.",
                    "format" : "password",
                    "pattern" : "^\\+?[1-9]\\d{1,14}$",
                    "type" : "string"
                  },
                  "ToPhoneNumber" : {
                    "description" : "The phone number that the service should call.",
                    "format" : "password",
                    "pattern" : "^\\+?[1-9]\\d{1,14}$",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "FromPhoneNumber", "ToPhoneNumber" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateSipMediaApplicationCallResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/settings/phone-number" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Retrieves the phone number settings for the administrator's AWS account, such as the default outbound calling name.",
        "operationId" : "GetPhoneNumberSettings",
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetPhoneNumberSettingsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the phone number settings for the administrator's AWS account, such as the default outbound calling name. You can update the default outbound calling name once every seven days. Outbound calling names can take up to 72 hours to update.",
        "operationId" : "UpdatePhoneNumberSettings",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "CallingName" : {
                    "description" : "The default outbound calling name for the account.",
                    "format" : "password",
                    "pattern" : "^$|^[a-zA-Z0-9 ]{2,15}$",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "CallingName" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/users#operation=suspend" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "<p>Suspends up to 50 users from a <code>Team</code> or <code>EnterpriseLWA</code> Amazon Chime account. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.</p> <p>Users suspended from a <code>Team</code> account are disassociated from the account,but they can continue to use Amazon Chime as free users. To remove the suspension from suspended <code>Team</code> account users, invite them to the <code>Team</code> account again. You can use the <a>InviteUsers</a> action to do so.</p> <p>Users suspended from an <code>EnterpriseLWA</code> account are immediately signed out of Amazon Chime and can no longer sign in. To remove the suspension from suspended <code>EnterpriseLWA</code> account users, use the <a>BatchUnsuspendUser</a> action.</p> <p> To sign out users without suspending them, use the <a>LogoutUser</a> action. </p>",
        "operationId" : "BatchSuspendUser",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "suspend" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "UserIdList" : {
                    "description" : "The request containing the user IDs to suspend.",
                    "maxItems" : 50,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/NonEmptyString"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "UserIdList" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchSuspendUserResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/sip-rules" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Lists the SIP rules under the administrator's AWS account.",
        "operationId" : "ListSipRules",
        "parameters" : [ {
          "description" : "The SIP media application ID.",
          "required" : false,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "query",
          "name" : "sip-media-application"
        }, {
          "description" : "The maximum number of results to return in a single call. Defaults to 100.",
          "required" : false,
          "schema" : {
            "maximum" : 99,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "The token to use to retrieve the next page of results.",
          "required" : false,
          "schema" : {
            "maxLength" : 65535,
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListSipRulesResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a SIP rule which can be used to run a SIP media application as a target for a specific trigger type.",
        "operationId" : "CreateSipRule",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "TriggerType" : {
                    "description" : "The type of trigger assigned to the SIP rule in <code>TriggerValue</code>, currently <code>RequestUriHostname</code> or <code>ToPhoneNumber</code>.",
                    "type" : "string",
                    "enum" : [ "ToPhoneNumber", "RequestUriHostname" ]
                  },
                  "TriggerValue" : {
                    "description" : "If <code>TriggerType</code> is <code>RequestUriHostname</code>, the value can be the outbound host name of an Amazon Chime Voice Connector. If <code>TriggerType</code> is <code>ToPhoneNumber</code>, the value can be a customer-owned phone number in the E164 format. The <code>SipMediaApplication</code> specified in the <code>SipRule</code> is triggered if the request URI in an incoming SIP request matches the <code>RequestUriHostname</code>, or if the <code>To</code> header in the incoming SIP request matches the <code>ToPhoneNumber</code> value.",
                    "pattern" : ".*\\S.*",
                    "type" : "string"
                  },
                  "TargetApplications" : {
                    "description" : "List of SIP media applications with priority and AWS Region. Only one SIP application per AWS Region can be used.",
                    "maxItems" : 25,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/SipRuleTargetApplication"
                    }
                  },
                  "Disabled" : {
                    "description" : "Enables or disables a rule. You must disable rules before you can delete them.",
                    "type" : "boolean"
                  },
                  "Name" : {
                    "description" : "The name of the SIP rule.",
                    "maxLength" : 256,
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "Name", "TriggerType", "TriggerValue", "TargetApplications" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "486" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateSipRuleResponse"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "488" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      }
    },
    "/media-capture-pipelines/{mediaPipelineId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Gets an existing media capture pipeline.",
        "operationId" : "GetMediaCapturePipeline",
        "parameters" : [ {
          "description" : "The ID of the pipeline that you want to get.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "mediaPipelineId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetMediaCapturePipelineResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes the media capture pipeline.",
        "operationId" : "DeleteMediaCapturePipeline",
        "parameters" : [ {
          "description" : "The ID of the media capture pipeline being deleted. ",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "mediaPipelineId"
        } ],
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/voice-connectors/{voiceConnectorId}/termination" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Retrieves termination setting details for the specified Amazon Chime Voice Connector.",
        "operationId" : "GetVoiceConnectorTermination",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetVoiceConnectorTerminationResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "<p>Adds termination settings for the specified Amazon Chime Voice Connector.</p> <note> <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to turning off termination settings.</p> </note>",
        "operationId" : "PutVoiceConnectorTermination",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Termination" : {
                    "description" : "Termination settings enable your SIP hosts to make outbound calls using your Amazon Chime Voice Connector.",
                    "properties" : {
                      "DefaultPhoneNumber" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/E164PhoneNumber"
                        }, {
                          "description" : "The default caller ID phone number."
                        } ]
                      },
                      "CpsLimit" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/CpsLimit"
                        }, {
                          "description" : "The limit on calls per second. Max value based on account service quota. Default value of 1."
                        } ]
                      },
                      "CidrAllowedList" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/StringList"
                        }, {
                          "description" : "The IP addresses allowed to make calls, in CIDR format. Required."
                        } ]
                      },
                      "CallingRegions" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/CallingRegionList"
                        }, {
                          "description" : "The countries to which calls are allowed, in ISO 3166-1 alpha-2 format. Required."
                        } ]
                      },
                      "Disabled" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Boolean"
                        }, {
                          "description" : "When termination settings are disabled, outbound calls can not be made."
                        } ]
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object",
                "required" : [ "Termination" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PutVoiceConnectorTerminationResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "<p>Deletes the termination settings for the specified Amazon Chime Voice Connector.</p> <note> <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to deleting the termination settings.</p> </note>",
        "operationId" : "DeleteVoiceConnectorTermination",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/phone-number-countries#product-type" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Lists supported phone number countries.",
        "operationId" : "ListSupportedPhoneNumberCountries",
        "parameters" : [ {
          "description" : "The phone number product type.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "BusinessCalling", "VoiceConnector", "SipMediaApplicationDialIn" ]
          },
          "in" : "query",
          "name" : "product-type"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListSupportedPhoneNumberCountriesResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      }
    },
    "/channels/{channelArn}#scope=app-instance-user-moderated-channel&app-instance-user-arn" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "<p>Returns the full details of a channel moderated by the specified <code>AppInstanceUser</code>.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "DescribeChannelModeratedByAppInstanceUser",
        "parameters" : [ {
          "description" : "The ARN of the moderated channel.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The ARN of the <code>AppInstanceUser</code> in the moderated channel.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "query",
          "name" : "app-instance-user-arn"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "app-instance-user-moderated-channel" ]
          },
          "in" : "query",
          "name" : "scope"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DescribeChannelModeratedByAppInstanceUserResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/rooms/{roomId}/memberships#operation=batch-create" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Adds up to 50 members to a chat room in an Amazon Chime Enterprise account. Members can be users or bots. The member role designates whether the member is a chat room administrator or a general chat room member.",
        "operationId" : "BatchCreateRoomMembership",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The room ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "roomId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "batch-create" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "MembershipItemList" : {
                    "description" : "The list of membership items.",
                    "maxItems" : 50,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/MembershipItem"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "MembershipItemList" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchCreateRoomMembershipResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          }
        }
      }
    },
    "/voice-connectors/{voiceConnectorId}/origination" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Retrieves origination setting details for the specified Amazon Chime Voice Connector.",
        "operationId" : "GetVoiceConnectorOrigination",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetVoiceConnectorOriginationResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "<p>Adds origination settings for the specified Amazon Chime Voice Connector.</p> <note> <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to turning off origination settings.</p> </note>",
        "operationId" : "PutVoiceConnectorOrigination",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Origination" : {
                    "description" : "Origination settings enable your SIP hosts to receive inbound calls using your Amazon Chime Voice Connector.",
                    "properties" : {
                      "Routes" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/OriginationRouteList"
                        }, {
                          "description" : "The call distribution properties defined for your SIP hosts. Valid range: Minimum value of 1. Maximum value of 20."
                        } ]
                      },
                      "Disabled" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Boolean"
                        }, {
                          "description" : "When origination settings are disabled, inbound calls are not enabled for your Amazon Chime Voice Connector."
                        } ]
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object",
                "required" : [ "Origination" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PutVoiceConnectorOriginationResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "<p>Deletes the origination settings for the specified Amazon Chime Voice Connector.</p> <note> <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to deleting the origination settings.</p> </note>",
        "operationId" : "DeleteVoiceConnectorOrigination",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/rooms/{roomId}/messages/{messageId}#operation=redact" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Redacts the specified message from the specified Amazon Chime channel.",
        "operationId" : "RedactRoomMessage",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The room ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "roomId"
        }, {
          "description" : "The message ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "messageId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "redact" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "responses" : {
          "484" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedactRoomMessageResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/users#operation=unsuspend" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "<p>Removes the suspension from up to 50 previously suspended users for the specified Amazon Chime <code>EnterpriseLWA</code> account. Only users on <code>EnterpriseLWA</code> accounts can be unsuspended using this action. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\"> Managing Your Amazon Chime Accounts </a> in the account types, in the <i>Amazon Chime Administration Guide</i>. </p> <p> Previously suspended users who are unsuspended using this action are returned to <code>Registered</code> status. Users who are not previously suspended are ignored. </p>",
        "operationId" : "BatchUnsuspendUser",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "unsuspend" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "UserIdList" : {
                    "description" : "The request containing the user IDs to unsuspend.",
                    "maxItems" : 50,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/NonEmptyString"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "UserIdList" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchUnsuspendUserResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/conversations/{conversationId}/messages/{messageId}#operation=redact" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Redacts the specified message from the specified Amazon Chime conversation.",
        "operationId" : "RedactConversationMessage",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The conversation ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "conversationId"
        }, {
          "description" : "The message ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "messageId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "redact" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "responses" : {
          "484" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedactConversationMessageResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/channels/{channelArn}/messages/{messageId}#operation=redact" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "<p>Redacts message content, but not metadata. The message exists in the back end, but the action returns null content, and the state shows as redacted.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "RedactChannelMessage",
        "parameters" : [ {
          "description" : "The ARN of the channel containing the messages that you want to redact.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The ID of the message being redacted.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "[-_a-zA-Z0-9]*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "messageId"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "redact" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedactChannelMessageResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/voice-connectors/{voiceConnectorId}/emergency-calling-configuration" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Gets the emergency calling configuration details for the specified Amazon Chime Voice Connector.",
        "operationId" : "GetVoiceConnectorEmergencyCallingConfiguration",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetVoiceConnectorEmergencyCallingConfigurationResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Puts emergency calling configuration details to the specified Amazon Chime Voice Connector, such as emergency phone numbers and calling countries. Origination and termination settings must be enabled for the Amazon Chime Voice Connector before emergency calling can be configured.",
        "operationId" : "PutVoiceConnectorEmergencyCallingConfiguration",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "EmergencyCallingConfiguration" : {
                    "description" : "The emergency calling configuration details associated with an Amazon Chime Voice Connector.",
                    "properties" : {
                      "DNIS" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/DNISEmergencyCallingConfigurationList"
                        }, {
                          "description" : "The Dialed Number Identification Service (DNIS) emergency calling configuration details."
                        } ]
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object",
                "required" : [ "EmergencyCallingConfiguration" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PutVoiceConnectorEmergencyCallingConfigurationResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes the emergency calling configuration details from the specified Amazon Chime Voice Connector.",
        "operationId" : "DeleteVoiceConnectorEmergencyCallingConfiguration",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/app-instances/{appInstanceArn}/admins/{appInstanceAdminArn}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Returns the full details of an <code>AppInstanceAdmin</code>.",
        "operationId" : "DescribeAppInstanceAdmin",
        "parameters" : [ {
          "description" : "The ARN of the <code>AppInstanceAdmin</code>.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appInstanceAdminArn"
        }, {
          "description" : "The ARN of the <code>AppInstance</code>.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appInstanceArn"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DescribeAppInstanceAdminResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Demotes an <code>AppInstanceAdmin</code> to an <code>AppInstanceUser</code>. This action does not delete the user.",
        "operationId" : "DeleteAppInstanceAdmin",
        "parameters" : [ {
          "description" : "The ARN of the <code>AppInstance</code>'s administrator.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appInstanceAdminArn"
        }, {
          "description" : "The ARN of the <code>AppInstance</code>.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appInstanceArn"
        } ],
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/voice-connectors/{voiceConnectorId}/termination/credentials#operation=put" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Adds termination SIP credentials for the specified Amazon Chime Voice Connector.",
        "operationId" : "PutVoiceConnectorTerminationCredentials",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "put" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Credentials" : {
                    "description" : "The termination SIP credentials.",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Credential"
                    }
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/channels#scope=app-instance-user-moderated-channels" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "<p>A list of the channels moderated by an <code>AppInstanceUser</code>.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "ListChannelsModeratedByAppInstanceUser",
        "parameters" : [ {
          "description" : "The ARN of the user in the moderated channel.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "query",
          "name" : "app-instance-user-arn"
        }, {
          "description" : "The maximum number of channels in the request.",
          "required" : false,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "The token returned from previous API requests until the number of channels moderated by the user is reached.",
          "required" : false,
          "schema" : {
            "format" : "password",
            "maxLength" : 2048,
            "minLength" : 0,
            "pattern" : ".*",
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "app-instance-user-moderated-channels" ]
          },
          "in" : "query",
          "name" : "scope"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListChannelsModeratedByAppInstanceUserResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/users#operation=create" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Creates a user under the specified Amazon Chime account.",
        "operationId" : "CreateUser",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "create" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Email" : {
                    "description" : "The user's email address.",
                    "format" : "password",
                    "pattern" : ".+@.+\\..+",
                    "type" : "string"
                  },
                  "Username" : {
                    "description" : "The user name.",
                    "type" : "string"
                  },
                  "UserType" : {
                    "description" : "The user type.",
                    "type" : "string",
                    "enum" : [ "PrivateUser", "SharedDevice" ]
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateUserResponse"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "483" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          }
        }
      }
    },
    "/tags#operation=tag-resource" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Applies the specified tags to the specified Amazon Chime SDK meeting resource.",
        "operationId" : "TagResource",
        "parameters" : [ {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "tag-resource" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "ResourceARN" : {
                    "description" : "The resource ARN.",
                    "format" : "password",
                    "maxLength" : 1024,
                    "minLength" : 1,
                    "pattern" : "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
                    "type" : "string"
                  },
                  "Tags" : {
                    "description" : "The tag key-value pairs.",
                    "maxItems" : 50,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Tag"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "ResourceARN", "Tags" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bots/{botId}#operation=regenerate-security-token" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Regenerates the security token for a bot.",
        "operationId" : "RegenerateSecurityToken",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The bot ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "botId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "regenerate-security-token" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegenerateSecurityTokenResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "480" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "481" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/voice-connector-groups/{voiceConnectorGroupId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Retrieves details for the specified Amazon Chime Voice Connector group, such as timestamps,name, and associated <code>VoiceConnectorItems</code>.",
        "operationId" : "GetVoiceConnectorGroup",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector group ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorGroupId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetVoiceConnectorGroupResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates details of the specified Amazon Chime Voice Connector group, such as the name and Amazon Chime Voice Connector priority ranking.",
        "operationId" : "UpdateVoiceConnectorGroup",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector group ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorGroupId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "VoiceConnectorItems" : {
                    "description" : "The <code>VoiceConnectorItems</code> to associate with the group.",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/VoiceConnectorItem"
                    }
                  },
                  "Name" : {
                    "description" : "The name of the Amazon Chime Voice Connector group.",
                    "maxLength" : 256,
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "Name", "VoiceConnectorItems" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "202" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateVoiceConnectorGroupResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes the specified Amazon Chime Voice Connector group. Any <code>VoiceConnectorItems</code> and phone numbers associated with the group must be removed before it can be deleted.",
        "operationId" : "DeleteVoiceConnectorGroup",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector group ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorGroupId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/sip-media-applications" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Lists the SIP media applications under the administrator's AWS account.",
        "operationId" : "ListSipMediaApplications",
        "parameters" : [ {
          "description" : "The maximum number of results to return in a single call. Defaults to 100.",
          "required" : false,
          "schema" : {
            "maximum" : 99,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "The token to use to retrieve the next page of results.",
          "required" : false,
          "schema" : {
            "maxLength" : 65535,
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListSipMediaApplicationsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a SIP media application.",
        "operationId" : "CreateSipMediaApplication",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Endpoints" : {
                    "description" : "List of endpoints (Lambda Amazon Resource Names) specified for the SIP media application. Currently, only one endpoint is supported.",
                    "maxItems" : 1,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/SipMediaApplicationEndpoint"
                    }
                  },
                  "AwsRegion" : {
                    "description" : "The AWS Region assigned to the SIP media application.",
                    "type" : "string"
                  },
                  "Name" : {
                    "description" : "The SIP media application name.",
                    "maxLength" : 256,
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "AwsRegion", "Name", "Endpoints" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "486" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateSipMediaApplicationResponse"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "488" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}#operation=associate-signin-delegate-groups" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Associates the specified sign-in delegate groups with the specified Amazon Chime account.",
        "operationId" : "AssociateSigninDelegateGroupsWithAccount",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "associate-signin-delegate-groups" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "SigninDelegateGroups" : {
                    "description" : "The sign-in delegate groups.",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/SigninDelegateGroup"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "SigninDelegateGroups" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociateSigninDelegateGroupsWithAccountResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/phone-numbers#operation=batch-update" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "<p>Updates phone number product types or calling names. You can update one attribute at a time for each <code>UpdatePhoneNumberRequestItem</code>. For example, you can update the product type or the calling name.</p> <p>For toll-free numbers, you cannot use the Amazon Chime Business Calling product type. For numbers outside the U.S., you must use the Amazon Chime SIP Media Application Dial-In product type.</p> <p>Updates to outbound calling names can take up to 72 hours to complete. Pending updates to outbound calling names must be complete before you can request another update.</p>",
        "operationId" : "BatchUpdatePhoneNumber",
        "parameters" : [ {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "batch-update" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "UpdatePhoneNumberRequestItems" : {
                    "description" : "The request containing the phone number IDs and product types or calling names to update.",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/UpdatePhoneNumberRequestItem"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "UpdatePhoneNumberRequestItems" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchUpdatePhoneNumberResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/rooms" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Lists the room details for the specified Amazon Chime Enterprise account. Optionally, filter the results by a member ID (user ID or bot ID) to see a list of rooms that the member belongs to.",
        "operationId" : "ListRooms",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The member ID (user ID or bot ID).",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "member-id"
        }, {
          "description" : "The maximum number of results to return in a single call.",
          "required" : false,
          "schema" : {
            "maximum" : 99,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "The token to use to retrieve the next page of results.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListRoomsResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a chat room for the specified Amazon Chime Enterprise account.",
        "operationId" : "CreateRoom",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "ClientRequestToken" : {
                    "description" : "The idempotency token for the request.",
                    "format" : "password",
                    "maxLength" : 64,
                    "minLength" : 2,
                    "pattern" : "[-_a-zA-Z0-9]*",
                    "type" : "string"
                  },
                  "Name" : {
                    "description" : "The room name.",
                    "format" : "password",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateRoomResponse"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/users/{userId}#operation=logout" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Logs out the specified user from all of the devices they are currently logged into.",
        "operationId" : "LogoutUser",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The user ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "userId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "logout" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogoutUserResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/users" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Lists the users that belong to the specified Amazon Chime account. You can specify an email address to list only the user that the email address belongs to.",
        "operationId" : "ListUsers",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "Optional. The user email address used to filter results. Maximum 1.",
          "required" : false,
          "schema" : {
            "format" : "password",
            "pattern" : ".+@.+\\..+",
            "type" : "string"
          },
          "in" : "query",
          "name" : "user-email"
        }, {
          "description" : "The user type.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "PrivateUser", "SharedDevice" ]
          },
          "in" : "query",
          "name" : "user-type"
        }, {
          "description" : "The maximum number of results to return in a single call. Defaults to 100.",
          "required" : false,
          "schema" : {
            "maximum" : 200,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "The token to use to retrieve the next page of results.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListUsersResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Updates user details within the <a>UpdateUserRequestItem</a> object for up to 20 users for the specified Amazon Chime account. Currently, only <code>LicenseType</code> updates are supported for this action.",
        "operationId" : "BatchUpdateUser",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "UpdateUserRequestItems" : {
                    "description" : "The request containing the user IDs and details to update.",
                    "maxItems" : 20,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/UpdateUserRequestItem"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "UpdateUserRequestItems" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchUpdateUserResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/app-instances/{appInstanceArn}/streaming-configurations" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Gets the streaming settings for an <code>AppInstance</code>.",
        "operationId" : "GetAppInstanceStreamingConfigurations",
        "parameters" : [ {
          "description" : "The ARN of the <code>AppInstance</code>.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appInstanceArn"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAppInstanceStreamingConfigurationsResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "The data streaming configurations of an <code>AppInstance</code>.",
        "operationId" : "PutAppInstanceStreamingConfigurations",
        "parameters" : [ {
          "description" : "The ARN of the <code>AppInstance</code>.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appInstanceArn"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "AppInstanceStreamingConfigurations" : {
                    "description" : "The streaming configurations set for an <code>AppInstance</code>.",
                    "maxItems" : 2,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/AppInstanceStreamingConfiguration"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "AppInstanceStreamingConfigurations" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PutAppInstanceStreamingConfigurationsResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes the streaming configurations of an <code>AppInstance</code>.",
        "operationId" : "DeleteAppInstanceStreamingConfigurations",
        "parameters" : [ {
          "description" : "The ARN of the streaming configurations being deleted.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appInstanceArn"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      }
    },
    "/channels#app-instance-arn" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "<p>Lists all Channels created under a single Chime App as a paginated list. You can specify filters to narrow results.</p> <p class=\"title\"> <b>Functionality &amp; restrictions</b> </p> <ul> <li> <p>Use privacy = <code>PUBLIC</code> to retrieve all public channels in the account.</p> </li> <li> <p>Only an <code>AppInstanceAdmin</code> can set privacy = <code>PRIVATE</code> to list the private channels in an account.</p> </li> </ul> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "ListChannels",
        "parameters" : [ {
          "description" : "The ARN of the <code>AppInstance</code>.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "query",
          "name" : "app-instance-arn"
        }, {
          "description" : "The privacy setting. <code>PUBLIC</code> retrieves all the public channels. <code>PRIVATE</code> retrieves private channels. Only an <code>AppInstanceAdmin</code> can retrieve private channels. ",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "PUBLIC", "PRIVATE" ]
          },
          "in" : "query",
          "name" : "privacy"
        }, {
          "description" : "The maximum number of channels that you want to return.",
          "required" : false,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "The token passed by previous API calls until all requested channels are returned.",
          "required" : false,
          "schema" : {
            "format" : "password",
            "maxLength" : 2048,
            "minLength" : 0,
            "pattern" : ".*",
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListChannelsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/channels/{channelArn}/messages/{messageId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "<p>Gets the full details of a channel message.</p> <note> <p>The x-amz-chime-bearer request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "GetChannelMessage",
        "parameters" : [ {
          "description" : "The ARN of the channel.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The ID of the message.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "[-_a-zA-Z0-9]*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "messageId"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetChannelMessageResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "<p>Updates the content of a message.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "UpdateChannelMessage",
        "parameters" : [ {
          "description" : "The ARN of the channel.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The ID string of the message being updated.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "[-_a-zA-Z0-9]*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "messageId"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Content" : {
                    "description" : "The content of the message being updated.",
                    "format" : "password",
                    "maxLength" : 4096,
                    "minLength" : 0,
                    "pattern" : "[\\s\\S]*",
                    "type" : "string"
                  },
                  "Metadata" : {
                    "description" : "The metadata of the message being updated.",
                    "format" : "password",
                    "maxLength" : 1024,
                    "minLength" : 0,
                    "pattern" : ".*",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateChannelMessageResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "<p>Deletes a channel message. Only admins can perform this action. Deletion makes messages inaccessible immediately. A background process deletes any revisions created by <code>UpdateChannelMessage</code>.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "DeleteChannelMessage",
        "parameters" : [ {
          "description" : "The ARN of the channel.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The ID of the message being deleted.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "[-_a-zA-Z0-9]*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "messageId"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}#operation=disassociate-signin-delegate-groups" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Disassociates the specified sign-in delegate groups from the specified Amazon Chime account.",
        "operationId" : "DisassociateSigninDelegateGroupsFromAccount",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "disassociate-signin-delegate-groups" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "GroupNames" : {
                    "description" : "The sign-in delegate group names.",
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/String"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "GroupNames" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DisassociateSigninDelegateGroupsFromAccountResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/voice-connectors/{voiceConnectorId}/termination/credentials" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Lists the SIP credentials for the specified Amazon Chime Voice Connector.",
        "operationId" : "ListVoiceConnectorTerminationCredentials",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListVoiceConnectorTerminationCredentialsResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bots/{botId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Retrieves details for the specified bot, such as bot email address, bot type, status, and display name.",
        "operationId" : "GetBot",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The bot ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "botId"
        } ],
        "responses" : {
          "484" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "485" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetBotResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "480" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "481" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Updates the status of the specified bot, such as starting or stopping the bot from running in your Amazon Chime Enterprise account.",
        "operationId" : "UpdateBot",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The bot ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "botId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Disabled" : {
                    "description" : "When true, stops the specified bot from running in your account.",
                    "type" : "boolean"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateBotResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "480" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "481" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bots" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Lists the bots associated with the administrator's Amazon Chime Enterprise account ID.",
        "operationId" : "ListBots",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The maximum number of results to return in a single call. The default is 10.",
          "required" : false,
          "schema" : {
            "maximum" : 99,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "The token to use to retrieve the next page of results.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "485" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListBotsResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "480" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "481" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a bot for an Amazon Chime Enterprise account.",
        "operationId" : "CreateBot",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "DisplayName" : {
                    "description" : "The bot display name.",
                    "format" : "password",
                    "type" : "string"
                  },
                  "Domain" : {
                    "description" : "The domain of the Amazon Chime Enterprise account.",
                    "pattern" : ".*\\S.*",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "DisplayName" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "486" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateBotResponse"
                }
              }
            }
          },
          "487" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "480" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "481" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/rooms/{roomId}/memberships/{memberId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Updates room membership details, such as the member role, for a room in an Amazon Chime Enterprise account. The member role designates whether the member is a chat room administrator or a general chat room member. The member role can be updated only for user IDs.",
        "operationId" : "UpdateRoomMembership",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The room ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "roomId"
        }, {
          "description" : "The member ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "memberId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Role" : {
                    "description" : "The role of the member.",
                    "type" : "string",
                    "enum" : [ "Administrator", "Member" ]
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateRoomMembershipResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Removes a member from a chat room in an Amazon Chime Enterprise account.",
        "operationId" : "DeleteRoomMembership",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The room ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "roomId"
        }, {
          "description" : "The member ID (user ID or bot ID).",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "memberId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          }
        }
      }
    },
    "/channels/{channelArn}/moderators" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "<p>Lists all the moderators for a channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "ListChannelModerators",
        "parameters" : [ {
          "description" : "The ARN of the channel.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The maximum number of moderators that you want returned.",
          "required" : false,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "The token passed by previous API calls until all requested moderators are returned.",
          "required" : false,
          "schema" : {
            "format" : "password",
            "maxLength" : 2048,
            "minLength" : 0,
            "pattern" : ".*",
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListChannelModeratorsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "<p>Creates a new <code>ChannelModerator</code>. A channel moderator can:</p> <ul> <li> <p>Add and remove other members of the channel.</p> </li> <li> <p>Add and remove other moderators of the channel.</p> </li> <li> <p>Add and remove user bans for the channel.</p> </li> <li> <p>Redact messages in the channel.</p> </li> <li> <p>List messages in the channel.</p> </li> </ul> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "CreateChannelModerator",
        "parameters" : [ {
          "description" : "The ARN of the channel.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "ChannelModeratorArn" : {
                    "description" : "The ARN of the moderator.",
                    "maxLength" : 1600,
                    "minLength" : 5,
                    "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "ChannelModeratorArn" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateChannelModeratorResponse"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Gets the Amazon Chime SDK meeting details for the specified meeting ID. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i> . ",
        "operationId" : "GetMeeting",
        "parameters" : [ {
          "description" : "The Amazon Chime SDK meeting ID.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "meetingId"
        } ],
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetMeetingResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes the specified Amazon Chime SDK meeting. The operation deletes all attendees, disconnects all clients, and prevents new clients from joining the meeting. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "operationId" : "DeleteMeeting",
        "parameters" : [ {
          "description" : "The Amazon Chime SDK meeting ID.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "meetingId"
        } ],
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/settings" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Retrieves account settings for the specified Amazon Chime account ID, such as remote control and dialout settings. For more information about these settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/policies.html\">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>. ",
        "operationId" : "GetAccountSettings",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAccountSettingsResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the settings for the specified Amazon Chime account. You can update settings for remote control of shared screens, or for the dial-out option. For more information about these settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/policies.html\">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>.",
        "operationId" : "UpdateAccountSettings",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "AccountSettings" : {
                    "description" : "Settings related to the Amazon Chime account. This includes settings that start or stop remote control of shared screens, or start or stop the dial-out option in the Amazon Chime web application. For more information about these settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/policies.html\">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>.",
                    "properties" : {
                      "DisableRemoteControl" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Boolean"
                        }, {
                          "description" : "Setting that stops or starts remote control of shared screens during meetings."
                        } ]
                      },
                      "EnableDialOut" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Boolean"
                        }, {
                          "description" : "Setting that allows meeting participants to choose the <b>Call me at a phone number</b> option. For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ug/chime-join-meeting.html\">Join a Meeting without the Amazon Chime App</a>."
                        } ]
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object",
                "required" : [ "AccountSettings" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateAccountSettingsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          }
        }
      }
    },
    "/channels/{channelArn}/messages" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "<p>List all the messages in a channel. Returns a paginated list of <code>ChannelMessages</code>. By default, sorted by creation timestamp in descending order.</p> <note> <p>Redacted messages appear in the results as empty, since they are only redacted, not deleted. Deleted messages do not appear in the results. This action always returns the latest version of an edited message.</p> <p>Also, the x-amz-chime-bearer request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "ListChannelMessages",
        "parameters" : [ {
          "description" : "The ARN of the channel.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The order in which you want messages sorted. Default is Descending, based on time created.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "ASCENDING", "DESCENDING" ]
          },
          "in" : "query",
          "name" : "sort-order"
        }, {
          "description" : "The initial or starting time stamp for your requested messages.",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "in" : "query",
          "name" : "not-before"
        }, {
          "description" : "The final or ending time stamp for your requested messages.",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "in" : "query",
          "name" : "not-after"
        }, {
          "description" : "The maximum number of messages that you want returned.",
          "required" : false,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "The token passed by previous API calls until all requested messages are returned.",
          "required" : false,
          "schema" : {
            "format" : "password",
            "maxLength" : 2048,
            "minLength" : 0,
            "pattern" : ".*",
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListChannelMessagesResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "<p>Sends a message to a particular channel that the member is a part of.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> <p>Also, <code>STANDARD</code> messages can contain 4KB of data and the 1KB of metadata. <code>CONTROL</code> messages can contain 30 bytes of data and no metadata.</p> </note>",
        "operationId" : "SendChannelMessage",
        "parameters" : [ {
          "description" : "The ARN of the channel.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Persistence" : {
                    "description" : "Boolean that controls whether the message is persisted on the back end. Required.",
                    "type" : "string",
                    "enum" : [ "PERSISTENT", "NON_PERSISTENT" ]
                  },
                  "ClientRequestToken" : {
                    "description" : "The <code>Idempotency</code> token for each client request.",
                    "format" : "password",
                    "maxLength" : 64,
                    "minLength" : 2,
                    "pattern" : "[-_a-zA-Z0-9]*",
                    "type" : "string"
                  },
                  "Type" : {
                    "description" : "The type of message, <code>STANDARD</code> or <code>CONTROL</code>.",
                    "type" : "string",
                    "enum" : [ "STANDARD", "CONTROL" ]
                  },
                  "Content" : {
                    "description" : "The content of the message.",
                    "format" : "password",
                    "minLength" : 1,
                    "pattern" : "[\\s\\S]*",
                    "type" : "string"
                  },
                  "Metadata" : {
                    "description" : "The optional metadata for each message.",
                    "format" : "password",
                    "maxLength" : 1024,
                    "minLength" : 0,
                    "pattern" : ".*",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "Content", "Type", "Persistence", "ClientRequestToken" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SendChannelMessageResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      }
    },
    "/tags#operation=untag-resource" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Untags the specified tags from the specified Amazon Chime SDK meeting resource.",
        "operationId" : "UntagResource",
        "parameters" : [ {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "untag-resource" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "ResourceARN" : {
                    "description" : "The resource ARN.",
                    "format" : "password",
                    "maxLength" : 1024,
                    "minLength" : 1,
                    "pattern" : "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
                    "type" : "string"
                  },
                  "TagKeys" : {
                    "description" : "The tag keys.",
                    "maxItems" : 50,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/TagKey"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "ResourceARN", "TagKeys" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      }
    },
    "/channels/{channelArn}/memberships#operation=batch-create" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Adds a specified number of users to a channel.",
        "operationId" : "BatchCreateChannelMembership",
        "parameters" : [ {
          "description" : "The ARN of the channel to which you're adding users.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "batch-create" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Type" : {
                    "description" : "The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned. This is only supported by moderators.",
                    "type" : "string",
                    "enum" : [ "DEFAULT", "HIDDEN" ]
                  },
                  "MemberArns" : {
                    "description" : "The ARNs of the members you want to add to the channel.",
                    "maxItems" : 100,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/ChimeArn"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "MemberArns" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchCreateChannelMembershipResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "481" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/channels/{channelArn}#scope=app-instance-user-membership&app-instance-user-arn" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "<p> Returns the details of a channel based on the membership of the specified <code>AppInstanceUser</code>.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "DescribeChannelMembershipForAppInstanceUser",
        "parameters" : [ {
          "description" : "The ARN of the channel to which the user belongs.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The ARN of the user in a channel.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "query",
          "name" : "app-instance-user-arn"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "app-instance-user-membership" ]
          },
          "in" : "query",
          "name" : "scope"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DescribeChannelMembershipForAppInstanceUserResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/attendees" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Lists the attendees for the specified Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>. ",
        "operationId" : "ListAttendees",
        "parameters" : [ {
          "description" : "The Amazon Chime SDK meeting ID.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "meetingId"
        }, {
          "description" : "The token to use to retrieve the next page of results.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "The maximum number of results to return in a single call.",
          "required" : false,
          "schema" : {
            "maximum" : 99,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListAttendeesResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : " Creates a new attendee for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>. ",
        "operationId" : "CreateAttendee",
        "parameters" : [ {
          "description" : "The Amazon Chime SDK meeting ID.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "meetingId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "ExternalUserId" : {
                    "description" : "The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.",
                    "format" : "password",
                    "maxLength" : 64,
                    "minLength" : 2,
                    "type" : "string"
                  },
                  "Tags" : {
                    "description" : "The tag key-value pairs.",
                    "maxItems" : 10,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Tag"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "ExternalUserId" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateAttendeeResponse"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          }
        }
      }
    },
    "/channels/{channelArn}/memberships" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "<p>Lists all channel memberships in a channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "ListChannelMemberships",
        "parameters" : [ {
          "description" : "The maximum number of channel memberships that you want returned.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "DEFAULT", "HIDDEN" ]
          },
          "in" : "query",
          "name" : "type"
        }, {
          "description" : "The maximum number of channel memberships that you want returned.",
          "required" : false,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "The token passed by previous API calls until all requested channel memberships are returned.",
          "required" : false,
          "schema" : {
            "format" : "password",
            "maxLength" : 2048,
            "minLength" : 0,
            "pattern" : ".*",
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListChannelMembershipsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "<p>Adds a user to a channel. The <code>InvitedBy</code> response field is derived from the request header. A channel member can:</p> <ul> <li> <p>List messages</p> </li> <li> <p>Send messages</p> </li> <li> <p>Receive messages</p> </li> <li> <p>Edit their own messages</p> </li> <li> <p>Leave the channel</p> </li> </ul> <p>Privacy settings impact this action as follows:</p> <ul> <li> <p>Public Channels: You do not need to be a member to list messages, but you must be a member to send messages.</p> </li> <li> <p>Private Channels: You must be a member to list or send messages.</p> </li> </ul> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "CreateChannelMembership",
        "parameters" : [ {
          "description" : "The ARN of the channel to which you're adding users.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "MemberArn" : {
                    "description" : "The ARN of the member you want to add to the channel.",
                    "maxLength" : 1600,
                    "minLength" : 5,
                    "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                    "type" : "string"
                  },
                  "Type" : {
                    "description" : "The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned. This is only supported by moderators.",
                    "type" : "string",
                    "enum" : [ "DEFAULT", "HIDDEN" ]
                  }
                },
                "type" : "object",
                "required" : [ "MemberArn", "Type" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateChannelMembershipResponse"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          }
        }
      }
    },
    "/phone-number-orders" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Lists the phone number orders for the administrator's Amazon Chime account.",
        "operationId" : "ListPhoneNumberOrders",
        "parameters" : [ {
          "description" : "The token to use to retrieve the next page of results.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "The maximum number of results to return in a single call.",
          "required" : false,
          "schema" : {
            "maximum" : 99,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListPhoneNumberOrdersResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates an order for phone numbers to be provisioned. For toll-free numbers, you cannot use the Amazon Chime Business Calling product type. For numbers outside the U.S., you must use the Amazon Chime SIP Media Application Dial-In product type.",
        "operationId" : "CreatePhoneNumberOrder",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "E164PhoneNumbers" : {
                    "description" : "List of phone numbers, in E.164 format.",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/E164PhoneNumber"
                    }
                  },
                  "ProductType" : {
                    "description" : "The phone number product type.",
                    "type" : "string",
                    "enum" : [ "BusinessCalling", "VoiceConnector", "SipMediaApplicationDialIn" ]
                  }
                },
                "type" : "object",
                "required" : [ "ProductType", "E164PhoneNumbers" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreatePhoneNumberOrderResponse"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      }
    },
    "/phone-numbers/{phoneNumberId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Retrieves details for the specified phone number ID, such as associations, capabilities, and product type.",
        "operationId" : "GetPhoneNumber",
        "parameters" : [ {
          "description" : "The phone number ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "phoneNumberId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetPhoneNumberResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "<p>Updates phone number details, such as product type or calling name, for the specified phone number ID. You can update one phone number detail at a time. For example, you can update either the product type or the calling name in one action.</p> <p>For toll-free numbers, you cannot use the Amazon Chime Business Calling product type. For numbers outside the U.S., you must use the Amazon Chime SIP Media Application Dial-In product type.</p> <p>Updates to outbound calling names can take 72 hours to complete. Pending updates to outbound calling names must be complete before you can request another update.</p>",
        "operationId" : "UpdatePhoneNumber",
        "parameters" : [ {
          "description" : "The phone number ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "phoneNumberId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "ProductType" : {
                    "description" : "The product type.",
                    "type" : "string",
                    "enum" : [ "BusinessCalling", "VoiceConnector", "SipMediaApplicationDialIn" ]
                  },
                  "CallingName" : {
                    "description" : "The outbound calling name associated with the phone number.",
                    "format" : "password",
                    "pattern" : "^$|^[a-zA-Z0-9 ]{2,15}$",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdatePhoneNumberResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "<p>Moves the specified phone number into the <b>Deletion queue</b>. A phone number must be disassociated from any users or Amazon Chime Voice Connectors before it can be deleted.</p> <p>Deleted phone numbers remain in the <b>Deletion queue</b> for 7 days before they are deleted permanently.</p>",
        "operationId" : "DeletePhoneNumber",
        "parameters" : [ {
          "description" : "The phone number ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "phoneNumberId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/app-instances" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Lists all Amazon Chime <code>AppInstance</code>s created under a single AWS account.",
        "operationId" : "ListAppInstances",
        "parameters" : [ {
          "description" : "The maximum number of <code>AppInstance</code>s that you want to return.",
          "required" : false,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "The token passed by previous API requests until you reach the maximum number of <code>AppInstance</code>s.",
          "required" : false,
          "schema" : {
            "format" : "password",
            "maxLength" : 2048,
            "minLength" : 0,
            "pattern" : ".*",
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListAppInstancesResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates an Amazon Chime SDK messaging <code>AppInstance</code> under an AWS account. Only SDK messaging customers use this API. <code>CreateAppInstance</code> supports idempotency behavior as described in the AWS API Standard.",
        "operationId" : "CreateAppInstance",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "ClientRequestToken" : {
                    "description" : "The <code>ClientRequestToken</code> of the <code>AppInstance</code>.",
                    "format" : "password",
                    "maxLength" : 64,
                    "minLength" : 2,
                    "pattern" : "[-_a-zA-Z0-9]*",
                    "type" : "string"
                  },
                  "Metadata" : {
                    "description" : "The metadata of the <code>AppInstance</code>. Limited to a 1KB string in UTF-8.",
                    "format" : "password",
                    "maxLength" : 1024,
                    "minLength" : 0,
                    "pattern" : ".*",
                    "type" : "string"
                  },
                  "Tags" : {
                    "description" : "Tags assigned to the <code>AppInstanceUser</code>.",
                    "maxItems" : 50,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Tag"
                    }
                  },
                  "Name" : {
                    "description" : "The name of the <code>AppInstance</code>.",
                    "format" : "password",
                    "maxLength" : 256,
                    "minLength" : 1,
                    "pattern" : "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "Name", "ClientRequestToken" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateAppInstanceResponse"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/tags#operation=delete" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Untags the specified tags from the specified Amazon Chime SDK meeting.",
        "operationId" : "UntagMeeting",
        "parameters" : [ {
          "description" : "The Amazon Chime SDK meeting ID.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "meetingId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "delete" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "TagKeys" : {
                    "description" : "The tag keys.",
                    "maxItems" : 50,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/TagKey"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "TagKeys" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          }
        }
      }
    },
    "/voice-connectors/{voiceConnectorId}/proxy-sessions/{proxySessionId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Gets the specified proxy session details for the specified Amazon Chime Voice Connector.",
        "operationId" : "GetProxySession",
        "parameters" : [ {
          "description" : "The Amazon Chime voice connector ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        }, {
          "description" : "The proxy session ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "proxySessionId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetProxySessionResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Updates the specified proxy session details, such as voice or SMS capabilities.",
        "operationId" : "UpdateProxySession",
        "parameters" : [ {
          "description" : "The Amazon Chime voice connector ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        }, {
          "description" : "The proxy session ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "proxySessionId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "ExpiryMinutes" : {
                    "description" : "The number of minutes allowed for the proxy session.",
                    "minimum" : 1,
                    "type" : "integer"
                  },
                  "Capabilities" : {
                    "description" : "The proxy session capabilities.",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Capability"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "Capabilities" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateProxySessionResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes the specified proxy session from the specified Amazon Chime Voice Connector.",
        "operationId" : "DeleteProxySession",
        "parameters" : [ {
          "description" : "The Amazon Chime voice connector ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        }, {
          "description" : "The proxy session ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "proxySessionId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/users/{userId}/settings" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Retrieves settings for the specified user ID, such as any associated phone number settings.",
        "operationId" : "GetUserSettings",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The user ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "userId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetUserSettingsResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the settings for the specified user, such as phone number settings.",
        "operationId" : "UpdateUserSettings",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The user ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "userId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "UserSettings" : {
                    "description" : "Settings associated with an Amazon Chime user, including inbound and outbound calling and text messaging.",
                    "properties" : {
                      "Telephony" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/TelephonySettings"
                        }, {
                          "description" : "The telephony settings associated with the user."
                        } ]
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object",
                "required" : [ "UserSettings" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/sip-media-applications/{sipMediaApplicationId}/calls/{transactionId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Allows you to trigger a Lambda function at any time while a call is active, and replace the current actions with new actions returned by the invocation.",
        "operationId" : "UpdateSipMediaApplicationCall",
        "parameters" : [ {
          "description" : "The ID of the SIP media application handling the call.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "sipMediaApplicationId"
        }, {
          "description" : "The ID of the call transaction.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "transactionId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Arguments" : {
                    "description" : "Arguments made available to the Lambda function as part of the <code>CALL_UPDATE_REQUESTED</code> event. Can contain 0-20 key-value pairs.",
                    "maxProperties" : 20,
                    "minProperties" : 0,
                    "type" : "object",
                    "additionalProperties" : {
                      "$ref" : "#/components/schemas/SensitiveString"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "Arguments" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "202" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateSipMediaApplicationCallResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          }
        }
      }
    },
    "/sip-media-applications/{sipMediaApplicationId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Retrieves the information for a SIP media application, including name, AWS Region, and endpoints.",
        "operationId" : "GetSipMediaApplication",
        "parameters" : [ {
          "description" : "The SIP media application ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "sipMediaApplicationId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetSipMediaApplicationResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the details of the specified SIP media application.",
        "operationId" : "UpdateSipMediaApplication",
        "parameters" : [ {
          "description" : "The SIP media application ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "sipMediaApplicationId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Endpoints" : {
                    "description" : "The new set of endpoints for the specified SIP media application.",
                    "maxItems" : 1,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/SipMediaApplicationEndpoint"
                    }
                  },
                  "Name" : {
                    "description" : "The new name for the specified SIP media application.",
                    "maxLength" : 256,
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateSipMediaApplicationResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a SIP media application.",
        "operationId" : "DeleteSipMediaApplication",
        "parameters" : [ {
          "description" : "The SIP media application ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "sipMediaApplicationId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/voice-connectors/{voiceConnectorId}/logging-configuration" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Retrieves the logging configuration details for the specified Amazon Chime Voice Connector. Shows whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.",
        "operationId" : "GetVoiceConnectorLoggingConfiguration",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetVoiceConnectorLoggingConfigurationResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Adds a logging configuration for the specified Amazon Chime Voice Connector. The logging configuration specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.",
        "operationId" : "PutVoiceConnectorLoggingConfiguration",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "LoggingConfiguration" : {
                    "description" : "The logging configuration associated with an Amazon Chime Voice Connector. Specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.",
                    "properties" : {
                      "EnableSIPLogs" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Boolean"
                        }, {
                          "description" : "When true, enables SIP message logs for sending to Amazon CloudWatch Logs."
                        } ]
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object",
                "required" : [ "LoggingConfiguration" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PutVoiceConnectorLoggingConfigurationResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/rooms/{roomId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Retrieves room details, such as the room name, for a room in an Amazon Chime Enterprise account.",
        "operationId" : "GetRoom",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The room ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "roomId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetRoomResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Updates room details, such as the room name, for a room in an Amazon Chime Enterprise account.",
        "operationId" : "UpdateRoom",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The room ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "roomId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Name" : {
                    "description" : "The room name.",
                    "format" : "password",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateRoomResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a chat room in an Amazon Chime Enterprise account.",
        "operationId" : "DeleteRoom",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The chat room ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "roomId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      }
    },
    "/tags#arn" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Lists the tags applied to an Amazon Chime SDK meeting resource.",
        "operationId" : "ListTagsForResource",
        "parameters" : [ {
          "description" : "The resource ARN.",
          "required" : true,
          "schema" : {
            "format" : "password",
            "maxLength" : 1024,
            "minLength" : 1,
            "pattern" : "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
            "type" : "string"
          },
          "in" : "query",
          "name" : "arn"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListTagsForResourceResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bots/{botId}/events-configuration" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Gets details for an events configuration that allows a bot to receive outgoing events, such as an HTTPS endpoint or Lambda function ARN.",
        "operationId" : "GetEventsConfiguration",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The bot ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "botId"
        } ],
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetEventsConfigurationResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "480" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "481" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Creates an events configuration that allows a bot to receive outgoing events sent by Amazon Chime. Choose either an HTTPS endpoint or a Lambda function ARN. For more information, see <a>Bot</a>.",
        "operationId" : "PutEventsConfiguration",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The bot ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "botId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "OutboundEventsHTTPSEndpoint" : {
                    "description" : "HTTPS endpoint that allows the bot to receive outgoing events.",
                    "format" : "password",
                    "type" : "string"
                  },
                  "LambdaFunctionArn" : {
                    "description" : "Lambda function ARN that allows the bot to receive outgoing events.",
                    "format" : "password",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "486" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PutEventsConfigurationResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "481" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes the events configuration that allows a bot to receive outgoing events.",
        "operationId" : "DeleteEventsConfiguration",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The bot ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "botId"
        } ],
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "481" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/phone-number-orders/{phoneNumberOrderId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Retrieves details for the specified phone number order, such as the order creation timestamp, phone numbers in E.164 format, product type, and order status.",
        "operationId" : "GetPhoneNumberOrder",
        "parameters" : [ {
          "description" : "The ID for the phone number order.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "phoneNumberOrderId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetPhoneNumberOrderResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/voice-connectors/{voiceConnectorId}/termination/credentials#operation=delete" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Deletes the specified SIP credentials used by your equipment to authenticate during call termination.",
        "operationId" : "DeleteVoiceConnectorTerminationCredentials",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "delete" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Usernames" : {
                    "description" : "The RFC2617 compliant username associated with the SIP credentials, in US-ASCII format.",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/SensitiveString"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "Usernames" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/transcription#operation=start" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Start transcription for the specified <code>meetingId</code>. ",
        "operationId" : "StartMeetingTranscription",
        "parameters" : [ {
          "description" : "The unique ID of the meeting being transcribed.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "meetingId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "start" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "TranscriptionConfiguration" : {
                    "description" : "The configuration for the current transcription operation. Must contain <code>EngineTranscribeSettings</code> or <code>EngineTranscribeMedicalSettings</code>.",
                    "properties" : {
                      "EngineTranscribeSettings" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/EngineTranscribeSettings"
                        }, {
                          "description" : "The transcription configuration settings passed to Amazon Transcribe."
                        } ]
                      },
                      "EngineTranscribeMedicalSettings" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/EngineTranscribeMedicalSettings"
                        }, {
                          "description" : "The transcription configuration settings passed to Amazon Transcribe."
                        } ]
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object",
                "required" : [ "TranscriptionConfiguration" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StartMeetingTranscriptionResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "UnprocessableEntityException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnprocessableEntityException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "488" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/attendees/{attendeeId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Gets the Amazon Chime SDK attendee details for a specified meeting ID and attendee ID. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i> . ",
        "operationId" : "GetAttendee",
        "parameters" : [ {
          "description" : "The Amazon Chime SDK meeting ID.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "meetingId"
        }, {
          "description" : "The Amazon Chime SDK attendee ID.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "attendeeId"
        } ],
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAttendeeResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes an attendee from the specified Amazon Chime SDK meeting and deletes their <code>JoinToken</code>. Attendees are automatically deleted when a Amazon Chime SDK meeting is deleted. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "operationId" : "DeleteAttendee",
        "parameters" : [ {
          "description" : "The Amazon Chime SDK meeting ID.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "meetingId"
        }, {
          "description" : "The Amazon Chime SDK attendee ID.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "attendeeId"
        } ],
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          }
        }
      }
    },
    "/app-instance-users" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Creates a user under an Amazon Chime <code>AppInstance</code>. The request consists of a unique <code>appInstanceUserId</code> and <code>Name</code> for that user.",
        "operationId" : "CreateAppInstanceUser",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "ClientRequestToken" : {
                    "description" : "The token assigned to the user requesting an <code>AppInstance</code>.",
                    "format" : "password",
                    "maxLength" : 64,
                    "minLength" : 2,
                    "pattern" : "[-_a-zA-Z0-9]*",
                    "type" : "string"
                  },
                  "AppInstanceUserId" : {
                    "description" : "The user ID of the <code>AppInstance</code>.",
                    "format" : "password",
                    "maxLength" : 64,
                    "minLength" : 1,
                    "pattern" : "[A-Za-z0-9]([A-Za-z0-9\\:\\-\\_\\.\\@]{0,62}[A-Za-z0-9])?",
                    "type" : "string"
                  },
                  "Metadata" : {
                    "description" : "The request's metadata. Limited to a 1KB string in UTF-8.",
                    "format" : "password",
                    "maxLength" : 1024,
                    "minLength" : 0,
                    "pattern" : ".*",
                    "type" : "string"
                  },
                  "AppInstanceArn" : {
                    "description" : "The ARN of the <code>AppInstance</code> request.",
                    "maxLength" : 1600,
                    "minLength" : 5,
                    "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                    "type" : "string"
                  },
                  "Tags" : {
                    "description" : "Tags assigned to the <code>AppInstanceUser</code>.",
                    "maxItems" : 50,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Tag"
                    }
                  },
                  "Name" : {
                    "description" : "The user's name.",
                    "format" : "password",
                    "maxLength" : 100,
                    "minLength" : 1,
                    "pattern" : ".*\\S.*",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "AppInstanceArn", "AppInstanceUserId", "Name", "ClientRequestToken" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateAppInstanceUserResponse"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          }
        }
      }
    },
    "/channels/{channelArn}/bans/{memberArn}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "<p>Returns the full details of a channel ban.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "DescribeChannelBan",
        "parameters" : [ {
          "description" : "The ARN of the channel from which the user is banned.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The ARN of the member being banned.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "memberArn"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DescribeChannelBanResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "<p>Removes a user from a channel's ban list.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "DeleteChannelBan",
        "parameters" : [ {
          "description" : "The ARN of the channel from which the <code>AppInstanceUser</code> was banned.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The ARN of the <code>AppInstanceUser</code> that you want to reinstate.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "memberArn"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/channels/{channelArn}/moderators/{channelModeratorArn}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "<p>Returns the full details of a single ChannelModerator.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "DescribeChannelModerator",
        "parameters" : [ {
          "description" : "The ARN of the channel.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The ARN of the channel moderator.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelModeratorArn"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DescribeChannelModeratorResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "<p>Deletes a channel moderator.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "DeleteChannelModerator",
        "parameters" : [ {
          "description" : "The ARN of the channel.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The ARN of the moderator being deleted.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelModeratorArn"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/app-instance-users/{appInstanceUserArn}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Returns the full details of an <code>AppInstanceUser</code>.",
        "operationId" : "DescribeAppInstanceUser",
        "parameters" : [ {
          "description" : "The ARN of the <code>AppInstanceUser</code>.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appInstanceUserArn"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DescribeAppInstanceUserResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the details of an <code>AppInstanceUser</code>. You can update names and metadata.",
        "operationId" : "UpdateAppInstanceUser",
        "parameters" : [ {
          "description" : "The ARN of the <code>AppInstanceUser</code>.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appInstanceUserArn"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Metadata" : {
                    "description" : "The metadata of the <code>AppInstanceUser</code>.",
                    "format" : "password",
                    "maxLength" : 1024,
                    "minLength" : 0,
                    "pattern" : ".*",
                    "type" : "string"
                  },
                  "Name" : {
                    "description" : "The name of the <code>AppInstanceUser</code>.",
                    "format" : "password",
                    "maxLength" : 100,
                    "minLength" : 1,
                    "pattern" : ".*\\S.*",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateAppInstanceUserResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes an <code>AppInstanceUser</code>.",
        "operationId" : "DeleteAppInstanceUser",
        "parameters" : [ {
          "description" : "The ARN of the user request being deleted.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "appInstanceUserArn"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      }
    },
    "/channels/{channelArn}/memberships/{memberArn}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "<p>Returns the full details of a user's channel membership.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "DescribeChannelMembership",
        "parameters" : [ {
          "description" : "The ARN of the channel.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The ARN of the member.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "memberArn"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DescribeChannelMembershipResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "<p>Removes a member from a channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>",
        "operationId" : "DeleteChannelMembership",
        "parameters" : [ {
          "description" : "The ARN of the channel from which you want to remove the user.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "channelArn"
        }, {
          "description" : "The ARN of the member that you're removing from the channel.",
          "required" : true,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "memberArn"
        }, {
          "description" : "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
          "required" : false,
          "schema" : {
            "maxLength" : 1600,
            "minLength" : 5,
            "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "type" : "string"
          },
          "in" : "header",
          "name" : "x-amz-chime-bearer"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          }
        }
      }
    },
    "/endpoints/messaging-session" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "The details of the endpoint for the messaging session.",
        "operationId" : "GetMessagingSessionEndpoint",
        "responses" : {
          "484" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetMessagingSessionEndpointResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/attendees/{attendeeId}/tags" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "Lists the tags applied to an Amazon Chime SDK attendee resource.",
        "operationId" : "ListAttendeeTags",
        "parameters" : [ {
          "description" : "The Amazon Chime SDK meeting ID.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "meetingId"
        }, {
          "description" : "The Amazon Chime SDK attendee ID.",
          "required" : true,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "type" : "string"
          },
          "in" : "path",
          "name" : "attendeeId"
        } ],
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListAttendeeTagsResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/voice-connectors/{voiceConnectorId}#operation=associate-phone-numbers" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Associates phone numbers with the specified Amazon Chime Voice Connector.",
        "operationId" : "AssociatePhoneNumbersWithVoiceConnector",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "associate-phone-numbers" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "E164PhoneNumbers" : {
                    "description" : "List of phone numbers, in E.164 format.",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/E164PhoneNumber"
                    }
                  },
                  "ForceAssociate" : {
                    "description" : "If true, associates the provided phone numbers with the provided Amazon Chime Voice Connector and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations.",
                    "type" : "boolean"
                  }
                },
                "type" : "object",
                "required" : [ "E164PhoneNumbers" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociatePhoneNumbersWithVoiceConnectorResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/meetings" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Lists up to 100 active Amazon Chime SDK meetings. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "operationId" : "ListMeetings",
        "parameters" : [ {
          "description" : "The token to use to retrieve the next page of results.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "next-token"
        }, {
          "description" : "The maximum number of results to return in a single call.",
          "required" : false,
          "schema" : {
            "maximum" : 99,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "max-results"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "484" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListMeetingsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : " Creates a new Amazon Chime SDK meeting in the specified media Region with no initial attendees. For more information about specifying media Regions, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/chime-sdk-meetings-regions.html\">Amazon Chime SDK Media Regions</a> in the <i>Amazon Chime Developer Guide</i> . For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i> . ",
        "operationId" : "CreateMeeting",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "ClientRequestToken" : {
                    "description" : "The unique identifier for the client request. Use a different token for different meetings.",
                    "format" : "password",
                    "maxLength" : 64,
                    "minLength" : 2,
                    "pattern" : "[-_a-zA-Z0-9]*",
                    "type" : "string"
                  },
                  "MeetingHostId" : {
                    "description" : "Reserved.",
                    "format" : "password",
                    "maxLength" : 64,
                    "minLength" : 2,
                    "type" : "string"
                  },
                  "MediaRegion" : {
                    "description" : "<p> The Region in which to create the meeting. Default: <code>us-east-1</code>. </p> <p> Available values: <code>af-south-1</code> , <code>ap-northeast-1</code> , <code>ap-northeast-2</code> , <code>ap-south-1</code> , <code>ap-southeast-1</code> , <code>ap-southeast-2</code> , <code>ca-central-1</code> , <code>eu-central-1</code> , <code>eu-north-1</code> , <code>eu-south-1</code> , <code>eu-west-1</code> , <code>eu-west-2</code> , <code>eu-west-3</code> , <code>sa-east-1</code> , <code>us-east-1</code> , <code>us-east-2</code> , <code>us-west-1</code> , <code>us-west-2</code> . </p>",
                    "type" : "string"
                  },
                  "ExternalMeetingId" : {
                    "description" : "The external meeting ID.",
                    "format" : "password",
                    "maxLength" : 64,
                    "minLength" : 2,
                    "type" : "string"
                  },
                  "Tags" : {
                    "description" : "The tag key-value pairs.",
                    "maxItems" : 50,
                    "minItems" : 1,
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Tag"
                    }
                  },
                  "NotificationsConfiguration" : {
                    "description" : " The resource target configurations for receiving Amazon Chime SDK meeting and attendee event notifications. The Amazon Chime SDK supports resource targets located in the US East (N. Virginia) AWS Region (<code>us-east-1</code>). ",
                    "properties" : {
                      "SqsQueueArn" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Arn"
                        }, {
                          "description" : "The SQS queue ARN."
                        } ]
                      },
                      "SnsTopicArn" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Arn"
                        }, {
                          "description" : "The SNS topic ARN."
                        } ]
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object",
                "required" : [ "ClientRequestToken" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateMeetingResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482" : {
            "description" : "ResourceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "483" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/users/{userId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "<p>Retrieves details for the specified user ID, such as primary email address, license type,and personal meeting PIN.</p> <p> To retrieve user details with an email address instead of a user ID, use the <a>ListUsers</a> action, and then filter by email address. </p>",
        "operationId" : "GetUser",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The user ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "userId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetUserResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Updates user details for a specified user ID. Currently, only <code>LicenseType</code> updates are supported for this action.",
        "operationId" : "UpdateUser",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The user ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "userId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "UserType" : {
                    "description" : "The user type.",
                    "type" : "string",
                    "enum" : [ "PrivateUser", "SharedDevice" ]
                  },
                  "AlexaForBusinessMetadata" : {
                    "description" : "The Alexa for Business metadata associated with an Amazon Chime user, used to integrate Alexa for Business with a device.",
                    "properties" : {
                      "IsAlexaForBusinessEnabled" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Boolean"
                        }, {
                          "description" : "Starts or stops Alexa for Business."
                        } ]
                      },
                      "AlexaForBusinessRoomArn" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/SensitiveString"
                        }, {
                          "description" : "The ARN of the room resource."
                        } ]
                      }
                    },
                    "type" : "object"
                  },
                  "LicenseType" : {
                    "description" : "The user license type to update. This must be a supported license type for the Amazon Chime account that the user belongs to.",
                    "type" : "string",
                    "enum" : [ "Basic", "Plus", "Pro", "ProTrial" ]
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/retention-settings" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : " Gets the retention settings for the specified Amazon Chime Enterprise account. For more information about retention settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/chat-retention.html\">Managing Chat Retention Policies</a> in the <i>Amazon Chime Administration Guide</i>. ",
        "operationId" : "GetRetentionSettings",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetRetentionSettingsResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "<p> Puts retention settings for the specified Amazon Chime Enterprise account. We recommend using AWS CloudTrail to monitor usage of this API for your account. For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/cloudtrail.html\">Logging Amazon Chime API Calls with AWS CloudTrail</a> in the <i>Amazon Chime Administration Guide</i>.</p> <p> To turn off existing retention settings, remove the number of days from the corresponding <b>RetentionDays</b> field in the <b>RetentionSettings</b> object. For more information about retention settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/chat-retention.html\">Managing Chat Retention Policies</a> in the <i>Amazon Chime Administration Guide</i>.</p>",
        "operationId" : "PutRetentionSettings",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "RetentionSettings" : {
                    "description" : "The retention settings for an Amazon Chime Enterprise account that determine how long to retain items such as chat-room messages and chat-conversation messages.",
                    "properties" : {
                      "RoomRetentionSettings" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/RoomRetentionSettings"
                        }, {
                          "description" : "The chat room retention settings."
                        } ]
                      },
                      "ConversationRetentionSettings" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/ConversationRetentionSettings"
                        }, {
                          "description" : "The chat conversation retention settings."
                        } ]
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object",
                "required" : [ "RetentionSettings" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "485" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "204" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PutRetentionSettingsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/users/{userId}#operation=reset-personal-pin" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Resets the personal meeting PIN for the specified user on an Amazon Chime account. Returns the <a>User</a> object with the updated personal meeting PIN.",
        "operationId" : "ResetPersonalPIN",
        "parameters" : [ {
          "description" : "The Amazon Chime account ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "accountId"
        }, {
          "description" : "The user ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "userId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "reset-personal-pin" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResetPersonalPINResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    },
    "/voice-connectors/{voiceConnectorId}#operation=disassociate-phone-numbers" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "post" : {
        "description" : "Disassociates the specified phone numbers from the specified Amazon Chime Voice Connector.",
        "operationId" : "DisassociatePhoneNumbersFromVoiceConnector",
        "parameters" : [ {
          "description" : "The Amazon Chime Voice Connector ID.",
          "required" : true,
          "schema" : {
            "pattern" : ".*\\S.*",
            "type" : "string"
          },
          "in" : "path",
          "name" : "voiceConnectorId"
        }, {
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "disassociate-phone-numbers" ]
          },
          "in" : "query",
          "name" : "operation"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "E164PhoneNumbers" : {
                    "description" : "List of phone numbers, in E.164 format.",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/E164PhoneNumber"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "E164PhoneNumbers" ]
              }
            }
          }
        },
        "responses" : {
          "484" : {
            "description" : "ThrottledClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485" : {
            "description" : "ServiceUnavailableException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DisassociatePhoneNumbersFromVoiceConnectorResponse"
                }
              }
            }
          },
          "486" : {
            "description" : "ServiceFailureException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "480" : {
            "description" : "UnauthorizedClientException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481" : {
            "description" : "NotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482" : {
            "description" : "ForbiddenException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483" : {
            "description" : "BadRequestException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestException"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "parameters" : {
      "X-Amz-Date" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Date"
      },
      "X-Amz-Algorithm" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Algorithm"
      },
      "X-Amz-Signature" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-SignedHeaders"
      },
      "X-Amz-Security-Token" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Security-Token"
      },
      "X-Amz-Credential" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Credential"
      },
      "X-Amz-Content-Sha256" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Content-Sha256"
      }
    },
    "schemas" : {
      "BatchCreateChannelMembershipError" : {
        "description" : "A list of failed member ARNs, error codes, and error messages.",
        "properties" : {
          "MemberArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the member that the service couldn't add."
            } ]
          },
          "ErrorCode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ErrorCode"
            }, {
              "description" : "The error code."
            } ]
          },
          "ErrorMessage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The error message."
            } ]
          }
        },
        "type" : "object"
      },
      "LogoutUserRequest" : {
        "type" : "object",
        "title" : "LogoutUserRequest"
      },
      "VoiceConnectorGroupName" : {
        "maxLength" : 256,
        "minLength" : 1,
        "type" : "string"
      },
      "BatchCreateRoomMembershipResponse" : {
        "properties" : {
          "Errors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MemberErrorList"
            }, {
              "description" : "If the action fails for one or more of the member IDs in the request, a list of the member IDs is returned, along with error codes and error messages."
            } ]
          }
        },
        "type" : "object"
      },
      "GetAppInstanceRetentionSettingsRequest" : {
        "type" : "object",
        "title" : "GetAppInstanceRetentionSettingsRequest"
      },
      "SipMediaApplicationLoggingConfiguration" : {
        "description" : "Logging configuration of the SIP media application.",
        "properties" : {
          "EnableSipMediaApplicationMessageLogs" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Boolean"
            }, {
              "description" : "Enables application message logs for the SIP media application."
            } ]
          }
        },
        "type" : "object"
      },
      "String" : {
        "type" : "string"
      },
      "CreateProxySessionResponse" : {
        "properties" : {
          "ProxySession" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProxySession"
            }, {
              "description" : "The proxy session details."
            } ]
          }
        },
        "type" : "object"
      },
      "PhoneNumberOrderList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/PhoneNumberOrder"
        }
      },
      "Participants" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Participant"
        }
      },
      "CreateSipMediaApplicationCallResponse" : {
        "properties" : {
          "SipMediaApplicationCall" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipMediaApplicationCall"
            }, {
              "description" : "The actual call."
            } ]
          }
        },
        "type" : "object"
      },
      "AssociatePhoneNumbersWithVoiceConnectorGroupRequest" : {
        "properties" : {
          "E164PhoneNumbers" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/E164PhoneNumberList"
            }, {
              "description" : "List of phone numbers, in E.164 format."
            } ]
          },
          "ForceAssociate" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NullableBoolean"
            }, {
              "description" : "If true, associates the provided phone numbers with the provided Amazon Chime Voice Connector Group and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations."
            } ]
          }
        },
        "type" : "object",
        "title" : "AssociatePhoneNumbersWithVoiceConnectorGroupRequest",
        "required" : [ "E164PhoneNumbers" ]
      },
      "EngineTranscribeMedicalSettings" : {
        "description" : "Settings specific to the Amazon Transcribe Medical engine.",
        "properties" : {
          "Specialty" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TranscribeMedicalSpecialty"
            }, {
              "description" : "The specialty specified for the Amazon Transcribe Medical engine."
            } ]
          },
          "LanguageCode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TranscribeMedicalLanguageCode"
            }, {
              "description" : "The language code specified for the Amazon Transcribe Medical engine."
            } ]
          },
          "Type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TranscribeMedicalType"
            }, {
              "description" : "The type of transcription."
            } ]
          },
          "VocabularyName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The name of the vocabulary passed to Amazon Transcribe Medical."
            } ]
          },
          "Region" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TranscribeMedicalRegion"
            }, {
              "description" : "The AWS Region passed to Amazon Transcribe Medical. If you don't specify a Region, Amazon Chime uses the meeting's Region."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "LanguageCode", "Specialty", "Type" ]
      },
      "BatchUpdateUserResponse" : {
        "properties" : {
          "UserErrors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserErrorList"
            }, {
              "description" : "If the <a>BatchUpdateUser</a> action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages."
            } ]
          }
        },
        "type" : "object"
      },
      "CreateAppInstanceUserResponse" : {
        "properties" : {
          "AppInstanceUserArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The user's ARN."
            } ]
          }
        },
        "type" : "object"
      },
      "MembershipItem" : {
        "description" : "Membership details, such as member ID and member role.",
        "properties" : {
          "Role" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RoomMembershipRole"
            }, {
              "description" : "The member role."
            } ]
          },
          "MemberId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The member ID."
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateUserRequestItemList" : {
        "maxItems" : 20,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/UpdateUserRequestItem"
        }
      },
      "AssociatePhoneNumberWithUserRequest" : {
        "properties" : {
          "E164PhoneNumber" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/E164PhoneNumber"
            }, {
              "description" : "The phone number, in E.164 format."
            } ]
          }
        },
        "type" : "object",
        "title" : "AssociatePhoneNumberWithUserRequest",
        "required" : [ "E164PhoneNumber" ]
      },
      "PutVoiceConnectorProxyRequest" : {
        "properties" : {
          "FallBackPhoneNumber" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/E164PhoneNumber"
            }, {
              "description" : "The phone number to route calls to after a proxy session expires."
            } ]
          },
          "PhoneNumberPoolCountries" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CountryList"
            }, {
              "description" : "The countries for proxy phone numbers to be selected from."
            } ]
          },
          "Disabled" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Boolean"
            }, {
              "description" : "When true, stops proxy sessions from being created on the specified Amazon Chime Voice Connector."
            } ]
          },
          "DefaultSessionExpiryMinutes" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Integer"
            }, {
              "description" : "The default number of minutes allowed for proxy sessions."
            } ]
          }
        },
        "type" : "object",
        "title" : "PutVoiceConnectorProxyRequest",
        "required" : [ "DefaultSessionExpiryMinutes", "PhoneNumberPoolCountries" ]
      },
      "ListChannelsRequest" : {
        "type" : "object",
        "title" : "ListChannelsRequest"
      },
      "DescribeAppInstanceUserResponse" : {
        "properties" : {
          "AppInstanceUser" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppInstanceUser"
            }, {
              "description" : "The name of the <code>AppInstanceUser</code>."
            } ]
          }
        },
        "type" : "object"
      },
      "FunctionArn" : {
        "format" : "password",
        "maxLength" : 10000,
        "pattern" : "arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:function:[a-zA-Z0-9-_]+(:(\\$LATEST|[a-zA-Z0-9-_]+))?",
        "type" : "string"
      },
      "UpdateSipMediaApplicationCallResponse" : {
        "properties" : {
          "SipMediaApplicationCall" : {
            "$ref" : "#/components/schemas/SipMediaApplicationCall"
          }
        },
        "type" : "object"
      },
      "MaxResults" : {
        "maximum" : 50,
        "minimum" : 1,
        "type" : "integer"
      },
      "DescribeChannelBanResponse" : {
        "properties" : {
          "ChannelBan" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelBan"
            }, {
              "description" : "The details of the ban."
            } ]
          }
        },
        "type" : "object"
      },
      "CreateRoomResponse" : {
        "properties" : {
          "Room" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Room"
            }, {
              "description" : "The room details."
            } ]
          }
        },
        "type" : "object"
      },
      "DisassociateSigninDelegateGroupsFromAccountResponse" : {
        "type" : "object"
      },
      "DescribeChannelModeratedByAppInstanceUserRequest" : {
        "type" : "object",
        "title" : "DescribeChannelModeratedByAppInstanceUserRequest"
      },
      "E164PhoneNumberList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/E164PhoneNumber"
        }
      },
      "GetMessagingSessionEndpointResponse" : {
        "properties" : {
          "Endpoint" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MessagingSessionEndpoint"
            }, {
              "description" : "The endpoint returned in the response."
            } ]
          }
        },
        "type" : "object"
      },
      "DeleteProxySessionRequest" : {
        "type" : "object",
        "title" : "DeleteProxySessionRequest"
      },
      "SearchAvailablePhoneNumbersRequest" : {
        "type" : "object",
        "title" : "SearchAvailablePhoneNumbersRequest"
      },
      "E164PhoneNumber" : {
        "format" : "password",
        "pattern" : "^\\+?[1-9]\\d{1,14}$",
        "type" : "string"
      },
      "DeletePhoneNumberRequest" : {
        "type" : "object",
        "title" : "DeletePhoneNumberRequest"
      },
      "SipRuleTargetApplication" : {
        "description" : "Target SIP media application and other details, such as priority and AWS Region, to be specified in the SIP rule. Only one SIP rule per AWS Region can be provided.",
        "properties" : {
          "SipMediaApplicationId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The SIP media application ID."
            } ]
          },
          "AwsRegion" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The AWS Region of the target application."
            } ]
          },
          "Priority" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipApplicationPriority"
            }, {
              "description" : "Priority of the SIP media application in the target list."
            } ]
          }
        },
        "type" : "object"
      },
      "DeleteVoiceConnectorOriginationRequest" : {
        "type" : "object",
        "title" : "DeleteVoiceConnectorOriginationRequest"
      },
      "ListSipMediaApplicationsRequest" : {
        "type" : "object",
        "title" : "ListSipMediaApplicationsRequest"
      },
      "ChannelModeratedByAppInstanceUserSummaryList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ChannelModeratedByAppInstanceUserSummary"
        }
      },
      "GeoMatchParams" : {
        "description" : "The country and area code for a proxy phone number in a proxy phone session.",
        "properties" : {
          "Country" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Country"
            }, {
              "description" : "The country."
            } ]
          },
          "AreaCode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AreaCode"
            }, {
              "description" : "The area code."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "Country", "AreaCode" ]
      },
      "UrlType" : {
        "maxLength" : 4096,
        "type" : "string"
      },
      "PutAppInstanceRetentionSettingsResponse" : {
        "properties" : {
          "InitiateDeletionTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time at which the API deletes data."
            } ]
          },
          "AppInstanceRetentionSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppInstanceRetentionSettings"
            }, {
              "description" : "The time in days to retain data. Data type: number."
            } ]
          }
        },
        "type" : "object"
      },
      "ChannelModerator" : {
        "description" : "The details of a channel moderator.",
        "properties" : {
          "Moderator" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identity"
            }, {
              "description" : "The moderator's data."
            } ]
          },
          "ChannelArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the moderator's channel."
            } ]
          },
          "CreatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time at which the moderator was created."
            } ]
          },
          "CreatedBy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identity"
            }, {
              "description" : "The <code>AppInstanceUser</code> who created the moderator."
            } ]
          }
        },
        "type" : "object"
      },
      "DescribeChannelMembershipRequest" : {
        "type" : "object",
        "title" : "DescribeChannelMembershipRequest"
      },
      "PutVoiceConnectorLoggingConfigurationRequest" : {
        "properties" : {
          "LoggingConfiguration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/LoggingConfiguration"
            }, {
              "description" : "The logging configuration details to add."
            } ]
          }
        },
        "type" : "object",
        "title" : "PutVoiceConnectorLoggingConfigurationRequest",
        "required" : [ "LoggingConfiguration" ]
      },
      "UpdateAppInstanceUserRequest" : {
        "properties" : {
          "Metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Metadata"
            }, {
              "description" : "The metadata of the <code>AppInstanceUser</code>."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserName"
            }, {
              "description" : "The name of the <code>AppInstanceUser</code>."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateAppInstanceUserRequest",
        "required" : [ "Name" ]
      },
      "CreateMeetingWithAttendeesRequest" : {
        "properties" : {
          "ClientRequestToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ClientRequestToken"
            }, {
              "description" : "The unique identifier for the client request. Use a different token for different meetings."
            } ]
          },
          "Attendees" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateMeetingWithAttendeesRequestItemList"
            }, {
              "description" : "The request containing the attendees to create."
            } ]
          },
          "MeetingHostId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ExternalUserIdType"
            }, {
              "description" : "Reserved."
            } ]
          },
          "MediaRegion" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "<p> The Region in which to create the meeting. Default: <code>us-east-1</code> . </p> <p> Available values: <code>af-south-1</code> , <code>ap-northeast-1</code> , <code>ap-northeast-2</code> , <code>ap-south-1</code> , <code>ap-southeast-1</code> , <code>ap-southeast-2</code> , <code>ca-central-1</code> , <code>eu-central-1</code> , <code>eu-north-1</code> , <code>eu-south-1</code> , <code>eu-west-1</code> , <code>eu-west-2</code> , <code>eu-west-3</code> , <code>sa-east-1</code> , <code>us-east-1</code> , <code>us-east-2</code> , <code>us-west-1</code> , <code>us-west-2</code> . </p>"
            } ]
          },
          "ExternalMeetingId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ExternalMeetingIdType"
            }, {
              "description" : "The external meeting ID."
            } ]
          },
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MeetingTagList"
            }, {
              "description" : "The tag key-value pairs."
            } ]
          },
          "NotificationsConfiguration" : {
            "$ref" : "#/components/schemas/MeetingNotificationConfiguration"
          }
        },
        "type" : "object",
        "title" : "CreateMeetingWithAttendeesRequest",
        "required" : [ "ClientRequestToken" ]
      },
      "ListChannelBansResponse" : {
        "properties" : {
          "ChannelArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the channel."
            } ]
          },
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : "The token passed by previous API calls until all requested bans are returned."
            } ]
          },
          "ChannelBans" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelBanSummaryList"
            }, {
              "description" : "The information for each requested ban."
            } ]
          }
        },
        "type" : "object"
      },
      "String128" : {
        "maxLength" : 128,
        "type" : "string"
      },
      "ListMeetingTagsRequest" : {
        "type" : "object",
        "title" : "ListMeetingTagsRequest"
      },
      "ChannelMembershipForAppInstanceUserSummaryList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ChannelMembershipForAppInstanceUserSummary"
        }
      },
      "PutVoiceConnectorStreamingConfigurationRequest" : {
        "properties" : {
          "StreamingConfiguration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StreamingConfiguration"
            }, {
              "description" : "The streaming configuration details to add."
            } ]
          }
        },
        "type" : "object",
        "title" : "PutVoiceConnectorStreamingConfigurationRequest",
        "required" : [ "StreamingConfiguration" ]
      },
      "ProxySession" : {
        "description" : "The proxy session for an Amazon Chime Voice Connector.",
        "properties" : {
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProxySessionStatus"
            }, {
              "description" : "The status of the proxy session."
            } ]
          },
          "UpdatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The updated time stamp, in ISO 8601 format."
            } ]
          },
          "VoiceConnectorId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString128"
            }, {
              "description" : "The Amazon Chime voice connector ID."
            } ]
          },
          "EndedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The ended time stamp, in ISO 8601 format."
            } ]
          },
          "CreatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The created time stamp, in ISO 8601 format."
            } ]
          },
          "NumberSelectionBehavior" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NumberSelectionBehavior"
            }, {
              "description" : "The preference for proxy phone number reuse, or stickiness, between the same participants across sessions."
            } ]
          },
          "ProxySessionId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString128"
            }, {
              "description" : "The proxy session ID."
            } ]
          },
          "Participants" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Participants"
            }, {
              "description" : "The proxy session participants."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String128"
            }, {
              "description" : "The name of the proxy session."
            } ]
          },
          "ExpiryMinutes" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PositiveInteger"
            }, {
              "description" : "The number of minutes allowed for the proxy session."
            } ]
          },
          "GeoMatchLevel" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GeoMatchLevel"
            }, {
              "description" : "The preference for matching the country or area code of the proxy phone number with that of the first participant."
            } ]
          },
          "Capabilities" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CapabilityList"
            }, {
              "description" : "The proxy session capabilities."
            } ]
          },
          "GeoMatchParams" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GeoMatchParams"
            }, {
              "description" : "The country and area code for the proxy phone number."
            } ]
          }
        },
        "type" : "object"
      },
      "PhoneNumberAssociation" : {
        "description" : "The phone number associations, such as Amazon Chime account ID, Amazon Chime user ID, Amazon Chime Voice Connector ID, or Amazon Chime Voice Connector group ID.",
        "properties" : {
          "AssociatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The timestamp of the phone number association, in ISO 8601 format."
            } ]
          },
          "Value" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "Contains the ID for the entity specified in Name."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberAssociationName"
            }, {
              "description" : "Defines the association with an Amazon Chime account ID, user ID, Amazon Chime Voice Connector ID, or Amazon Chime Voice Connector group ID."
            } ]
          }
        },
        "type" : "object"
      },
      "TagKey" : {
        "format" : "password",
        "maxLength" : 128,
        "minLength" : 1,
        "type" : "string"
      },
      "DeleteVoiceConnectorEmergencyCallingConfigurationRequest" : {
        "type" : "object",
        "title" : "DeleteVoiceConnectorEmergencyCallingConfigurationRequest"
      },
      "DataRetentionInHours" : {
        "minimum" : 0,
        "type" : "integer"
      },
      "RedactConversationMessageResponse" : {
        "type" : "object"
      },
      "MemberErrorList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/MemberError"
        }
      },
      "ChannelMembershipForAppInstanceUserSummary" : {
        "description" : "Summary of the channel membership details of an <code>AppInstanceUser</code>.",
        "properties" : {
          "ChannelSummary" : {
            "$ref" : "#/components/schemas/ChannelSummary"
          },
          "AppInstanceUserMembershipSummary" : {
            "$ref" : "#/components/schemas/AppInstanceUserMembershipSummary"
          }
        },
        "type" : "object"
      },
      "RedactRoomMessageRequest" : {
        "type" : "object",
        "title" : "RedactRoomMessageRequest"
      },
      "CreateChannelMembershipRequest" : {
        "properties" : {
          "MemberArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the member you want to add to the channel."
            } ]
          },
          "Type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelMembershipType"
            }, {
              "description" : "The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned. This is only supported by moderators."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateChannelMembershipRequest",
        "required" : [ "MemberArn", "Type" ]
      },
      "ListUsersRequest" : {
        "type" : "object",
        "title" : "ListUsersRequest"
      },
      "PutVoiceConnectorProxyResponse" : {
        "properties" : {
          "Proxy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Proxy"
            }, {
              "description" : "The proxy configuration details."
            } ]
          }
        },
        "type" : "object"
      },
      "GetSipMediaApplicationLoggingConfigurationRequest" : {
        "type" : "object",
        "title" : "GetSipMediaApplicationLoggingConfigurationRequest"
      },
      "AppInstanceDataType" : {
        "type" : "string",
        "enum" : [ "Channel", "ChannelMessage" ]
      },
      "ConversationRetentionSettings" : {
        "description" : "The retention settings that determine how long to retain conversation messages for an Amazon Chime Enterprise account.",
        "properties" : {
          "RetentionDays" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RetentionDays"
            }, {
              "description" : "The number of days for which to retain conversation messages."
            } ]
          }
        },
        "type" : "object"
      },
      "SipRuleTargetApplicationList" : {
        "maxItems" : 25,
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/SipRuleTargetApplication"
        }
      },
      "GetVoiceConnectorLoggingConfigurationResponse" : {
        "properties" : {
          "LoggingConfiguration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/LoggingConfiguration"
            }, {
              "description" : "The logging configuration details."
            } ]
          }
        },
        "type" : "object"
      },
      "VoiceConnectorGroup" : {
        "description" : "The Amazon Chime Voice Connector group configuration, including associated Amazon Chime Voice Connectors. You can include Amazon Chime Voice Connectors from different AWS Regions in your group. This creates a fault tolerant mechanism for fallback in case of availability events.",
        "properties" : {
          "VoiceConnectorGroupId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The Amazon Chime Voice Connector group ID."
            } ]
          },
          "UpdatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The updated Amazon Chime Voice Connector group time stamp, in ISO 8601 format."
            } ]
          },
          "CreatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The Amazon Chime Voice Connector group creation time stamp, in ISO 8601 format."
            } ]
          },
          "VoiceConnectorItems" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnectorItemList"
            }, {
              "description" : "The Amazon Chime Voice Connectors to which to route inbound calls."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnectorGroupName"
            }, {
              "description" : "The name of the Amazon Chime Voice Connector group."
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateProxySessionRequest" : {
        "properties" : {
          "ExpiryMinutes" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PositiveInteger"
            }, {
              "description" : "The number of minutes allowed for the proxy session."
            } ]
          },
          "Capabilities" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CapabilityList"
            }, {
              "description" : "The proxy session capabilities."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateProxySessionRequest",
        "required" : [ "Capabilities" ]
      },
      "CallingRegionList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CallingRegion"
        }
      },
      "CreateMeetingDialOutResponse" : {
        "properties" : {
          "TransactionId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuidString"
            }, {
              "description" : "Unique ID that tracks API calls."
            } ]
          }
        },
        "type" : "object"
      },
      "ListMediaCapturePipelinesResponse" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The token used to retrieve the next page of results. "
            } ]
          },
          "MediaCapturePipelines" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaCapturePipelineList"
            }, {
              "description" : "The media capture pipeline objects in the list."
            } ]
          }
        },
        "type" : "object"
      },
      "TagAttendeeRequest" : {
        "properties" : {
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AttendeeTagList"
            }, {
              "description" : "The tag key-value pairs."
            } ]
          }
        },
        "type" : "object",
        "title" : "TagAttendeeRequest",
        "required" : [ "Tags" ]
      },
      "SMAUpdateCallArgumentsMap" : {
        "maxProperties" : 20,
        "minProperties" : 0,
        "type" : "object",
        "additionalProperties" : {
          "$ref" : "#/components/schemas/SensitiveString"
        }
      },
      "PutRetentionSettingsRequest" : {
        "properties" : {
          "RetentionSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RetentionSettings"
            }, {
              "description" : "The retention settings."
            } ]
          }
        },
        "type" : "object",
        "title" : "PutRetentionSettingsRequest",
        "required" : [ "RetentionSettings" ]
      },
      "BatchCreateChannelMembershipErrors" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/BatchCreateChannelMembershipError"
        }
      },
      "VoiceConnectorItemList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/VoiceConnectorItem"
        }
      },
      "CreateRoomMembershipResponse" : {
        "properties" : {
          "RoomMembership" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RoomMembership"
            }, {
              "description" : "The room membership details."
            } ]
          }
        },
        "type" : "object"
      },
      "PutVoiceConnectorTerminationCredentialsRequest" : {
        "properties" : {
          "Credentials" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CredentialList"
            }, {
              "description" : "The termination SIP credentials."
            } ]
          }
        },
        "type" : "object",
        "title" : "PutVoiceConnectorTerminationCredentialsRequest"
      },
      "Port" : {
        "maximum" : 65535,
        "minimum" : 0,
        "type" : "integer"
      },
      "PutVoiceConnectorEmergencyCallingConfigurationRequest" : {
        "properties" : {
          "EmergencyCallingConfiguration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EmergencyCallingConfiguration"
            }, {
              "description" : "The emergency calling configuration details."
            } ]
          }
        },
        "type" : "object",
        "title" : "PutVoiceConnectorEmergencyCallingConfigurationRequest",
        "required" : [ "EmergencyCallingConfiguration" ]
      },
      "UpdateVoiceConnectorGroupResponse" : {
        "properties" : {
          "VoiceConnectorGroup" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnectorGroup"
            }, {
              "description" : "The updated Amazon Chime Voice Connector group details."
            } ]
          }
        },
        "type" : "object"
      },
      "BusinessCallingSettings" : {
        "description" : "The Amazon Chime Business Calling settings for the administrator's AWS account. Includes any Amazon S3 buckets designated for storing call detail records.",
        "properties" : {
          "CdrBucket" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The Amazon S3 bucket designated for call detail record storage."
            } ]
          }
        },
        "type" : "object"
      },
      "CpsLimit" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "UpdateRoomMembershipRequest" : {
        "properties" : {
          "Role" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RoomMembershipRole"
            }, {
              "description" : "The role of the member."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateRoomMembershipRequest"
      },
      "PutVoiceConnectorOriginationResponse" : {
        "properties" : {
          "Origination" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Origination"
            }, {
              "description" : "The updated origination setting details."
            } ]
          }
        },
        "type" : "object"
      },
      "CreateChannelBanResponse" : {
        "properties" : {
          "ChannelArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the response to the ban request."
            } ]
          },
          "Member" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identity"
            }, {
              "description" : "The <code>ChannelArn</code> and <code>BannedIdentity</code> of the member in the ban response."
            } ]
          }
        },
        "type" : "object"
      },
      "DescribeChannelModeratorRequest" : {
        "type" : "object",
        "title" : "DescribeChannelModeratorRequest"
      },
      "PhoneNumberCapabilities" : {
        "description" : "The phone number capabilities for Amazon Chime Business Calling phone numbers, such as enabled inbound and outbound calling and text messaging.",
        "properties" : {
          "InboundSMS" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NullableBoolean"
            }, {
              "description" : "Allows or denies inbound SMS messaging for the specified phone number."
            } ]
          },
          "OutboundMMS" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NullableBoolean"
            }, {
              "description" : "Allows or denies outbound MMS messaging for the specified phone number."
            } ]
          },
          "OutboundSMS" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NullableBoolean"
            }, {
              "description" : "Allows or denies outbound SMS messaging for the specified phone number."
            } ]
          },
          "InboundMMS" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NullableBoolean"
            }, {
              "description" : "Allows or denies inbound MMS messaging for the specified phone number."
            } ]
          },
          "OutboundCall" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NullableBoolean"
            }, {
              "description" : "Allows or denies outbound calling for the specified phone number."
            } ]
          },
          "InboundCall" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NullableBoolean"
            }, {
              "description" : "Allows or denies inbound calling for the specified phone number."
            } ]
          }
        },
        "type" : "object"
      },
      "ListChannelMembershipsResponse" : {
        "properties" : {
          "ChannelMemberships" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelMembershipSummaryList"
            }, {
              "description" : "The information for the requested channel memberships."
            } ]
          },
          "ChannelArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the channel."
            } ]
          },
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : "The token passed by previous API calls until all requested channel memberships are returned."
            } ]
          }
        },
        "type" : "object"
      },
      "AppInstance" : {
        "description" : "The details of an <code>AppInstance</code>, an instance of an Amazon Chime SDK messaging application.",
        "properties" : {
          "CreatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time at which an <code>AppInstance</code> was created. In epoch milliseconds."
            } ]
          },
          "LastUpdatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time an <code>AppInstance</code> was last updated. In epoch milliseconds."
            } ]
          },
          "Metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Metadata"
            }, {
              "description" : "The metadata of an <code>AppInstance</code>."
            } ]
          },
          "AppInstanceArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the messaging instance."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyResourceName"
            }, {
              "description" : "The name of an <code>AppInstance</code>."
            } ]
          }
        },
        "type" : "object"
      },
      "MeetingTagList" : {
        "maxItems" : 50,
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Tag"
        }
      },
      "UpdateAccountResponse" : {
        "properties" : {
          "Account" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Account"
            }, {
              "description" : "The updated Amazon Chime account details."
            } ]
          }
        },
        "type" : "object"
      },
      "UserSettings" : {
        "description" : "Settings associated with an Amazon Chime user, including inbound and outbound calling and text messaging.",
        "properties" : {
          "Telephony" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TelephonySettings"
            }, {
              "description" : "The telephony settings associated with the user."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "Telephony" ]
      },
      "GetBotRequest" : {
        "type" : "object",
        "title" : "GetBotRequest"
      },
      "GetVoiceConnectorEmergencyCallingConfigurationRequest" : {
        "type" : "object",
        "title" : "GetVoiceConnectorEmergencyCallingConfigurationRequest"
      },
      "NonEmptyContent" : {
        "format" : "password",
        "minLength" : 1,
        "pattern" : "[\\s\\S]*",
        "type" : "string"
      },
      "AttendeeTagKeyList" : {
        "maxItems" : 10,
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/TagKey"
        }
      },
      "DeleteVoiceConnectorProxyRequest" : {
        "type" : "object",
        "title" : "DeleteVoiceConnectorProxyRequest"
      },
      "DeleteSipRuleRequest" : {
        "type" : "object",
        "title" : "DeleteSipRuleRequest"
      },
      "DescribeChannelRequest" : {
        "type" : "object",
        "title" : "DescribeChannelRequest"
      },
      "AreaCode" : {
        "pattern" : "^$|^[0-9]{3,3}$",
        "type" : "string"
      },
      "GetAppInstanceStreamingConfigurationsResponse" : {
        "properties" : {
          "AppInstanceStreamingConfigurations" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppInstanceStreamingConfigurationList"
            }, {
              "description" : "The streaming settings."
            } ]
          }
        },
        "type" : "object"
      },
      "CreateVoiceConnectorResponse" : {
        "properties" : {
          "VoiceConnector" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnector"
            }, {
              "description" : "The Amazon Chime Voice Connector details."
            } ]
          }
        },
        "type" : "object"
      },
      "ExternalUserIdType" : {
        "format" : "password",
        "maxLength" : 64,
        "minLength" : 2,
        "type" : "string"
      },
      "UpdateAppInstanceRequest" : {
        "properties" : {
          "Metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Metadata"
            }, {
              "description" : "The metadata that you want to change."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyResourceName"
            }, {
              "description" : "The name that you want to change."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateAppInstanceRequest",
        "required" : [ "Name" ]
      },
      "RegenerateSecurityTokenRequest" : {
        "type" : "object",
        "title" : "RegenerateSecurityTokenRequest"
      },
      "UpdatePhoneNumberSettingsRequest" : {
        "properties" : {
          "CallingName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CallingName"
            }, {
              "description" : "The default outbound calling name for the account."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdatePhoneNumberSettingsRequest",
        "required" : [ "CallingName" ]
      },
      "GetMediaCapturePipelineResponse" : {
        "properties" : {
          "MediaCapturePipeline" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaCapturePipeline"
            }, {
              "description" : "The media capture pipeline object."
            } ]
          }
        },
        "type" : "object"
      },
      "OrderedPhoneNumberStatus" : {
        "type" : "string",
        "enum" : [ "Processing", "Acquired", "Failed" ]
      },
      "ChannelModeratorSummaryList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ChannelModeratorSummary"
        }
      },
      "NonEmptyString128" : {
        "maxLength" : 128,
        "minLength" : 1,
        "pattern" : ".*\\S.*",
        "type" : "string"
      },
      "CreateAttendeeRequestItemList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CreateAttendeeRequestItem"
        }
      },
      "SensitiveStringList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/SensitiveString"
        }
      },
      "Room" : {
        "description" : "The Amazon Chime chat room details.",
        "properties" : {
          "UpdatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The room update timestamp, in ISO 8601 format."
            } ]
          },
          "AccountId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The Amazon Chime account ID."
            } ]
          },
          "CreatedBy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The identifier of the room creator."
            } ]
          },
          "CreatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The room creation timestamp, in ISO 8601 format."
            } ]
          },
          "RoomId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The room ID."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveString"
            }, {
              "description" : "The room name."
            } ]
          }
        },
        "type" : "object"
      },
      "UserList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/User"
        }
      },
      "GetVoiceConnectorGroupResponse" : {
        "properties" : {
          "VoiceConnectorGroup" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnectorGroup"
            }, {
              "description" : "The Amazon Chime Voice Connector group details."
            } ]
          }
        },
        "type" : "object"
      },
      "CreateRoomRequest" : {
        "properties" : {
          "ClientRequestToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ClientRequestToken"
            }, {
              "description" : "The idempotency token for the request."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveString"
            }, {
              "description" : "The room name."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateRoomRequest",
        "required" : [ "Name" ]
      },
      "TagMeetingRequest" : {
        "properties" : {
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MeetingTagList"
            }, {
              "description" : "The tag key-value pairs."
            } ]
          }
        },
        "type" : "object",
        "title" : "TagMeetingRequest",
        "required" : [ "Tags" ]
      },
      "ForbiddenException" : { },
      "ChannelRetentionSettings" : {
        "description" : "The details of the retention settings for a channel.",
        "properties" : {
          "RetentionDays" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RetentionDays"
            }, {
              "description" : "The time in days to retain the messages in a channel."
            } ]
          }
        },
        "type" : "object"
      },
      "ListAppInstanceUsersRequest" : {
        "type" : "object",
        "title" : "ListAppInstanceUsersRequest"
      },
      "CreateChannelResponse" : {
        "properties" : {
          "ChannelArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the channel."
            } ]
          }
        },
        "type" : "object"
      },
      "AppInstanceStreamingConfiguration" : {
        "description" : "The details of the streaming configuration of an <code>AppInstance</code>.",
        "properties" : {
          "ResourceArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "The resource ARN."
            } ]
          },
          "AppInstanceDataType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppInstanceDataType"
            }, {
              "description" : "The type of data to be streamed."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "AppInstanceDataType", "ResourceArn" ]
      },
      "RoomRetentionSettings" : {
        "description" : "The retention settings that determine how long to retain chat-room messages for an Amazon Chime Enterprise account.",
        "properties" : {
          "RetentionDays" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RetentionDays"
            }, {
              "description" : "The number of days for which to retain chat-room messages."
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateAppInstanceUserResponse" : {
        "properties" : {
          "AppInstanceUserArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the <code>AppInstanceUser</code>."
            } ]
          }
        },
        "type" : "object"
      },
      "DeleteChannelRequest" : {
        "type" : "object",
        "title" : "DeleteChannelRequest"
      },
      "ListSupportedPhoneNumberCountriesResponse" : {
        "properties" : {
          "PhoneNumberCountries" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberCountriesList"
            }, {
              "description" : "The supported phone number countries."
            } ]
          }
        },
        "type" : "object"
      },
      "DeleteVoiceConnectorGroupRequest" : {
        "type" : "object",
        "title" : "DeleteVoiceConnectorGroupRequest"
      },
      "ChannelMembership" : {
        "description" : "The details of a channel member.",
        "properties" : {
          "InvitedBy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identity"
            }, {
              "description" : "The identifier of the member who invited another member."
            } ]
          },
          "ChannelArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the member's channel."
            } ]
          },
          "Type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelMembershipType"
            }, {
              "description" : "The membership type set for the channel member."
            } ]
          },
          "CreatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time at which the channel membership was created."
            } ]
          },
          "LastUpdatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time at which a channel membership was last updated."
            } ]
          },
          "Member" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identity"
            }, {
              "description" : "The data of the channel member."
            } ]
          }
        },
        "type" : "object"
      },
      "MediaPipelineStatus" : {
        "type" : "string",
        "enum" : [ "Initializing", "InProgress", "Failed", "Stopping", "Stopped" ]
      },
      "Attendee" : {
        "description" : "<p> An Amazon Chime SDK meeting attendee. Includes a unique <code>AttendeeId</code> and <code>JoinToken</code> . The <code>JoinToken</code> allows a client to authenticate and join as the specified attendee. The <code>JoinToken</code> expires when the meeting ends or when <a>DeleteAttendee</a> is called. After that, the attendee is unable to join the meeting. </p> <p>We recommend securely transferring each <code>JoinToken</code> from your server application to the client so that no other client has access to the token except for the one authorized to represent the attendee.</p>",
        "properties" : {
          "ExternalUserId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ExternalUserIdType"
            }, {
              "description" : "The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application."
            } ]
          },
          "AttendeeId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuidString"
            }, {
              "description" : "The Amazon Chime SDK attendee ID."
            } ]
          },
          "JoinToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/JoinTokenString"
            }, {
              "description" : "The join token used by the Amazon Chime SDK attendee."
            } ]
          }
        },
        "type" : "object"
      },
      "TollFreePrefix" : {
        "maxLength" : 3,
        "minLength" : 3,
        "pattern" : "^8(00|33|44|55|66|77|88)$",
        "type" : "string"
      },
      "DescribeAppInstanceUserRequest" : {
        "type" : "object",
        "title" : "DescribeAppInstanceUserRequest"
      },
      "CreateMeetingDialOutRequest" : {
        "properties" : {
          "FromPhoneNumber" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/E164PhoneNumber"
            }, {
              "description" : "Phone number used as the caller ID when the remote party receives a call."
            } ]
          },
          "JoinToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/JoinTokenString"
            }, {
              "description" : "Token used by the Amazon Chime SDK attendee. Call the <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_CreateAttendee.html\">CreateAttendee</a> action to get a join token."
            } ]
          },
          "ToPhoneNumber" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/E164PhoneNumber"
            }, {
              "description" : "Phone number called when inviting someone to a meeting."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateMeetingDialOutRequest",
        "required" : [ "FromPhoneNumber", "ToPhoneNumber", "JoinToken" ]
      },
      "GetUserResponse" : {
        "properties" : {
          "User" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/User"
            }, {
              "description" : "The user details."
            } ]
          }
        },
        "type" : "object"
      },
      "MessagingSessionEndpoint" : {
        "description" : "The websocket endpoint used to connect to Amazon Chime SDK messaging.",
        "properties" : {
          "Url" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UrlType"
            }, {
              "description" : "The endpoint to which you establish a websocket connection."
            } ]
          }
        },
        "type" : "object"
      },
      "CreateVoiceConnectorGroupResponse" : {
        "properties" : {
          "VoiceConnectorGroup" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnectorGroup"
            }, {
              "description" : "The Amazon Chime Voice Connector group details."
            } ]
          }
        },
        "type" : "object"
      },
      "ProxySessionNameString" : {
        "format" : "password",
        "pattern" : "^$|^[a-zA-Z0-9 ]{0,30}$",
        "type" : "string"
      },
      "GetProxySessionResponse" : {
        "properties" : {
          "ProxySession" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProxySession"
            }, {
              "description" : "The proxy session details."
            } ]
          }
        },
        "type" : "object"
      },
      "ErrorCode" : {
        "type" : "string",
        "enum" : [ "BadRequest", "Conflict", "Forbidden", "NotFound", "PreconditionFailed", "ResourceLimitExceeded", "ServiceFailure", "AccessDenied", "ServiceUnavailable", "Throttled", "Throttling", "Unauthorized", "Unprocessable", "VoiceConnectorGroupAssociationsExist", "PhoneNumberAssociationsExist" ]
      },
      "BatchDeletePhoneNumberRequest" : {
        "properties" : {
          "PhoneNumberIds" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyStringList"
            }, {
              "description" : "List of phone number IDs."
            } ]
          }
        },
        "type" : "object",
        "title" : "BatchDeletePhoneNumberRequest",
        "required" : [ "PhoneNumberIds" ]
      },
      "GetRoomRequest" : {
        "type" : "object",
        "title" : "GetRoomRequest"
      },
      "RoomMembership" : {
        "description" : "The room membership details.",
        "properties" : {
          "Role" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RoomMembershipRole"
            }, {
              "description" : "The membership role."
            } ]
          },
          "InvitedBy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The identifier of the user that invited the room member."
            } ]
          },
          "UpdatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The room membership update timestamp, in ISO 8601 format."
            } ]
          },
          "RoomId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The room ID."
            } ]
          },
          "Member" : {
            "$ref" : "#/components/schemas/Member"
          }
        },
        "type" : "object"
      },
      "CreateAttendeeError" : {
        "description" : "The list of errors returned when errors are encountered during the BatchCreateAttendee and CreateAttendee actions. This includes external user IDs, error codes, and error messages.",
        "properties" : {
          "ExternalUserId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ExternalUserIdType"
            }, {
              "description" : "The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application."
            } ]
          },
          "ErrorCode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The error code."
            } ]
          },
          "ErrorMessage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The error message."
            } ]
          }
        },
        "type" : "object"
      },
      "TranscribeMedicalLanguageCode" : {
        "type" : "string",
        "enum" : [ "en-US" ]
      },
      "BatchCreateRoomMembershipRequest" : {
        "properties" : {
          "MembershipItemList" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MembershipItemList"
            }, {
              "description" : "The list of membership items."
            } ]
          }
        },
        "type" : "object",
        "title" : "BatchCreateRoomMembershipRequest",
        "required" : [ "MembershipItemList" ]
      },
      "ResourceName" : {
        "format" : "password",
        "maxLength" : 256,
        "minLength" : 0,
        "pattern" : "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
        "type" : "string"
      },
      "License" : {
        "type" : "string",
        "enum" : [ "Basic", "Plus", "Pro", "ProTrial" ]
      },
      "CallingNameStatus" : {
        "type" : "string",
        "enum" : [ "Unassigned", "UpdateInProgress", "UpdateSucceeded", "UpdateFailed" ]
      },
      "EmailStatus" : {
        "type" : "string",
        "enum" : [ "NotSent", "Sent", "Failed" ]
      },
      "UpdateBotRequest" : {
        "properties" : {
          "Disabled" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NullableBoolean"
            }, {
              "description" : "When true, stops the specified bot from running in your account."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateBotRequest"
      },
      "GetAccountRequest" : {
        "type" : "object",
        "title" : "GetAccountRequest"
      },
      "SipRuleName" : {
        "maxLength" : 256,
        "minLength" : 1,
        "type" : "string"
      },
      "ListBotsResponse" : {
        "properties" : {
          "Bots" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BotList"
            }, {
              "description" : "List of bots and bot details."
            } ]
          },
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The token to use to retrieve the next page of results."
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateRoomRequest" : {
        "properties" : {
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveString"
            }, {
              "description" : "The room name."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateRoomRequest"
      },
      "BatchUnsuspendUserRequest" : {
        "properties" : {
          "UserIdList" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserIdList"
            }, {
              "description" : "The request containing the user IDs to unsuspend."
            } ]
          }
        },
        "type" : "object",
        "title" : "BatchUnsuspendUserRequest",
        "required" : [ "UserIdList" ]
      },
      "ListChannelMembershipsRequest" : {
        "type" : "object",
        "title" : "ListChannelMembershipsRequest"
      },
      "UpdateChannelResponse" : {
        "properties" : {
          "ChannelArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the channel."
            } ]
          }
        },
        "type" : "object"
      },
      "ResultMax" : {
        "maximum" : 99,
        "minimum" : 1,
        "type" : "integer"
      },
      "PhoneNumberMaxResults" : {
        "maximum" : 500,
        "minimum" : 1,
        "type" : "integer"
      },
      "CreateSipRuleResponse" : {
        "properties" : {
          "SipRule" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipRule"
            }, {
              "description" : "Returns the SIP rule information, including the rule ID, triggers, and target applications."
            } ]
          }
        },
        "type" : "object"
      },
      "DescribeChannelMembershipResponse" : {
        "properties" : {
          "ChannelMembership" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelMembership"
            }, {
              "description" : "The details of the membership."
            } ]
          }
        },
        "type" : "object"
      },
      "CreateAppInstanceRequest" : {
        "properties" : {
          "ClientRequestToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ClientRequestToken"
            }, {
              "description" : "The <code>ClientRequestToken</code> of the <code>AppInstance</code>."
            } ]
          },
          "Metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Metadata"
            }, {
              "description" : "The metadata of the <code>AppInstance</code>. Limited to a 1KB string in UTF-8."
            } ]
          },
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagList"
            }, {
              "description" : "Tags assigned to the <code>AppInstanceUser</code>."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyResourceName"
            }, {
              "description" : "The name of the <code>AppInstance</code>."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateAppInstanceRequest",
        "required" : [ "Name", "ClientRequestToken" ]
      },
      "ParticipantPhoneNumberList" : {
        "maxItems" : 2,
        "minItems" : 2,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/E164PhoneNumber"
        }
      },
      "Capability" : {
        "type" : "string",
        "enum" : [ "Voice", "SMS" ]
      },
      "CreateMeetingWithAttendeesRequestItemList" : {
        "maxItems" : 10,
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CreateAttendeeRequestItem"
        }
      },
      "DisassociatePhoneNumberFromUserResponse" : {
        "type" : "object"
      },
      "DescribeChannelModeratedByAppInstanceUserResponse" : {
        "properties" : {
          "Channel" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelModeratedByAppInstanceUserSummary"
            }, {
              "description" : "The moderated channel."
            } ]
          }
        },
        "type" : "object"
      },
      "CreateAttendeeRequestItem" : {
        "description" : "The Amazon Chime SDK attendee fields to create, used with the BatchCreateAttendee action.",
        "properties" : {
          "ExternalUserId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ExternalUserIdType"
            }, {
              "description" : "The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application."
            } ]
          },
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AttendeeTagList"
            }, {
              "description" : "The tag key-value pairs."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "ExternalUserId" ]
      },
      "EmailAddress" : {
        "format" : "password",
        "pattern" : ".+@.+\\..+",
        "type" : "string"
      },
      "ChannelMessage" : {
        "description" : "The details of a message in a channel.",
        "properties" : {
          "Sender" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identity"
            }, {
              "description" : "The message sender."
            } ]
          },
          "Redacted" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonNullableBoolean"
            }, {
              "description" : "Hides the content of a message."
            } ]
          },
          "Persistence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelMessagePersistenceType"
            }, {
              "description" : "The persistence setting for a channel message."
            } ]
          },
          "ChannelArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the channel."
            } ]
          },
          "Type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelMessageType"
            }, {
              "description" : "The message type."
            } ]
          },
          "CreatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time at which the message was created."
            } ]
          },
          "Content" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Content"
            }, {
              "description" : "The message content."
            } ]
          },
          "LastUpdatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time at which a message was updated."
            } ]
          },
          "Metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Metadata"
            }, {
              "description" : "The message metadata."
            } ]
          },
          "LastEditedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time at which a message was edited."
            } ]
          },
          "MessageId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MessageId"
            }, {
              "description" : "The ID of a message."
            } ]
          }
        },
        "type" : "object"
      },
      "ProxySessionStatus" : {
        "type" : "string",
        "enum" : [ "Open", "InProgress", "Closed" ]
      },
      "Iso8601Timestamp" : {
        "format" : "date-time",
        "type" : "string"
      },
      "GuidString" : {
        "pattern" : "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
        "type" : "string"
      },
      "ListRoomsResponse" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The token to use to retrieve the next page of results."
            } ]
          },
          "Rooms" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RoomList"
            }, {
              "description" : "The room details."
            } ]
          }
        },
        "type" : "object"
      },
      "Alpha2CountryCode" : {
        "pattern" : "[A-Z]{2}",
        "type" : "string"
      },
      "DeleteRoomRequest" : {
        "type" : "object",
        "title" : "DeleteRoomRequest"
      },
      "StopMeetingTranscriptionResponse" : {
        "type" : "object"
      },
      "ListPhoneNumberOrdersResponse" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The token to use to retrieve the next page of results."
            } ]
          },
          "PhoneNumberOrders" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberOrderList"
            }, {
              "description" : "The phone number order details."
            } ]
          }
        },
        "type" : "object"
      },
      "ListMediaCapturePipelinesRequest" : {
        "type" : "object",
        "title" : "ListMediaCapturePipelinesRequest"
      },
      "MediaPlacement" : {
        "description" : "A set of endpoints used by clients to connect to the media service group for an Amazon Chime SDK meeting.",
        "properties" : {
          "ScreenViewingUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UriType"
            }, {
              "description" : "The screen viewing URL."
            } ]
          },
          "EventIngestionUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UriType"
            }, {
              "description" : "The URL of the S3 bucket used to store the captured media."
            } ]
          },
          "AudioFallbackUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UriType"
            }, {
              "description" : "The audio fallback URL."
            } ]
          },
          "ScreenDataUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UriType"
            }, {
              "description" : "The screen data URL."
            } ]
          },
          "TurnControlUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UriType"
            }, {
              "description" : "The turn control URL."
            } ]
          },
          "ScreenSharingUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UriType"
            }, {
              "description" : "The screen sharing URL."
            } ]
          },
          "AudioHostUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UriType"
            }, {
              "description" : "The audio host URL."
            } ]
          },
          "SignalingUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UriType"
            }, {
              "description" : "The signaling URL."
            } ]
          }
        },
        "type" : "object"
      },
      "AssociatePhoneNumbersWithVoiceConnectorRequest" : {
        "properties" : {
          "E164PhoneNumbers" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/E164PhoneNumberList"
            }, {
              "description" : "List of phone numbers, in E.164 format."
            } ]
          },
          "ForceAssociate" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NullableBoolean"
            }, {
              "description" : "If true, associates the provided phone numbers with the provided Amazon Chime Voice Connector and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations."
            } ]
          }
        },
        "type" : "object",
        "title" : "AssociatePhoneNumbersWithVoiceConnectorRequest",
        "required" : [ "E164PhoneNumbers" ]
      },
      "SendChannelMessageRequest" : {
        "properties" : {
          "Persistence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelMessagePersistenceType"
            }, {
              "description" : "Boolean that controls whether the message is persisted on the back end. Required."
            } ]
          },
          "ClientRequestToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ClientRequestToken"
            }, {
              "description" : "The <code>Idempotency</code> token for each client request."
            } ]
          },
          "Type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelMessageType"
            }, {
              "description" : "The type of message, <code>STANDARD</code> or <code>CONTROL</code>."
            } ]
          },
          "Content" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyContent"
            }, {
              "description" : "The content of the message."
            } ]
          },
          "Metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Metadata"
            }, {
              "description" : "The optional metadata for each message."
            } ]
          }
        },
        "type" : "object",
        "title" : "SendChannelMessageRequest",
        "required" : [ "Content", "Type", "Persistence", "ClientRequestToken" ]
      },
      "AccountName" : {
        "maxLength" : 100,
        "minLength" : 1,
        "pattern" : ".*\\S.*",
        "type" : "string"
      },
      "Meeting" : {
        "description" : "A meeting created using the Amazon Chime SDK.",
        "properties" : {
          "MeetingId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuidString"
            }, {
              "description" : "The Amazon Chime SDK meeting ID."
            } ]
          },
          "MediaRegion" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The Region in which you create the meeting. Available values: <code>af-south-1</code>, <code>ap-northeast-1</code>, <code>ap-northeast-2</code>, <code>ap-south-1</code>, <code>ap-southeast-1</code>, <code>ap-southeast-2</code>, <code>ca-central-1</code>, <code>eu-central-1</code>, <code>eu-north-1</code>, <code>eu-south-1</code>, <code>eu-west-1</code>, <code>eu-west-2</code>, <code>eu-west-3</code>, <code>sa-east-1</code>, <code>us-east-1</code>, <code>us-east-2</code>, <code>us-west-1</code>, <code>us-west-2</code>."
            } ]
          },
          "MediaPlacement" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaPlacement"
            }, {
              "description" : "The media placement for the meeting."
            } ]
          },
          "ExternalMeetingId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ExternalMeetingIdType"
            }, {
              "description" : "The external meeting ID."
            } ]
          }
        },
        "type" : "object"
      },
      "GetVoiceConnectorOriginationResponse" : {
        "properties" : {
          "Origination" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Origination"
            }, {
              "description" : "The origination setting details."
            } ]
          }
        },
        "type" : "object"
      },
      "MemberArns" : {
        "maxItems" : 100,
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ChimeArn"
        }
      },
      "PhoneNumberTypeList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/PhoneNumberType"
        }
      },
      "NotFoundException" : { },
      "DeleteMediaCapturePipelineRequest" : {
        "type" : "object",
        "title" : "DeleteMediaCapturePipelineRequest"
      },
      "DeleteMeetingRequest" : {
        "type" : "object",
        "title" : "DeleteMeetingRequest"
      },
      "PhoneNumberCountriesList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/PhoneNumberCountry"
        }
      },
      "ResetPersonalPINRequest" : {
        "type" : "object",
        "title" : "ResetPersonalPINRequest"
      },
      "GetVoiceConnectorProxyResponse" : {
        "properties" : {
          "Proxy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Proxy"
            }, {
              "description" : "The proxy configuration details."
            } ]
          }
        },
        "type" : "object"
      },
      "InviteList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Invite"
        }
      },
      "GeoMatchLevel" : {
        "type" : "string",
        "enum" : [ "Country", "AreaCode" ]
      },
      "ListChannelModeratorsRequest" : {
        "type" : "object",
        "title" : "ListChannelModeratorsRequest"
      },
      "DisassociatePhoneNumbersFromVoiceConnectorResponse" : {
        "properties" : {
          "PhoneNumberErrors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberErrorList"
            }, {
              "description" : "If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages."
            } ]
          }
        },
        "type" : "object"
      },
      "EmergencyCallingConfiguration" : {
        "description" : "The emergency calling configuration details associated with an Amazon Chime Voice Connector.",
        "properties" : {
          "DNIS" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DNISEmergencyCallingConfigurationList"
            }, {
              "description" : "The Dialed Number Identification Service (DNIS) emergency calling configuration details."
            } ]
          }
        },
        "type" : "object"
      },
      "GetRetentionSettingsRequest" : {
        "type" : "object",
        "title" : "GetRetentionSettingsRequest"
      },
      "OriginationRouteList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/OriginationRoute"
        }
      },
      "ListAttendeesRequest" : {
        "type" : "object",
        "title" : "ListAttendeesRequest"
      },
      "PutAppInstanceRetentionSettingsRequest" : {
        "properties" : {
          "AppInstanceRetentionSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppInstanceRetentionSettings"
            }, {
              "description" : "The time in days to retain data. Data type: number."
            } ]
          }
        },
        "type" : "object",
        "title" : "PutAppInstanceRetentionSettingsRequest",
        "required" : [ "AppInstanceRetentionSettings" ]
      },
      "PositiveInteger" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "TranscriptionConfiguration" : {
        "description" : "The configuration for the current transcription operation. Must contain <code>EngineTranscribeSettings</code> or <code>EngineTranscribeMedicalSettings</code>.",
        "properties" : {
          "EngineTranscribeSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EngineTranscribeSettings"
            }, {
              "description" : "The transcription configuration settings passed to Amazon Transcribe."
            } ]
          },
          "EngineTranscribeMedicalSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EngineTranscribeMedicalSettings"
            }, {
              "description" : "The transcription configuration settings passed to Amazon Transcribe."
            } ]
          }
        },
        "type" : "object"
      },
      "StringList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/String"
        }
      },
      "GetUserSettingsRequest" : {
        "type" : "object",
        "title" : "GetUserSettingsRequest"
      },
      "RegistrationStatus" : {
        "type" : "string",
        "enum" : [ "Unregistered", "Registered", "Suspended" ]
      },
      "UpdateRoomResponse" : {
        "properties" : {
          "Room" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Room"
            }, {
              "description" : "The room details."
            } ]
          }
        },
        "type" : "object"
      },
      "RetentionDays" : {
        "maximum" : 5475,
        "minimum" : 1,
        "type" : "integer"
      },
      "ListMeetingsResponse" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The token to use to retrieve the next page of results."
            } ]
          },
          "Meetings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MeetingList"
            }, {
              "description" : "The Amazon Chime SDK meeting information."
            } ]
          }
        },
        "type" : "object"
      },
      "RegenerateSecurityTokenResponse" : {
        "properties" : {
          "Bot" : {
            "$ref" : "#/components/schemas/Bot"
          }
        },
        "type" : "object"
      },
      "PutVoiceConnectorStreamingConfigurationResponse" : {
        "properties" : {
          "StreamingConfiguration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StreamingConfiguration"
            }, {
              "description" : "The updated streaming configuration details."
            } ]
          }
        },
        "type" : "object"
      },
      "AppInstanceUserMembershipSummary" : {
        "description" : "Summary of the membership details of an <code>AppInstanceUser</code>.",
        "properties" : {
          "Type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelMembershipType"
            }, {
              "description" : "The type of <code>ChannelMembership</code>."
            } ]
          },
          "ReadMarkerTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time at which a message was last read."
            } ]
          }
        },
        "type" : "object"
      },
      "LicenseList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/License"
        }
      },
      "GetVoiceConnectorStreamingConfigurationRequest" : {
        "type" : "object",
        "title" : "GetVoiceConnectorStreamingConfigurationRequest"
      },
      "PhoneNumberAssociationName" : {
        "type" : "string",
        "enum" : [ "AccountId", "UserId", "VoiceConnectorId", "VoiceConnectorGroupId", "SipRuleId" ]
      },
      "ChimeArn" : {
        "maxLength" : 1600,
        "minLength" : 5,
        "pattern" : "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "type" : "string"
      },
      "NonEmptyResourceName" : {
        "format" : "password",
        "maxLength" : 256,
        "minLength" : 1,
        "pattern" : "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
        "type" : "string"
      },
      "BatchCreateAttendeeRequest" : {
        "properties" : {
          "Attendees" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreateAttendeeRequestItemList"
            }, {
              "description" : "The request containing the attendees to create."
            } ]
          }
        },
        "type" : "object",
        "title" : "BatchCreateAttendeeRequest",
        "required" : [ "Attendees" ]
      },
      "ChannelSummaryList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ChannelSummary"
        }
      },
      "UpdateUserResponse" : {
        "properties" : {
          "User" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/User"
            }, {
              "description" : "The updated user details."
            } ]
          }
        },
        "type" : "object"
      },
      "MediaPipelineSinkType" : {
        "type" : "string",
        "enum" : [ "S3Bucket" ]
      },
      "DeleteSipMediaApplicationRequest" : {
        "type" : "object",
        "title" : "DeleteSipMediaApplicationRequest"
      },
      "ServiceFailureException" : { },
      "TelephonySettings" : {
        "description" : "Settings that allow management of telephony permissions for an Amazon Chime user, such as inbound and outbound calling and text messaging.",
        "properties" : {
          "OutboundCalling" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Boolean"
            }, {
              "description" : "Allows or denies outbound calling."
            } ]
          },
          "SMS" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Boolean"
            }, {
              "description" : "Allows or denies SMS messaging."
            } ]
          },
          "InboundCalling" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Boolean"
            }, {
              "description" : "Allows or denies inbound calling."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "InboundCalling", "OutboundCalling", "SMS" ]
      },
      "UpdateChannelMessageRequest" : {
        "properties" : {
          "Content" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Content"
            }, {
              "description" : "The content of the message being updated."
            } ]
          },
          "Metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Metadata"
            }, {
              "description" : "The metadata of the message being updated."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateChannelMessageRequest"
      },
      "DeleteAppInstanceStreamingConfigurationsRequest" : {
        "type" : "object",
        "title" : "DeleteAppInstanceStreamingConfigurationsRequest"
      },
      "PutRetentionSettingsResponse" : {
        "properties" : {
          "InitiateDeletionTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The timestamp representing the time at which the specified items are permanently deleted, in ISO 8601 format."
            } ]
          },
          "RetentionSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RetentionSettings"
            }, {
              "description" : "The retention settings."
            } ]
          }
        },
        "type" : "object"
      },
      "PutSipMediaApplicationLoggingConfigurationResponse" : {
        "properties" : {
          "SipMediaApplicationLoggingConfiguration" : {
            "$ref" : "#/components/schemas/SipMediaApplicationLoggingConfiguration"
          }
        },
        "type" : "object"
      },
      "ConflictException" : { },
      "BatchSuspendUserResponse" : {
        "properties" : {
          "UserErrors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserErrorList"
            }, {
              "description" : "If the <a>BatchSuspendUser</a> action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages."
            } ]
          }
        },
        "type" : "object"
      },
      "CreateProxySessionRequest" : {
        "properties" : {
          "ExpiryMinutes" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PositiveInteger"
            }, {
              "description" : "The number of minutes allowed for the proxy session."
            } ]
          },
          "GeoMatchLevel" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GeoMatchLevel"
            }, {
              "description" : "The preference for matching the country or area code of the proxy phone number with that of the first participant."
            } ]
          },
          "NumberSelectionBehavior" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NumberSelectionBehavior"
            }, {
              "description" : "The preference for proxy phone number reuse, or stickiness, between the same participants across sessions."
            } ]
          },
          "Capabilities" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CapabilityList"
            }, {
              "description" : "The proxy session capabilities."
            } ]
          },
          "ParticipantPhoneNumbers" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ParticipantPhoneNumberList"
            }, {
              "description" : "The participant phone numbers."
            } ]
          },
          "GeoMatchParams" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GeoMatchParams"
            }, {
              "description" : "The country and area code for the proxy phone number."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProxySessionNameString"
            }, {
              "description" : "The name of the proxy session."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateProxySessionRequest",
        "required" : [ "ParticipantPhoneNumbers", "Capabilities" ]
      },
      "GetPhoneNumberRequest" : {
        "type" : "object",
        "title" : "GetPhoneNumberRequest"
      },
      "PhoneNumberCountry" : {
        "description" : "The phone number country.",
        "properties" : {
          "SupportedPhoneNumberTypes" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberTypeList"
            }, {
              "description" : "The supported phone number types. "
            } ]
          },
          "CountryCode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Alpha2CountryCode"
            }, {
              "description" : "The phone number country code. Format: ISO 3166-1 alpha-2."
            } ]
          }
        },
        "type" : "object"
      },
      "BatchCreateAttendeeResponse" : {
        "properties" : {
          "Errors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BatchCreateAttendeeErrorList"
            }, {
              "description" : "If the action fails for one or more of the attendees in the request, a list of the attendees is returned, along with error codes and error messages."
            } ]
          },
          "Attendees" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AttendeeList"
            }, {
              "description" : "The attendee information, including attendees IDs and join tokens."
            } ]
          }
        },
        "type" : "object"
      },
      "SensitiveString" : {
        "format" : "password",
        "type" : "string"
      },
      "DeleteChannelModeratorRequest" : {
        "type" : "object",
        "title" : "DeleteChannelModeratorRequest"
      },
      "PutVoiceConnectorLoggingConfigurationResponse" : {
        "properties" : {
          "LoggingConfiguration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/LoggingConfiguration"
            }, {
              "description" : "The updated logging configuration details."
            } ]
          }
        },
        "type" : "object"
      },
      "DisassociatePhoneNumbersFromVoiceConnectorRequest" : {
        "properties" : {
          "E164PhoneNumbers" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/E164PhoneNumberList"
            }, {
              "description" : "List of phone numbers, in E.164 format."
            } ]
          }
        },
        "type" : "object",
        "title" : "DisassociatePhoneNumbersFromVoiceConnectorRequest",
        "required" : [ "E164PhoneNumbers" ]
      },
      "UnprocessableEntityException" : { },
      "UserEmailList" : {
        "maxItems" : 50,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/EmailAddress"
        }
      },
      "VoiceConnectorList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/VoiceConnector"
        }
      },
      "AppInstanceAdmin" : {
        "description" : "The details of an <code>AppInstanceAdmin</code>.",
        "properties" : {
          "CreatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time at which an administrator was created."
            } ]
          },
          "Admin" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identity"
            }, {
              "description" : "The <code>AppInstanceAdmin</code> data."
            } ]
          },
          "AppInstanceArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the <code>AppInstance</code> for which the user is an administrator."
            } ]
          }
        },
        "type" : "object"
      },
      "CreateMeetingResponse" : {
        "properties" : {
          "Meeting" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Meeting"
            }, {
              "description" : " The meeting information, including the meeting ID and <code>MediaPlacement</code> . "
            } ]
          }
        },
        "type" : "object"
      },
      "ChannelSummary" : {
        "description" : "Summary of the details of a <code>Channel</code>.",
        "properties" : {
          "ChannelArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the channel."
            } ]
          },
          "Privacy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelPrivacy"
            }, {
              "description" : "The privacy setting of the channel."
            } ]
          },
          "Mode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelMode"
            }, {
              "description" : "The mode of the channel."
            } ]
          },
          "LastMessageTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time at which the last message in a channel was sent."
            } ]
          },
          "Metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Metadata"
            }, {
              "description" : "The metadata of the channel."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyResourceName"
            }, {
              "description" : "The name of the channel."
            } ]
          }
        },
        "type" : "object"
      },
      "Bot" : {
        "description" : "A resource that allows Enterprise account administrators to configure an interface to receive events from Amazon Chime.",
        "properties" : {
          "SecurityToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveString"
            }, {
              "description" : "The security token used to authenticate Amazon Chime with the outgoing event endpoint."
            } ]
          },
          "UpdatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The updated bot timestamp, in ISO 8601 format."
            } ]
          },
          "CreatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The bot creation timestamp, in ISO 8601 format."
            } ]
          },
          "BotId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The bot ID."
            } ]
          },
          "UserId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The unique ID for the bot user."
            } ]
          },
          "BotEmail" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveString"
            }, {
              "description" : "The bot email address."
            } ]
          },
          "DisplayName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveString"
            }, {
              "description" : "The bot display name."
            } ]
          },
          "Disabled" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NullableBoolean"
            }, {
              "description" : "When true, the bot is stopped from running in your account."
            } ]
          },
          "BotType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BotType"
            }, {
              "description" : "The bot type."
            } ]
          }
        },
        "type" : "object"
      },
      "BatchUnsuspendUserResponse" : {
        "properties" : {
          "UserErrors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserErrorList"
            }, {
              "description" : "If the <a>BatchUnsuspendUser</a> action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages."
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateVoiceConnectorRequest" : {
        "properties" : {
          "RequireEncryption" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Boolean"
            }, {
              "description" : "When enabled, requires encryption for the Amazon Chime Voice Connector."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnectorName"
            }, {
              "description" : "The name of the Amazon Chime Voice Connector."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateVoiceConnectorRequest",
        "required" : [ "Name", "RequireEncryption" ]
      },
      "ChannelMembershipType" : {
        "type" : "string",
        "enum" : [ "DEFAULT", "HIDDEN" ]
      },
      "GetSipMediaApplicationRequest" : {
        "type" : "object",
        "title" : "GetSipMediaApplicationRequest"
      },
      "BotList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Bot"
        }
      },
      "CreateAppInstanceAdminRequest" : {
        "properties" : {
          "AppInstanceAdminArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the administrator of the current <code>AppInstance</code>."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateAppInstanceAdminRequest",
        "required" : [ "AppInstanceAdminArn" ]
      },
      "LogoutUserResponse" : {
        "type" : "object"
      },
      "SipMediaApplicationName" : {
        "maxLength" : 256,
        "minLength" : 1,
        "type" : "string"
      },
      "DescribeAppInstanceRequest" : {
        "type" : "object",
        "title" : "DescribeAppInstanceRequest"
      },
      "RestorePhoneNumberResponse" : {
        "properties" : {
          "PhoneNumber" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumber"
            }, {
              "description" : "The phone number details."
            } ]
          }
        },
        "type" : "object"
      },
      "CreateBotResponse" : {
        "properties" : {
          "Bot" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Bot"
            }, {
              "description" : "The bot details."
            } ]
          }
        },
        "type" : "object"
      },
      "GetVoiceConnectorOriginationRequest" : {
        "type" : "object",
        "title" : "GetVoiceConnectorOriginationRequest"
      },
      "RoomList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Room"
        }
      },
      "ListProxySessionsRequest" : {
        "type" : "object",
        "title" : "ListProxySessionsRequest"
      },
      "DNISEmergencyCallingConfiguration" : {
        "description" : "The Dialed Number Identification Service (DNIS) emergency calling configuration details associated with an Amazon Chime Voice Connector's emergency calling configuration.",
        "properties" : {
          "EmergencyPhoneNumber" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/E164PhoneNumber"
            }, {
              "description" : "The DNIS phone number to route emergency calls to, in E.164 format."
            } ]
          },
          "CallingCountry" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Alpha2CountryCode"
            }, {
              "description" : "The country from which emergency calls are allowed, in ISO 3166-1 alpha-2 format."
            } ]
          },
          "TestPhoneNumber" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/E164PhoneNumber"
            }, {
              "description" : "The DNIS phone number to route test emergency calls to, in E.164 format."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "EmergencyPhoneNumber", "CallingCountry" ]
      },
      "UpdateUserRequest" : {
        "properties" : {
          "UserType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserType"
            }, {
              "description" : "The user type."
            } ]
          },
          "AlexaForBusinessMetadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AlexaForBusinessMetadata"
            }, {
              "description" : "The Alexa for Business metadata."
            } ]
          },
          "LicenseType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/License"
            }, {
              "description" : "The user license type to update. This must be a supported license type for the Amazon Chime account that the user belongs to."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateUserRequest"
      },
      "MediaCapturePipelineList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/MediaCapturePipeline"
        }
      },
      "ChannelPrivacy" : {
        "type" : "string",
        "enum" : [ "PUBLIC", "PRIVATE" ]
      },
      "SipMediaApplicationCall" : {
        "description" : "A <code>Call</code> instance for a SIP media application.",
        "properties" : {
          "TransactionId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuidString"
            }, {
              "description" : "The transaction ID of a call."
            } ]
          }
        },
        "type" : "object"
      },
      "NextToken" : {
        "format" : "password",
        "maxLength" : 2048,
        "minLength" : 0,
        "pattern" : ".*",
        "type" : "string"
      },
      "AssociateSigninDelegateGroupsWithAccountResponse" : {
        "type" : "object"
      },
      "ListChannelModeratorsResponse" : {
        "properties" : {
          "ChannelArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the channel."
            } ]
          },
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : "The token passed by previous API calls until all requested moderators are returned."
            } ]
          },
          "ChannelModerators" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelModeratorSummaryList"
            }, {
              "description" : "The information about and names of each moderator."
            } ]
          }
        },
        "type" : "object"
      },
      "RedactChannelMessageResponse" : {
        "properties" : {
          "ChannelArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the channel containing the messages that you want to redact."
            } ]
          },
          "MessageId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MessageId"
            }, {
              "description" : "The ID of the message being redacted."
            } ]
          }
        },
        "type" : "object"
      },
      "SendChannelMessageResponse" : {
        "properties" : {
          "ChannelArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the channel."
            } ]
          },
          "MessageId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MessageId"
            }, {
              "description" : "The ID string assigned to each message."
            } ]
          }
        },
        "type" : "object"
      },
      "Origination" : {
        "description" : "Origination settings enable your SIP hosts to receive inbound calls using your Amazon Chime Voice Connector.",
        "properties" : {
          "Routes" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OriginationRouteList"
            }, {
              "description" : "The call distribution properties defined for your SIP hosts. Valid range: Minimum value of 1. Maximum value of 20."
            } ]
          },
          "Disabled" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Boolean"
            }, {
              "description" : "When origination settings are disabled, inbound calls are not enabled for your Amazon Chime Voice Connector."
            } ]
          }
        },
        "type" : "object"
      },
      "ListSipRulesResponse" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextTokenString"
            }, {
              "description" : "The token to use to retrieve the next page of results."
            } ]
          },
          "SipRules" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipRuleList"
            }, {
              "description" : "List of SIP rules and rule details."
            } ]
          }
        },
        "type" : "object"
      },
      "PhoneNumberOrderStatus" : {
        "type" : "string",
        "enum" : [ "Processing", "Successful", "Failed", "Partial" ]
      },
      "GetAttendeeResponse" : {
        "properties" : {
          "Attendee" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Attendee"
            }, {
              "description" : "The Amazon Chime SDK attendee information."
            } ]
          }
        },
        "type" : "object"
      },
      "CreateAttendeeResponse" : {
        "properties" : {
          "Attendee" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Attendee"
            }, {
              "description" : "The attendee information, including attendee ID and join token."
            } ]
          }
        },
        "type" : "object"
      },
      "PhoneNumberErrorList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/PhoneNumberError"
        }
      },
      "TagList" : {
        "maxItems" : 50,
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Tag"
        }
      },
      "DeleteVoiceConnectorTerminationCredentialsRequest" : {
        "properties" : {
          "Usernames" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveStringList"
            }, {
              "description" : "The RFC2617 compliant username associated with the SIP credentials, in US-ASCII format."
            } ]
          }
        },
        "type" : "object",
        "title" : "DeleteVoiceConnectorTerminationCredentialsRequest",
        "required" : [ "Usernames" ]
      },
      "DescribeChannelBanRequest" : {
        "type" : "object",
        "title" : "DescribeChannelBanRequest"
      },
      "NonNullableBoolean" : {
        "type" : "boolean"
      },
      "RestorePhoneNumberRequest" : {
        "type" : "object",
        "title" : "RestorePhoneNumberRequest"
      },
      "CreateAppInstanceAdminResponse" : {
        "properties" : {
          "AppInstanceAdmin" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identity"
            }, {
              "description" : "The name and ARN of the admin for the <code>AppInstance</code>."
            } ]
          },
          "AppInstanceArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the of the admin for the <code>AppInstance</code>."
            } ]
          }
        },
        "type" : "object"
      },
      "PutAppInstanceStreamingConfigurationsResponse" : {
        "properties" : {
          "AppInstanceStreamingConfigurations" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppInstanceStreamingConfigurationList"
            }, {
              "description" : "The streaming configurations of an <code>AppInstance</code>."
            } ]
          }
        },
        "type" : "object"
      },
      "ChannelMembershipSummary" : {
        "description" : "Summary of the details of a <code>ChannelMembership</code>.",
        "properties" : {
          "Member" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identity"
            }, {
              "description" : "A member's summary data."
            } ]
          }
        },
        "type" : "object"
      },
      "SearchAvailablePhoneNumbersResponse" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The token used to retrieve the next page of search results."
            } ]
          },
          "E164PhoneNumbers" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/E164PhoneNumberList"
            }, {
              "description" : "List of phone numbers, in E.164 format."
            } ]
          }
        },
        "type" : "object"
      },
      "ListChannelBansRequest" : {
        "type" : "object",
        "title" : "ListChannelBansRequest"
      },
      "AppInstanceUserList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AppInstanceUserSummary"
        }
      },
      "SortOrder" : {
        "type" : "string",
        "enum" : [ "ASCENDING", "DESCENDING" ]
      },
      "ChannelModeratorSummary" : {
        "description" : "Summary of the details of a <code>ChannelModerator</code>.",
        "properties" : {
          "Moderator" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identity"
            }, {
              "description" : "The data for a moderator."
            } ]
          }
        },
        "type" : "object"
      },
      "ListProxySessionsResponse" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextTokenString"
            }, {
              "description" : "The token to use to retrieve the next page of results."
            } ]
          },
          "ProxySessions" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProxySessions"
            }, {
              "description" : "The proxy session details."
            } ]
          }
        },
        "type" : "object"
      },
      "AccountType" : {
        "type" : "string",
        "enum" : [ "Team", "EnterpriseDirectory", "EnterpriseLWA", "EnterpriseOIDC" ]
      },
      "UpdateUserSettingsRequest" : {
        "properties" : {
          "UserSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserSettings"
            }, {
              "description" : "The user settings to update."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateUserSettingsRequest",
        "required" : [ "UserSettings" ]
      },
      "ListAccountsRequest" : {
        "type" : "object",
        "title" : "ListAccountsRequest"
      },
      "AccountSettings" : {
        "description" : "Settings related to the Amazon Chime account. This includes settings that start or stop remote control of shared screens, or start or stop the dial-out option in the Amazon Chime web application. For more information about these settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/policies.html\">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>.",
        "properties" : {
          "DisableRemoteControl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Boolean"
            }, {
              "description" : "Setting that stops or starts remote control of shared screens during meetings."
            } ]
          },
          "EnableDialOut" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Boolean"
            }, {
              "description" : "Setting that allows meeting participants to choose the <b>Call me at a phone number</b> option. For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ug/chime-join-meeting.html\">Join a Meeting without the Amazon Chime App</a>."
            } ]
          }
        },
        "type" : "object"
      },
      "ClientRequestToken" : {
        "format" : "password",
        "maxLength" : 64,
        "minLength" : 2,
        "pattern" : "[-_a-zA-Z0-9]*",
        "type" : "string"
      },
      "CredentialList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Credential"
        }
      },
      "EngineTranscribeSettings" : {
        "description" : "Settings specific to the Amazon Transcribe engine.",
        "properties" : {
          "LanguageCode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TranscribeLanguageCode"
            }, {
              "description" : "The language code specified for the Amazon Transcribe engine."
            } ]
          },
          "VocabularyName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The name of the vocabulary passed to Amazon Transcribe."
            } ]
          },
          "VocabularyFilterName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The name of the vocabulary filter passed to Amazon Transcribe."
            } ]
          },
          "Region" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TranscribeRegion"
            }, {
              "description" : "The AWS Region passed to Amazon Transcribe. If you don't specify a Region, Amazon Chime uses the meeting's Region."
            } ]
          },
          "VocabularyFilterMethod" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TranscribeVocabularyFilterMethod"
            }, {
              "description" : "The filtering method passed to Amazon Transcribe."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "LanguageCode" ]
      },
      "UntagResourceRequest" : {
        "properties" : {
          "ResourceARN" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "The resource ARN."
            } ]
          },
          "TagKeys" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagKeyList"
            }, {
              "description" : "The tag keys."
            } ]
          }
        },
        "type" : "object",
        "title" : "UntagResourceRequest",
        "required" : [ "ResourceARN", "TagKeys" ]
      },
      "ListAttendeesResponse" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The token to use to retrieve the next page of results."
            } ]
          },
          "Attendees" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AttendeeList"
            }, {
              "description" : "The Amazon Chime SDK attendee information."
            } ]
          }
        },
        "type" : "object"
      },
      "UserId" : {
        "format" : "password",
        "maxLength" : 64,
        "minLength" : 1,
        "pattern" : "[A-Za-z0-9]([A-Za-z0-9\\:\\-\\_\\.\\@]{0,62}[A-Za-z0-9])?",
        "type" : "string"
      },
      "CreateChannelRequest" : {
        "properties" : {
          "Privacy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelPrivacy"
            }, {
              "description" : "The channel's privacy level: <code>PUBLIC</code> or <code>PRIVATE</code>. Private channels aren't discoverable by users outside the channel. Public channels are discoverable by anyone in the <code>AppInstance</code>."
            } ]
          },
          "ClientRequestToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ClientRequestToken"
            }, {
              "description" : "The client token for the request. An <code>Idempotency</code> token."
            } ]
          },
          "Mode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelMode"
            }, {
              "description" : "The channel mode: <code>UNRESTRICTED</code> or <code>RESTRICTED</code>. Administrators, moderators, and channel members can add themselves and other members to unrestricted channels. Only administrators and moderators can add members to restricted channels."
            } ]
          },
          "Metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Metadata"
            }, {
              "description" : "The metadata of the creation request. Limited to 1KB and UTF-8."
            } ]
          },
          "AppInstanceArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the channel request."
            } ]
          },
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagList"
            }, {
              "description" : "The tags for the creation request."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyResourceName"
            }, {
              "description" : "The name of the channel."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateChannelRequest",
        "required" : [ "AppInstanceArn", "Name", "ClientRequestToken" ]
      },
      "BadRequestException" : { },
      "TranscribeMedicalSpecialty" : {
        "type" : "string",
        "enum" : [ "PRIMARYCARE", "CARDIOLOGY", "NEUROLOGY", "ONCOLOGY", "RADIOLOGY", "UROLOGY" ]
      },
      "BatchCreateChannelMembershipRequest" : {
        "properties" : {
          "Type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelMembershipType"
            }, {
              "description" : "The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned. This is only supported by moderators."
            } ]
          },
          "MemberArns" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MemberArns"
            }, {
              "description" : "The ARNs of the members you want to add to the channel."
            } ]
          }
        },
        "type" : "object",
        "title" : "BatchCreateChannelMembershipRequest",
        "required" : [ "MemberArns" ]
      },
      "Invite" : {
        "description" : "Invitation object returned after emailing users to invite them to join the Amazon Chime <code>Team</code> account.",
        "properties" : {
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/InviteStatus"
            }, {
              "description" : "The status of the invite."
            } ]
          },
          "InviteId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The invite ID."
            } ]
          },
          "EmailStatus" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EmailStatus"
            }, {
              "description" : "The status of the invite email."
            } ]
          },
          "EmailAddress" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EmailAddress"
            }, {
              "description" : "The email address to which the invite is sent."
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateChannelMessageResponse" : {
        "properties" : {
          "ChannelArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the channel."
            } ]
          },
          "MessageId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MessageId"
            }, {
              "description" : "The ID string of the message being updated."
            } ]
          }
        },
        "type" : "object"
      },
      "DescribeChannelModeratorResponse" : {
        "properties" : {
          "ChannelModerator" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelModerator"
            }, {
              "description" : "The details of the channel moderator."
            } ]
          }
        },
        "type" : "object"
      },
      "RoomMembershipRole" : {
        "type" : "string",
        "enum" : [ "Administrator", "Member" ]
      },
      "CreateChannelBanRequest" : {
        "properties" : {
          "MemberArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the member being banned."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateChannelBanRequest",
        "required" : [ "MemberArn" ]
      },
      "UpdatePhoneNumberRequestItem" : {
        "description" : "The phone number ID, product type, or calling name fields to update, used with the <a>BatchUpdatePhoneNumber</a> and <a>UpdatePhoneNumber</a> actions.",
        "properties" : {
          "ProductType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberProductType"
            }, {
              "description" : "The product type to update."
            } ]
          },
          "PhoneNumberId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The phone number ID to update."
            } ]
          },
          "CallingName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CallingName"
            }, {
              "description" : "The outbound calling name to update."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "PhoneNumberId" ]
      },
      "GetBotResponse" : {
        "properties" : {
          "Bot" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Bot"
            }, {
              "description" : "The chat bot details."
            } ]
          }
        },
        "type" : "object"
      },
      "ListChannelMessagesRequest" : {
        "type" : "object",
        "title" : "ListChannelMessagesRequest"
      },
      "ChannelBanSummaryList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ChannelBanSummary"
        }
      },
      "GetSipRuleRequest" : {
        "type" : "object",
        "title" : "GetSipRuleRequest"
      },
      "PhoneNumberList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/PhoneNumber"
        }
      },
      "DisassociatePhoneNumbersFromVoiceConnectorGroupRequest" : {
        "properties" : {
          "E164PhoneNumbers" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/E164PhoneNumberList"
            }, {
              "description" : "List of phone numbers, in E.164 format."
            } ]
          }
        },
        "type" : "object",
        "title" : "DisassociatePhoneNumbersFromVoiceConnectorGroupRequest",
        "required" : [ "E164PhoneNumbers" ]
      },
      "VoiceConnectorItemPriority" : {
        "maximum" : 99,
        "minimum" : 1,
        "type" : "integer"
      },
      "ListVoiceConnectorGroupsRequest" : {
        "type" : "object",
        "title" : "ListVoiceConnectorGroupsRequest"
      },
      "CreateUserResponse" : {
        "properties" : {
          "User" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "type" : "object"
      },
      "GetVoiceConnectorEmergencyCallingConfigurationResponse" : {
        "properties" : {
          "EmergencyCallingConfiguration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EmergencyCallingConfiguration"
            }, {
              "description" : "The emergency calling configuration details."
            } ]
          }
        },
        "type" : "object"
      },
      "BatchUpdatePhoneNumberRequest" : {
        "properties" : {
          "UpdatePhoneNumberRequestItems" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdatePhoneNumberRequestItemList"
            }, {
              "description" : "The request containing the phone number IDs and product types or calling names to update."
            } ]
          }
        },
        "type" : "object",
        "title" : "BatchUpdatePhoneNumberRequest",
        "required" : [ "UpdatePhoneNumberRequestItems" ]
      },
      "DeleteChannelMessageRequest" : {
        "type" : "object",
        "title" : "DeleteChannelMessageRequest"
      },
      "RoomMembershipList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/RoomMembership"
        }
      },
      "DeleteRoomMembershipRequest" : {
        "type" : "object",
        "title" : "DeleteRoomMembershipRequest"
      },
      "VoiceConnectorGroupList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/VoiceConnectorGroup"
        }
      },
      "GetAccountSettingsRequest" : {
        "type" : "object",
        "title" : "GetAccountSettingsRequest"
      },
      "UpdateChannelReadMarkerResponse" : {
        "properties" : {
          "ChannelArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the channel."
            } ]
          }
        },
        "type" : "object"
      },
      "SipMediaApplication" : {
        "description" : "The details of the SIP media application, including name and endpoints. An AWS account can have multiple SIP media applications.",
        "properties" : {
          "Endpoints" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipMediaApplicationEndpointList"
            }, {
              "description" : "List of endpoints for SIP media application. Currently, only one endpoint per SIP media application is permitted."
            } ]
          },
          "UpdatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The SIP media application updated timestamp, in ISO 8601 format."
            } ]
          },
          "SipMediaApplicationId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The SIP media application ID."
            } ]
          },
          "CreatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The SIP media application creation timestamp, in ISO 8601 format."
            } ]
          },
          "AwsRegion" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The AWS Region in which the SIP media application is created."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipMediaApplicationName"
            }, {
              "description" : "The name of the SIP media application."
            } ]
          }
        },
        "type" : "object"
      },
      "Participant" : {
        "description" : "The phone number and proxy phone number for a participant in an Amazon Chime Voice Connector proxy session.",
        "properties" : {
          "PhoneNumber" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/E164PhoneNumber"
            }, {
              "description" : "The participant's phone number."
            } ]
          },
          "ProxyPhoneNumber" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/E164PhoneNumber"
            }, {
              "description" : "The participant's proxy phone number."
            } ]
          }
        },
        "type" : "object"
      },
      "ListVoiceConnectorsResponse" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The token to use to retrieve the next page of results."
            } ]
          },
          "VoiceConnectors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnectorList"
            }, {
              "description" : "The details of the Amazon Chime Voice Connectors."
            } ]
          }
        },
        "type" : "object"
      },
      "ListAppInstanceUsersResponse" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : "The token passed by previous API calls until all requested users are returned."
            } ]
          },
          "AppInstanceUsers" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppInstanceUserList"
            }, {
              "description" : "The information for each requested <code>AppInstanceUser</code>."
            } ]
          },
          "AppInstanceArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the <code>AppInstance</code>."
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateVoiceConnectorGroupRequest" : {
        "properties" : {
          "VoiceConnectorItems" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnectorItemList"
            }, {
              "description" : "The <code>VoiceConnectorItems</code> to associate with the group."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnectorGroupName"
            }, {
              "description" : "The name of the Amazon Chime Voice Connector group."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateVoiceConnectorGroupRequest",
        "required" : [ "Name", "VoiceConnectorItems" ]
      },
      "VoiceConnectorItem" : {
        "description" : "For Amazon Chime Voice Connector groups, the Amazon Chime Voice Connectors to which to route inbound calls. Includes priority configuration settings. Limit: 3 <code>VoiceConnectorItems</code> per Amazon Chime Voice Connector group.",
        "properties" : {
          "VoiceConnectorId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The Amazon Chime Voice Connector ID."
            } ]
          },
          "Priority" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnectorItemPriority"
            }, {
              "description" : "The priority associated with the Amazon Chime Voice Connector, with 1 being the highest priority. Higher priority Amazon Chime Voice Connectors are attempted first."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "VoiceConnectorId", "Priority" ]
      },
      "SigninDelegateGroup" : {
        "description" : "An Active Directory (AD) group whose members are granted permission to act as delegates.",
        "properties" : {
          "GroupName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The group name."
            } ]
          }
        },
        "type" : "object"
      },
      "CreateMeetingWithAttendeesResponse" : {
        "properties" : {
          "Errors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BatchCreateAttendeeErrorList"
            }, {
              "description" : "If the action fails for one or more of the attendees in the request, a list of the attendees is returned, along with error codes and error messages."
            } ]
          },
          "Meeting" : {
            "$ref" : "#/components/schemas/Meeting"
          },
          "Attendees" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AttendeeList"
            }, {
              "description" : "The attendee information, including attendees IDs and join tokens."
            } ]
          }
        },
        "type" : "object"
      },
      "Arn" : {
        "format" : "password",
        "maxLength" : 1024,
        "minLength" : 1,
        "pattern" : "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
        "type" : "string"
      },
      "ListPhoneNumbersResponse" : {
        "properties" : {
          "PhoneNumbers" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberList"
            }, {
              "description" : "The phone number details."
            } ]
          },
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The token to use to retrieve the next page of results."
            } ]
          }
        },
        "type" : "object"
      },
      "UserType" : {
        "type" : "string",
        "enum" : [ "PrivateUser", "SharedDevice" ]
      },
      "GetMeetingResponse" : {
        "properties" : {
          "Meeting" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Meeting"
            }, {
              "description" : "The Amazon Chime SDK meeting information."
            } ]
          }
        },
        "type" : "object"
      },
      "ProfileServiceMaxResults" : {
        "maximum" : 200,
        "minimum" : 1,
        "type" : "integer"
      },
      "NonEmptyStringList" : {
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/String"
        }
      },
      "UpdateAccountRequest" : {
        "properties" : {
          "DefaultLicense" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/License"
            }, {
              "description" : "The default license applied when you add users to an Amazon Chime account."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountName"
            }, {
              "description" : "The new name for the specified Amazon Chime account."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateAccountRequest"
      },
      "GetUserRequest" : {
        "type" : "object",
        "title" : "GetUserRequest"
      },
      "CreateSipMediaApplicationCallRequest" : {
        "properties" : {
          "FromPhoneNumber" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/E164PhoneNumber"
            }, {
              "description" : "The phone number that a user calls from. This is a phone number in your Amazon Chime phone number inventory."
            } ]
          },
          "ToPhoneNumber" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/E164PhoneNumber"
            }, {
              "description" : "The phone number that the service should call."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateSipMediaApplicationCallRequest",
        "required" : [ "FromPhoneNumber", "ToPhoneNumber" ]
      },
      "GetPhoneNumberSettingsResponse" : {
        "properties" : {
          "CallingNameUpdatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The updated outbound calling name timestamp, in ISO 8601 format."
            } ]
          },
          "CallingName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CallingName"
            }, {
              "description" : "The default outbound calling name for the account."
            } ]
          }
        },
        "type" : "object"
      },
      "AppInstanceUser" : {
        "description" : "The details of an <code>AppInstanceUser</code>.",
        "properties" : {
          "AppInstanceUserArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the <code>AppInstanceUser</code>."
            } ]
          },
          "CreatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time at which the <code>AppInstanceUser</code> was created."
            } ]
          },
          "LastUpdatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time at which the <code>AppInstanceUser</code> was last updated."
            } ]
          },
          "Metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Metadata"
            }, {
              "description" : "The metadata of the <code>AppInstanceUser</code>."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserName"
            }, {
              "description" : "The name of the <code>AppInstanceUser</code>."
            } ]
          }
        },
        "type" : "object"
      },
      "RedactConversationMessageRequest" : {
        "type" : "object",
        "title" : "RedactConversationMessageRequest"
      },
      "GetVoiceConnectorLoggingConfigurationRequest" : {
        "type" : "object",
        "title" : "GetVoiceConnectorLoggingConfigurationRequest"
      },
      "Metadata" : {
        "format" : "password",
        "maxLength" : 1024,
        "minLength" : 0,
        "pattern" : ".*",
        "type" : "string"
      },
      "ListAppInstanceAdminsRequest" : {
        "type" : "object",
        "title" : "ListAppInstanceAdminsRequest"
      },
      "PutVoiceConnectorOriginationRequest" : {
        "properties" : {
          "Origination" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Origination"
            }, {
              "description" : "The origination setting details to add."
            } ]
          }
        },
        "type" : "object",
        "title" : "PutVoiceConnectorOriginationRequest",
        "required" : [ "Origination" ]
      },
      "AssociatePhoneNumbersWithVoiceConnectorGroupResponse" : {
        "properties" : {
          "PhoneNumberErrors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberErrorList"
            }, {
              "description" : "If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages."
            } ]
          }
        },
        "type" : "object"
      },
      "DescribeChannelResponse" : {
        "properties" : {
          "Channel" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Channel"
            }, {
              "description" : "The channel details."
            } ]
          }
        },
        "type" : "object"
      },
      "Timestamp" : {
        "format" : "date-time",
        "type" : "string"
      },
      "UpdateSipMediaApplicationRequest" : {
        "properties" : {
          "Endpoints" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipMediaApplicationEndpointList"
            }, {
              "description" : "The new set of endpoints for the specified SIP media application."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipMediaApplicationName"
            }, {
              "description" : "The new name for the specified SIP media application."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateSipMediaApplicationRequest"
      },
      "UriType" : {
        "maxLength" : 4096,
        "type" : "string"
      },
      "CreateSipMediaApplicationResponse" : {
        "properties" : {
          "SipMediaApplication" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipMediaApplication"
            }, {
              "description" : "The SIP media application details."
            } ]
          }
        },
        "type" : "object"
      },
      "GetAccountSettingsResponse" : {
        "properties" : {
          "AccountSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountSettings"
            }, {
              "description" : "The Amazon Chime account settings."
            } ]
          }
        },
        "type" : "object"
      },
      "ListRoomsRequest" : {
        "type" : "object",
        "title" : "ListRoomsRequest"
      },
      "CreateMediaCapturePipelineResponse" : {
        "properties" : {
          "MediaCapturePipeline" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaCapturePipeline"
            }, {
              "description" : "A media capture pipeline object, the ID, source type, source ARN, sink type, and sink ARN of a media capture pipeline object."
            } ]
          }
        },
        "type" : "object"
      },
      "CountryList" : {
        "maxItems" : 100,
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Country"
        }
      },
      "OriginationRouteWeight" : {
        "maximum" : 100,
        "minimum" : 1,
        "type" : "integer"
      },
      "AttendeeList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Attendee"
        }
      },
      "DeleteVoiceConnectorRequest" : {
        "type" : "object",
        "title" : "DeleteVoiceConnectorRequest"
      },
      "GetPhoneNumberOrderRequest" : {
        "type" : "object",
        "title" : "GetPhoneNumberOrderRequest"
      },
      "GetVoiceConnectorGroupRequest" : {
        "type" : "object",
        "title" : "GetVoiceConnectorGroupRequest"
      },
      "StopMeetingTranscriptionRequest" : {
        "type" : "object",
        "title" : "StopMeetingTranscriptionRequest"
      },
      "TagResourceRequest" : {
        "properties" : {
          "ResourceARN" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "The resource ARN."
            } ]
          },
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagList"
            }, {
              "description" : "The tag key-value pairs."
            } ]
          }
        },
        "type" : "object",
        "title" : "TagResourceRequest",
        "required" : [ "ResourceARN", "Tags" ]
      },
      "Credential" : {
        "description" : "The SIP credentials used to authenticate requests to your Amazon Chime Voice Connector.",
        "properties" : {
          "Username" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveString"
            }, {
              "description" : "The RFC2617 compliant user name associated with the SIP credentials, in US-ASCII format."
            } ]
          },
          "Password" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveString"
            }, {
              "description" : "The RFC2617 compliant password associated with the SIP credentials, in US-ASCII format."
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateSipMediaApplicationResponse" : {
        "properties" : {
          "SipMediaApplication" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipMediaApplication"
            }, {
              "description" : "The updated SIP media application details."
            } ]
          }
        },
        "type" : "object"
      },
      "GetVoiceConnectorProxyRequest" : {
        "type" : "object",
        "title" : "GetVoiceConnectorProxyRequest"
      },
      "DisassociatePhoneNumbersFromVoiceConnectorGroupResponse" : {
        "properties" : {
          "PhoneNumberErrors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberErrorList"
            }, {
              "description" : "If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages."
            } ]
          }
        },
        "type" : "object"
      },
      "GetSipMediaApplicationResponse" : {
        "properties" : {
          "SipMediaApplication" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipMediaApplication"
            }, {
              "description" : "The SIP media application details."
            } ]
          }
        },
        "type" : "object"
      },
      "MediaPipelineSourceType" : {
        "type" : "string",
        "enum" : [ "ChimeSdkMeeting" ]
      },
      "UpdateChannelRequest" : {
        "properties" : {
          "Mode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelMode"
            }, {
              "description" : "The mode of the update request."
            } ]
          },
          "Metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Metadata"
            }, {
              "description" : "The metadata for the update request."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyResourceName"
            }, {
              "description" : "The name of the channel."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateChannelRequest",
        "required" : [ "Name", "Mode" ]
      },
      "GetMeetingRequest" : {
        "type" : "object",
        "title" : "GetMeetingRequest"
      },
      "ListChannelMembershipsForAppInstanceUserRequest" : {
        "type" : "object",
        "title" : "ListChannelMembershipsForAppInstanceUserRequest"
      },
      "StartMeetingTranscriptionResponse" : {
        "type" : "object"
      },
      "UpdateSipRuleResponse" : {
        "properties" : {
          "SipRule" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipRule"
            }, {
              "description" : "Updated SIP rule details."
            } ]
          }
        },
        "type" : "object"
      },
      "NonEmptyString" : {
        "pattern" : ".*\\S.*",
        "type" : "string"
      },
      "StartMeetingTranscriptionRequest" : {
        "properties" : {
          "TranscriptionConfiguration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TranscriptionConfiguration"
            }, {
              "description" : "The configuration for the current transcription operation. Must contain <code>EngineTranscribeSettings</code> or <code>EngineTranscribeMedicalSettings</code>."
            } ]
          }
        },
        "type" : "object",
        "title" : "StartMeetingTranscriptionRequest",
        "required" : [ "TranscriptionConfiguration" ]
      },
      "UpdateGlobalSettingsRequest" : {
        "properties" : {
          "BusinessCalling" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BusinessCallingSettings"
            }, {
              "description" : "The Amazon Chime Business Calling settings."
            } ]
          },
          "VoiceConnector" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnectorSettings"
            }, {
              "description" : "The Amazon Chime Voice Connector settings."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateGlobalSettingsRequest",
        "required" : [ "BusinessCalling", "VoiceConnector" ]
      },
      "AssociatePhoneNumbersWithVoiceConnectorResponse" : {
        "properties" : {
          "PhoneNumberErrors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberErrorList"
            }, {
              "description" : "If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages."
            } ]
          }
        },
        "type" : "object"
      },
      "PhoneNumber" : {
        "description" : "A phone number used for Amazon Chime Business Calling or an Amazon Chime Voice Connector.",
        "properties" : {
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberStatus"
            }, {
              "description" : "The phone number status."
            } ]
          },
          "UpdatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The updated phone number timestamp, in ISO 8601 format."
            } ]
          },
          "CreatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The phone number creation timestamp, in ISO 8601 format."
            } ]
          },
          "DeletionTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The deleted phone number timestamp, in ISO 8601 format."
            } ]
          },
          "ProductType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberProductType"
            }, {
              "description" : "The phone number product type."
            } ]
          },
          "CallingNameStatus" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CallingNameStatus"
            }, {
              "description" : "The outbound calling name status."
            } ]
          },
          "PhoneNumberId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The phone number ID."
            } ]
          },
          "Associations" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberAssociationList"
            }, {
              "description" : "The phone number associations."
            } ]
          },
          "CallingName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CallingName"
            }, {
              "description" : "The outbound calling name associated with the phone number."
            } ]
          },
          "Type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberType"
            }, {
              "description" : "The phone number type."
            } ]
          },
          "E164PhoneNumber" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/E164PhoneNumber"
            }, {
              "description" : "The phone number, in E.164 format."
            } ]
          },
          "Capabilities" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberCapabilities"
            }, {
              "description" : "The phone number capabilities."
            } ]
          },
          "Country" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Alpha2CountryCode"
            }, {
              "description" : "The phone number country. Format: ISO 3166-1 alpha-2."
            } ]
          }
        },
        "type" : "object"
      },
      "TranscribeLanguageCode" : {
        "type" : "string",
        "enum" : [ "en-US", "en-GB", "es-US", "fr-CA", "fr-FR", "en-AU", "it-IT", "de-DE", "pt-BR", "ja-JP", "ko-KR", "zh-CN" ]
      },
      "UpdateVoiceConnectorResponse" : {
        "properties" : {
          "VoiceConnector" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnector"
            }, {
              "description" : "The updated Amazon Chime Voice Connector details."
            } ]
          }
        },
        "type" : "object"
      },
      "GetAppInstanceStreamingConfigurationsRequest" : {
        "type" : "object",
        "title" : "GetAppInstanceStreamingConfigurationsRequest"
      },
      "ChannelMembershipSummaryList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ChannelMembershipSummary"
        }
      },
      "CreateVoiceConnectorGroupRequest" : {
        "properties" : {
          "VoiceConnectorItems" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnectorItemList"
            }, {
              "description" : "The Amazon Chime Voice Connectors to route inbound calls to."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnectorGroupName"
            }, {
              "description" : "The name of the Amazon Chime Voice Connector group."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateVoiceConnectorGroupRequest",
        "required" : [ "Name" ]
      },
      "EventsConfiguration" : {
        "description" : "The configuration that allows a bot to receive outgoing events. Can be either an HTTPS endpoint or a Lambda function ARN.",
        "properties" : {
          "BotId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The bot ID."
            } ]
          },
          "OutboundEventsHTTPSEndpoint" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveString"
            }, {
              "description" : "HTTPS endpoint that allows a bot to receive outgoing events."
            } ]
          },
          "LambdaFunctionArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveString"
            }, {
              "description" : "Lambda function ARN that allows a bot to receive outgoing events."
            } ]
          }
        },
        "type" : "object"
      },
      "CreateMeetingRequest" : {
        "properties" : {
          "ClientRequestToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ClientRequestToken"
            }, {
              "description" : "The unique identifier for the client request. Use a different token for different meetings."
            } ]
          },
          "MeetingHostId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ExternalUserIdType"
            }, {
              "description" : "Reserved."
            } ]
          },
          "MediaRegion" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "<p> The Region in which to create the meeting. Default: <code>us-east-1</code>. </p> <p> Available values: <code>af-south-1</code> , <code>ap-northeast-1</code> , <code>ap-northeast-2</code> , <code>ap-south-1</code> , <code>ap-southeast-1</code> , <code>ap-southeast-2</code> , <code>ca-central-1</code> , <code>eu-central-1</code> , <code>eu-north-1</code> , <code>eu-south-1</code> , <code>eu-west-1</code> , <code>eu-west-2</code> , <code>eu-west-3</code> , <code>sa-east-1</code> , <code>us-east-1</code> , <code>us-east-2</code> , <code>us-west-1</code> , <code>us-west-2</code> . </p>"
            } ]
          },
          "ExternalMeetingId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ExternalMeetingIdType"
            }, {
              "description" : "The external meeting ID."
            } ]
          },
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MeetingTagList"
            }, {
              "description" : "The tag key-value pairs."
            } ]
          },
          "NotificationsConfiguration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MeetingNotificationConfiguration"
            }, {
              "description" : "The configuration for resource targets to receive notifications when meeting and attendee events occur."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateMeetingRequest",
        "required" : [ "ClientRequestToken" ]
      },
      "GetRetentionSettingsResponse" : {
        "properties" : {
          "InitiateDeletionTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The timestamp representing the time at which the specified items are permanently deleted, in ISO 8601 format."
            } ]
          },
          "RetentionSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RetentionSettings"
            }, {
              "description" : "The retention settings."
            } ]
          }
        },
        "type" : "object"
      },
      "BatchCreateChannelMembershipResponse" : {
        "properties" : {
          "Errors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BatchCreateChannelMembershipErrors"
            }, {
              "description" : "If the action fails for one or more of the memberships in the request, a list of the memberships is returned, along with error codes and error messages."
            } ]
          },
          "BatchChannelMemberships" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BatchChannelMemberships"
            }, {
              "description" : "The list of channel memberships in the response."
            } ]
          }
        },
        "type" : "object"
      },
      "PutVoiceConnectorTerminationResponse" : {
        "properties" : {
          "Termination" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Termination"
            }, {
              "description" : "The updated termination setting details."
            } ]
          }
        },
        "type" : "object"
      },
      "PhoneNumberOrder" : {
        "description" : "The details of a phone number order created for Amazon Chime.",
        "properties" : {
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberOrderStatus"
            }, {
              "description" : "The status of the phone number order."
            } ]
          },
          "UpdatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The updated phone number order time stamp, in ISO 8601 format."
            } ]
          },
          "CreatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The phone number order creation time stamp, in ISO 8601 format."
            } ]
          },
          "PhoneNumberOrderId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuidString"
            }, {
              "description" : "The phone number order ID."
            } ]
          },
          "ProductType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberProductType"
            }, {
              "description" : "The phone number order product type."
            } ]
          },
          "OrderedPhoneNumbers" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OrderedPhoneNumberList"
            }, {
              "description" : "The ordered phone number details, such as the phone number in E.164 format and the phone number status."
            } ]
          }
        },
        "type" : "object"
      },
      "TranscribeVocabularyFilterMethod" : {
        "type" : "string",
        "enum" : [ "remove", "mask", "tag" ]
      },
      "VoiceConnectorSettings" : {
        "description" : "The Amazon Chime Voice Connector settings. Includes any Amazon S3 buckets designated for storing call detail records.",
        "properties" : {
          "CdrBucket" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The Amazon S3 bucket designated for call detail record storage."
            } ]
          }
        },
        "type" : "object"
      },
      "InviteStatus" : {
        "type" : "string",
        "enum" : [ "Pending", "Accepted", "Failed" ]
      },
      "GetVoiceConnectorRequest" : {
        "type" : "object",
        "title" : "GetVoiceConnectorRequest"
      },
      "ListUsersResponse" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The token to use to retrieve the next page of results."
            } ]
          },
          "Users" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserList"
            }, {
              "description" : "List of users and user details."
            } ]
          }
        },
        "type" : "object"
      },
      "DeleteVoiceConnectorStreamingConfigurationRequest" : {
        "type" : "object",
        "title" : "DeleteVoiceConnectorStreamingConfigurationRequest"
      },
      "GetEventsConfigurationRequest" : {
        "type" : "object",
        "title" : "GetEventsConfigurationRequest"
      },
      "OrderedPhoneNumber" : {
        "description" : "A phone number for which an order has been placed.",
        "properties" : {
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OrderedPhoneNumberStatus"
            }, {
              "description" : "The phone number status."
            } ]
          },
          "E164PhoneNumber" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/E164PhoneNumber"
            }, {
              "description" : "The phone number, in E.164 format."
            } ]
          }
        },
        "type" : "object"
      },
      "DisassociateSigninDelegateGroupsFromAccountRequest" : {
        "properties" : {
          "GroupNames" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyStringList"
            }, {
              "description" : "The sign-in delegate group names."
            } ]
          }
        },
        "type" : "object",
        "title" : "DisassociateSigninDelegateGroupsFromAccountRequest",
        "required" : [ "GroupNames" ]
      },
      "NullableBoolean" : {
        "type" : "boolean"
      },
      "CapabilityList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Capability"
        }
      },
      "ChannelMode" : {
        "type" : "string",
        "enum" : [ "UNRESTRICTED", "RESTRICTED" ]
      },
      "ProxySessions" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ProxySession"
        }
      },
      "VoiceConnectorAwsRegion" : {
        "type" : "string",
        "enum" : [ "us-east-1", "us-west-2" ]
      },
      "CreateAttendeeRequest" : {
        "properties" : {
          "ExternalUserId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ExternalUserIdType"
            }, {
              "description" : "The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application."
            } ]
          },
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AttendeeTagList"
            }, {
              "description" : "The tag key-value pairs."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateAttendeeRequest",
        "required" : [ "ExternalUserId" ]
      },
      "ListSipRulesRequest" : {
        "type" : "object",
        "title" : "ListSipRulesRequest"
      },
      "ListVoiceConnectorTerminationCredentialsRequest" : {
        "type" : "object",
        "title" : "ListVoiceConnectorTerminationCredentialsRequest"
      },
      "DeleteEventsConfigurationRequest" : {
        "type" : "object",
        "title" : "DeleteEventsConfigurationRequest"
      },
      "CreateChannelModeratorResponse" : {
        "properties" : {
          "ChannelArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the channel."
            } ]
          },
          "ChannelModerator" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identity"
            }, {
              "description" : "The ARNs of the channel and the moderator."
            } ]
          }
        },
        "type" : "object"
      },
      "CreateAppInstanceUserRequest" : {
        "properties" : {
          "ClientRequestToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ClientRequestToken"
            }, {
              "description" : "The token assigned to the user requesting an <code>AppInstance</code>."
            } ]
          },
          "AppInstanceUserId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            }, {
              "description" : "The user ID of the <code>AppInstance</code>."
            } ]
          },
          "Metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Metadata"
            }, {
              "description" : "The request's metadata. Limited to a 1KB string in UTF-8."
            } ]
          },
          "AppInstanceArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the <code>AppInstance</code> request."
            } ]
          },
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagList"
            }, {
              "description" : "Tags assigned to the <code>AppInstanceUser</code>."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserName"
            }, {
              "description" : "The user's name."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateAppInstanceUserRequest",
        "required" : [ "AppInstanceArn", "AppInstanceUserId", "Name", "ClientRequestToken" ]
      },
      "UpdateBotResponse" : {
        "properties" : {
          "Bot" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Bot"
            }, {
              "description" : "The updated bot details."
            } ]
          }
        },
        "type" : "object"
      },
      "AppInstanceRetentionSettings" : {
        "description" : "The details of the data-retention settings for an <code>AppInstance</code>.",
        "properties" : {
          "ChannelRetentionSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelRetentionSettings"
            }, {
              "description" : "The length of time in days to retain the messages in a channel."
            } ]
          }
        },
        "type" : "object"
      },
      "AppInstanceAdminList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AppInstanceAdminSummary"
        }
      },
      "UpdateSipRuleRequest" : {
        "properties" : {
          "TargetApplications" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipRuleTargetApplicationList"
            }, {
              "description" : "The new value of the list of target applications."
            } ]
          },
          "Disabled" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NullableBoolean"
            }, {
              "description" : "The new value specified to indicate whether the rule is disabled."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipRuleName"
            }, {
              "description" : "The new name for the specified SIP rule."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateSipRuleRequest",
        "required" : [ "Name" ]
      },
      "GetSipRuleResponse" : {
        "properties" : {
          "SipRule" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipRule"
            }, {
              "description" : "The SIP rule details."
            } ]
          }
        },
        "type" : "object"
      },
      "ListSipMediaApplicationsResponse" : {
        "properties" : {
          "SipMediaApplications" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipMediaApplicationList"
            }, {
              "description" : "List of SIP media applications and application details."
            } ]
          },
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextTokenString"
            }, {
              "description" : "The token to use to retrieve the next page of results."
            } ]
          }
        },
        "type" : "object"
      },
      "CreateUserRequest" : {
        "properties" : {
          "Email" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EmailAddress"
            }, {
              "description" : "The user's email address."
            } ]
          },
          "Username" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The user name."
            } ]
          },
          "UserType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserType"
            }, {
              "description" : "The user type."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateUserRequest"
      },
      "GetUserSettingsResponse" : {
        "properties" : {
          "UserSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserSettings"
            }, {
              "description" : "The user settings."
            } ]
          }
        },
        "type" : "object"
      },
      "MembershipItemList" : {
        "maxItems" : 50,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/MembershipItem"
        }
      },
      "SipRuleTriggerType" : {
        "type" : "string",
        "enum" : [ "ToPhoneNumber", "RequestUriHostname" ]
      },
      "GetRoomResponse" : {
        "properties" : {
          "Room" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Room"
            }, {
              "description" : "The room details."
            } ]
          }
        },
        "type" : "object"
      },
      "NumberSelectionBehavior" : {
        "type" : "string",
        "enum" : [ "PreferSticky", "AvoidSticky" ]
      },
      "GetAppInstanceRetentionSettingsResponse" : {
        "properties" : {
          "InitiateDeletionTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The timestamp representing the time at which the specified items are retained, in Epoch Seconds."
            } ]
          },
          "AppInstanceRetentionSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppInstanceRetentionSettings"
            }, {
              "description" : "The retention settings for the <code>AppInstance</code>."
            } ]
          }
        },
        "type" : "object"
      },
      "OrderedPhoneNumberList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/OrderedPhoneNumber"
        }
      },
      "DeleteChannelMembershipRequest" : {
        "type" : "object",
        "title" : "DeleteChannelMembershipRequest"
      },
      "TranscribeRegion" : {
        "type" : "string",
        "enum" : [ "us-east-2", "us-east-1", "us-west-2", "ap-northeast-2", "ap-southeast-2", "ap-northeast-1", "ca-central-1", "eu-central-1", "eu-west-1", "eu-west-2", "sa-east-1", "auto" ]
      },
      "BotType" : {
        "type" : "string",
        "enum" : [ "ChatBot" ]
      },
      "ListAttendeeTagsResponse" : {
        "properties" : {
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagList"
            }, {
              "description" : "A list of tag key-value pairs."
            } ]
          }
        },
        "type" : "object"
      },
      "CallingName" : {
        "format" : "password",
        "pattern" : "^$|^[a-zA-Z0-9 ]{2,15}$",
        "type" : "string"
      },
      "BatchSuspendUserRequest" : {
        "properties" : {
          "UserIdList" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserIdList"
            }, {
              "description" : "The request containing the user IDs to suspend."
            } ]
          }
        },
        "type" : "object",
        "title" : "BatchSuspendUserRequest",
        "required" : [ "UserIdList" ]
      },
      "Proxy" : {
        "description" : "The proxy configuration for an Amazon Chime Voice Connector.",
        "properties" : {
          "FallBackPhoneNumber" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/E164PhoneNumber"
            }, {
              "description" : "The phone number to route calls to after a proxy session expires."
            } ]
          },
          "PhoneNumberCountries" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StringList"
            }, {
              "description" : "The countries for proxy phone numbers to be selected from."
            } ]
          },
          "Disabled" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Boolean"
            }, {
              "description" : "When true, stops proxy sessions from being created on the specified Amazon Chime Voice Connector."
            } ]
          },
          "DefaultSessionExpiryMinutes" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Integer"
            }, {
              "description" : "The default number of minutes allowed for proxy sessions."
            } ]
          }
        },
        "type" : "object"
      },
      "RedactChannelMessageRequest" : {
        "type" : "object",
        "title" : "RedactChannelMessageRequest"
      },
      "StreamingNotificationTarget" : {
        "description" : "The targeted recipient for a streaming configuration notification.",
        "properties" : {
          "NotificationTarget" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NotificationTarget"
            }, {
              "description" : "The streaming notification target."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "NotificationTarget" ]
      },
      "UpdateRoomMembershipResponse" : {
        "properties" : {
          "RoomMembership" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RoomMembership"
            }, {
              "description" : "The room membership details."
            } ]
          }
        },
        "type" : "object"
      },
      "VoiceConnector" : {
        "description" : "The Amazon Chime Voice Connector configuration, including outbound host name and encryption settings.",
        "properties" : {
          "RequireEncryption" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Boolean"
            }, {
              "description" : "Designates whether encryption is required for the Amazon Chime Voice Connector."
            } ]
          },
          "UpdatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The updated Amazon Chime Voice Connector timestamp, in ISO 8601 format."
            } ]
          },
          "VoiceConnectorId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The Amazon Chime Voice Connector ID."
            } ]
          },
          "CreatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The Amazon Chime Voice Connector creation timestamp, in ISO 8601 format."
            } ]
          },
          "AwsRegion" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnectorAwsRegion"
            }, {
              "description" : " The AWS Region in which the Amazon Chime Voice Connector is created. Default: <code>us-east-1</code>. "
            } ]
          },
          "OutboundHostName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The outbound host name for the Amazon Chime Voice Connector."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnectorName"
            }, {
              "description" : "The name of the Amazon Chime Voice Connector."
            } ]
          }
        },
        "type" : "object"
      },
      "OriginationRoute" : {
        "description" : "Origination routes define call distribution properties for your SIP hosts to receive inbound calls using your Amazon Chime Voice Connector. Limit: Ten origination routes for each Amazon Chime Voice Connector.",
        "properties" : {
          "Priority" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OriginationRoutePriority"
            }, {
              "description" : "The priority associated with the host, with 1 being the highest priority. Higher priority hosts are attempted first."
            } ]
          },
          "Port" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Port"
            }, {
              "description" : "The designated origination route port. Defaults to 5060."
            } ]
          },
          "Host" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The FQDN or IP address to contact for origination traffic."
            } ]
          },
          "Protocol" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OriginationRouteProtocol"
            }, {
              "description" : "The protocol to use for the origination route. Encryption-enabled Amazon Chime Voice Connectors use TCP protocol by default."
            } ]
          },
          "Weight" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OriginationRouteWeight"
            }, {
              "description" : "The weight associated with the host. If hosts are equal in priority, calls are redistributed among them based on their relative weight."
            } ]
          }
        },
        "type" : "object"
      },
      "ListTagsForResourceResponse" : {
        "properties" : {
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagList"
            }, {
              "description" : "A list of tag-key value pairs."
            } ]
          }
        },
        "type" : "object"
      },
      "UpdatePhoneNumberRequestItemList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/UpdatePhoneNumberRequestItem"
        }
      },
      "UserError" : {
        "description" : "The list of errors returned when errors are encountered during the <a>BatchSuspendUser</a>, <a>BatchUnsuspendUser</a>, or <a>BatchUpdateUser</a> actions. This includes user IDs, error codes, and error messages.",
        "properties" : {
          "UserId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The user ID for which the action failed."
            } ]
          },
          "ErrorCode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ErrorCode"
            }, {
              "description" : "The error code."
            } ]
          },
          "ErrorMessage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The error message."
            } ]
          }
        },
        "type" : "object"
      },
      "UserName" : {
        "format" : "password",
        "maxLength" : 100,
        "minLength" : 1,
        "pattern" : ".*\\S.*",
        "type" : "string"
      },
      "OriginationRoutePriority" : {
        "maximum" : 100,
        "minimum" : 1,
        "type" : "integer"
      },
      "JoinTokenString" : {
        "format" : "password",
        "maxLength" : 2048,
        "minLength" : 2,
        "pattern" : "^[a-zA-Z0-9+/]+$",
        "type" : "string"
      },
      "GetChannelMessageResponse" : {
        "properties" : {
          "ChannelMessage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelMessage"
            }, {
              "description" : "The details of and content in the message."
            } ]
          }
        },
        "type" : "object"
      },
      "SigninDelegateGroupList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/SigninDelegateGroup"
        }
      },
      "ListChannelsModeratedByAppInstanceUserResponse" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : "The token returned from previous API requests until the number of channels moderated by the user is reached."
            } ]
          },
          "Channels" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelModeratedByAppInstanceUserSummaryList"
            }, {
              "description" : "The moderated channels in the request."
            } ]
          }
        },
        "type" : "object"
      },
      "InviteUsersRequest" : {
        "properties" : {
          "UserEmailList" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserEmailList"
            }, {
              "description" : "The user email addresses to which to send the email invitation."
            } ]
          },
          "UserType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserType"
            }, {
              "description" : "The user type."
            } ]
          }
        },
        "type" : "object",
        "title" : "InviteUsersRequest",
        "required" : [ "UserEmailList" ]
      },
      "Integer" : {
        "type" : "integer"
      },
      "CreateAccountRequest" : {
        "properties" : {
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountName"
            }, {
              "description" : "The name of the Amazon Chime account."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateAccountRequest",
        "required" : [ "Name" ]
      },
      "DescribeAppInstanceResponse" : {
        "properties" : {
          "AppInstance" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppInstance"
            }, {
              "description" : "The ARN, metadata, created and last-updated timestamps, and the name of the <code>AppInstance</code>. All timestamps use epoch milliseconds."
            } ]
          }
        },
        "type" : "object"
      },
      "ResourceLimitExceededException" : { },
      "SipRule" : {
        "description" : "The SIP rule details, including name, triggers, and target applications. An AWS account can have multiple SIP rules.",
        "properties" : {
          "TriggerType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipRuleTriggerType"
            }, {
              "description" : "The type of trigger assigned to the SIP rule in <code>TriggerValue</code>, currently <code>RequestUriHostname</code> or <code>ToPhoneNumber</code>."
            } ]
          },
          "UpdatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The time at which the SIP rule was last updated, in ISO 8601 format."
            } ]
          },
          "TriggerValue" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "If <code>TriggerType</code> is <code>RequestUriHostname</code>, then the value can be the outbound host name of the Amazon Chime Voice Connector. If <code>TriggerType</code> is <code>ToPhoneNumber</code>, then the value can be a customer-owned phone number in E164 format. <code>SipRule</code> is triggered when a SIP rule requests host name or <code>ToPhoneNumber</code> matches in the incoming SIP request."
            } ]
          },
          "CreatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The time at which the SIP rule was created, in ISO 8601 format."
            } ]
          },
          "SipRuleId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The SIP rule ID."
            } ]
          },
          "TargetApplications" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipRuleTargetApplicationList"
            }, {
              "description" : "Target SIP media application and other details, such as priority and AWS Region, to be specified in the SIP rule. Only one SIP rule per AWS Region can be provided."
            } ]
          },
          "Disabled" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Boolean"
            }, {
              "description" : "Indicates whether the SIP rule is enabled or disabled. You must disable a rule before you can delete it."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipRuleName"
            }, {
              "description" : "The name of the SIP rule."
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateAccountSettingsRequest" : {
        "properties" : {
          "AccountSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountSettings"
            }, {
              "description" : "The Amazon Chime account settings to update."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateAccountSettingsRequest",
        "required" : [ "AccountSettings" ]
      },
      "UntagMeetingRequest" : {
        "properties" : {
          "TagKeys" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MeetingTagKeyList"
            }, {
              "description" : "The tag keys."
            } ]
          }
        },
        "type" : "object",
        "title" : "UntagMeetingRequest",
        "required" : [ "TagKeys" ]
      },
      "ChannelBanSummary" : {
        "description" : "Summary of the details of a <code>ChannelBan</code>.",
        "properties" : {
          "Member" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identity"
            }, {
              "description" : "The member being banned from a channel."
            } ]
          }
        },
        "type" : "object"
      },
      "TagKeyList" : {
        "maxItems" : 50,
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/TagKey"
        }
      },
      "CreateRoomMembershipRequest" : {
        "properties" : {
          "Role" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RoomMembershipRole"
            }, {
              "description" : "The role of the member."
            } ]
          },
          "MemberId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The Amazon Chime member ID (user ID or bot ID)."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateRoomMembershipRequest",
        "required" : [ "MemberId" ]
      },
      "MessageId" : {
        "maxLength" : 128,
        "minLength" : 1,
        "pattern" : "[-_a-zA-Z0-9]*",
        "type" : "string"
      },
      "GetProxySessionRequest" : {
        "type" : "object",
        "title" : "GetProxySessionRequest"
      },
      "Account" : {
        "description" : "The Amazon Chime account details. An AWS account can have multiple Amazon Chime accounts.",
        "properties" : {
          "AccountStatus" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountStatus"
            }, {
              "description" : "The status of the account."
            } ]
          },
          "AccountId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The Amazon Chime account ID."
            } ]
          },
          "CreatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The Amazon Chime account creation timestamp, in ISO 8601 format."
            } ]
          },
          "SigninDelegateGroups" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SigninDelegateGroupList"
            }, {
              "description" : "The sign-in delegate groups associated with the account."
            } ]
          },
          "AwsAccountId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The AWS account ID."
            } ]
          },
          "DefaultLicense" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/License"
            }, {
              "description" : "The default license for the Amazon Chime account."
            } ]
          },
          "AccountType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountType"
            }, {
              "description" : "The Amazon Chime account type. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The Amazon Chime account name."
            } ]
          },
          "SupportedLicenses" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/LicenseList"
            }, {
              "description" : "Supported licenses for the Amazon Chime account."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "AwsAccountId", "AccountId", "Name" ]
      },
      "ListRoomMembershipsResponse" : {
        "properties" : {
          "RoomMemberships" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RoomMembershipList"
            }, {
              "description" : "The room membership details."
            } ]
          },
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The token to use to retrieve the next page of results."
            } ]
          }
        },
        "type" : "object"
      },
      "MeetingNotificationConfiguration" : {
        "description" : " The resource target configurations for receiving Amazon Chime SDK meeting and attendee event notifications. The Amazon Chime SDK supports resource targets located in the US East (N. Virginia) AWS Region (<code>us-east-1</code>). ",
        "properties" : {
          "SqsQueueArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "The SQS queue ARN."
            } ]
          },
          "SnsTopicArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "The SNS topic ARN."
            } ]
          }
        },
        "type" : "object"
      },
      "DeleteAccountResponse" : {
        "type" : "object"
      },
      "NotificationTarget" : {
        "type" : "string",
        "enum" : [ "EventBridge", "SNS", "SQS" ]
      },
      "GetAccountResponse" : {
        "properties" : {
          "Account" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Account"
            }, {
              "description" : "The Amazon Chime account details."
            } ]
          }
        },
        "type" : "object"
      },
      "DisassociatePhoneNumberFromUserRequest" : {
        "type" : "object",
        "title" : "DisassociatePhoneNumberFromUserRequest"
      },
      "OriginationRouteProtocol" : {
        "type" : "string",
        "enum" : [ "TCP", "UDP" ]
      },
      "GetSipMediaApplicationLoggingConfigurationResponse" : {
        "properties" : {
          "SipMediaApplicationLoggingConfiguration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipMediaApplicationLoggingConfiguration"
            }, {
              "description" : "The actual logging configuration."
            } ]
          }
        },
        "type" : "object"
      },
      "GetVoiceConnectorTerminationRequest" : {
        "type" : "object",
        "title" : "GetVoiceConnectorTerminationRequest"
      },
      "UnauthorizedClientException" : { },
      "BatchUpdatePhoneNumberResponse" : {
        "properties" : {
          "PhoneNumberErrors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberErrorList"
            }, {
              "description" : "If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages."
            } ]
          }
        },
        "type" : "object"
      },
      "MemberError" : {
        "description" : "The list of errors returned when a member action results in an error.",
        "properties" : {
          "MemberId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The member ID."
            } ]
          },
          "ErrorCode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ErrorCode"
            }, {
              "description" : "The error code."
            } ]
          },
          "ErrorMessage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The error message."
            } ]
          }
        },
        "type" : "object"
      },
      "TranscribeMedicalRegion" : {
        "type" : "string",
        "enum" : [ "us-east-1", "us-east-2", "us-west-2", "ap-southeast-2", "ca-central-1", "eu-west-1", "auto" ]
      },
      "SipRuleList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/SipRule"
        }
      },
      "ListAppInstancesResponse" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : "The token passed by previous API requests until the maximum number of <code>AppInstance</code>s is reached."
            } ]
          },
          "AppInstances" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppInstanceList"
            }, {
              "description" : "The information for each <code>AppInstance</code>."
            } ]
          }
        },
        "type" : "object"
      },
      "MeetingTagKeyList" : {
        "maxItems" : 50,
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/TagKey"
        }
      },
      "Boolean" : {
        "type" : "boolean"
      },
      "Identity" : {
        "description" : "The details of a user.",
        "properties" : {
          "Arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN in an Identity."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResourceName"
            }, {
              "description" : "The name in an Identity."
            } ]
          }
        },
        "type" : "object"
      },
      "InviteUsersResponse" : {
        "properties" : {
          "Invites" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/InviteList"
            }, {
              "description" : "The email invitation details."
            } ]
          }
        },
        "type" : "object"
      },
      "CreateAccountResponse" : {
        "properties" : {
          "Account" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Account"
            }, {
              "description" : "The Amazon Chime account details."
            } ]
          }
        },
        "type" : "object"
      },
      "DescribeAppInstanceAdminResponse" : {
        "properties" : {
          "AppInstanceAdmin" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppInstanceAdmin"
            }, {
              "description" : "The ARN and name of the <code>AppInstanceUser</code>, the ARN of the <code>AppInstance</code>, and the created and last-updated timestamps. All timestamps use epoch milliseconds."
            } ]
          }
        },
        "type" : "object"
      },
      "BatchChannelMemberships" : {
        "description" : "The membership information, including member ARNs, the channel ARN, and membership types.",
        "properties" : {
          "InvitedBy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identity"
            }, {
              "description" : "The identifier of the member who invited another member."
            } ]
          },
          "ChannelArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the channel to which you're adding users."
            } ]
          },
          "Type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelMembershipType"
            }, {
              "description" : "The membership types set for the channel users."
            } ]
          },
          "Members" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Members"
            }, {
              "description" : "The users successfully added to the request."
            } ]
          }
        },
        "type" : "object"
      },
      "PhoneNumberError" : {
        "description" : "If the phone number action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.",
        "properties" : {
          "ErrorCode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ErrorCode"
            }, {
              "description" : "The error code."
            } ]
          },
          "PhoneNumberId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The phone number ID for which the action failed."
            } ]
          },
          "ErrorMessage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The error message."
            } ]
          }
        },
        "type" : "object"
      },
      "ListVoiceConnectorGroupsResponse" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The token to use to retrieve the next page of results."
            } ]
          },
          "VoiceConnectorGroups" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnectorGroupList"
            }, {
              "description" : "The details of the Amazon Chime Voice Connector groups."
            } ]
          }
        },
        "type" : "object"
      },
      "ListMeetingsRequest" : {
        "type" : "object",
        "title" : "ListMeetingsRequest"
      },
      "ListSupportedPhoneNumberCountriesRequest" : {
        "type" : "object",
        "title" : "ListSupportedPhoneNumberCountriesRequest"
      },
      "PhoneNumberStatus" : {
        "type" : "string",
        "enum" : [ "AcquireInProgress", "AcquireFailed", "Unassigned", "Assigned", "ReleaseInProgress", "DeleteInProgress", "ReleaseFailed", "DeleteFailed" ]
      },
      "DescribeAppInstanceAdminRequest" : {
        "type" : "object",
        "title" : "DescribeAppInstanceAdminRequest"
      },
      "ListBotsRequest" : {
        "type" : "object",
        "title" : "ListBotsRequest"
      },
      "SipMediaApplicationEndpoint" : {
        "description" : "The endpoint assigned to the SIP media application.",
        "properties" : {
          "LambdaArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/FunctionArn"
            }, {
              "description" : "Valid Amazon Resource Name (ARN) of the Lambda function. The function must be created in the same AWS Region as the SIP media application."
            } ]
          }
        },
        "type" : "object"
      },
      "GetVoiceConnectorTerminationResponse" : {
        "properties" : {
          "Termination" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Termination"
            }, {
              "description" : "The termination setting details."
            } ]
          }
        },
        "type" : "object"
      },
      "ListAttendeeTagsRequest" : {
        "type" : "object",
        "title" : "ListAttendeeTagsRequest"
      },
      "Country" : {
        "pattern" : "^$|^[A-Z]{2,2}$",
        "type" : "string"
      },
      "GetGlobalSettingsResponse" : {
        "properties" : {
          "BusinessCalling" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/BusinessCallingSettings"
            }, {
              "description" : "The Amazon Chime Business Calling settings."
            } ]
          },
          "VoiceConnector" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnectorSettings"
            }, {
              "description" : "The Amazon Chime Voice Connector settings."
            } ]
          }
        },
        "type" : "object"
      },
      "ChannelMessageSummaryList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ChannelMessageSummary"
        }
      },
      "CreateSipMediaApplicationRequest" : {
        "properties" : {
          "Endpoints" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipMediaApplicationEndpointList"
            }, {
              "description" : "List of endpoints (Lambda Amazon Resource Names) specified for the SIP media application. Currently, only one endpoint is supported."
            } ]
          },
          "AwsRegion" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The AWS Region assigned to the SIP media application."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipMediaApplicationName"
            }, {
              "description" : "The SIP media application name."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateSipMediaApplicationRequest",
        "required" : [ "AwsRegion", "Name", "Endpoints" ]
      },
      "AlexaForBusinessMetadata" : {
        "description" : "The Alexa for Business metadata associated with an Amazon Chime user, used to integrate Alexa for Business with a device.",
        "properties" : {
          "IsAlexaForBusinessEnabled" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Boolean"
            }, {
              "description" : "Starts or stops Alexa for Business."
            } ]
          },
          "AlexaForBusinessRoomArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveString"
            }, {
              "description" : "The ARN of the room resource."
            } ]
          }
        },
        "type" : "object"
      },
      "Members" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Identity"
        }
      },
      "DescribeChannelMembershipForAppInstanceUserRequest" : {
        "type" : "object",
        "title" : "DescribeChannelMembershipForAppInstanceUserRequest"
      },
      "ResetPersonalPINResponse" : {
        "properties" : {
          "User" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/User"
            }, {
              "description" : "The user details and new personal meeting PIN."
            } ]
          }
        },
        "type" : "object"
      },
      "DeleteAttendeeRequest" : {
        "type" : "object",
        "title" : "DeleteAttendeeRequest"
      },
      "AttendeeTagList" : {
        "maxItems" : 10,
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Tag"
        }
      },
      "UserErrorList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/UserError"
        }
      },
      "DeleteVoiceConnectorTerminationRequest" : {
        "type" : "object",
        "title" : "DeleteVoiceConnectorTerminationRequest"
      },
      "AccountList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Account"
        }
      },
      "UpdateAppInstanceResponse" : {
        "properties" : {
          "AppInstanceArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the <code>AppInstance</code>. "
            } ]
          }
        },
        "type" : "object"
      },
      "ListChannelMessagesResponse" : {
        "properties" : {
          "ChannelArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the channel containing the requested messages."
            } ]
          },
          "ChannelMessages" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelMessageSummaryList"
            }, {
              "description" : "The information about, and content of, each requested message."
            } ]
          },
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : "The token passed by previous API calls until all requested messages are returned."
            } ]
          }
        },
        "type" : "object"
      },
      "RetentionSettings" : {
        "description" : "The retention settings for an Amazon Chime Enterprise account that determine how long to retain items such as chat-room messages and chat-conversation messages.",
        "properties" : {
          "RoomRetentionSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RoomRetentionSettings"
            }, {
              "description" : "The chat room retention settings."
            } ]
          },
          "ConversationRetentionSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ConversationRetentionSettings"
            }, {
              "description" : "The chat conversation retention settings."
            } ]
          }
        },
        "type" : "object"
      },
      "ListChannelsModeratedByAppInstanceUserRequest" : {
        "type" : "object",
        "title" : "ListChannelsModeratedByAppInstanceUserRequest"
      },
      "ListAppInstancesRequest" : {
        "type" : "object",
        "title" : "ListAppInstancesRequest"
      },
      "UpdateUserRequestItem" : {
        "description" : "The user ID and user fields to update, used with the <a>BatchUpdateUser</a> action.",
        "properties" : {
          "UserId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The user ID."
            } ]
          },
          "UserType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserType"
            }, {
              "description" : "The user type."
            } ]
          },
          "AlexaForBusinessMetadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AlexaForBusinessMetadata"
            }, {
              "description" : "The Alexa for Business metadata."
            } ]
          },
          "LicenseType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/License"
            }, {
              "description" : "The user license type."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "UserId" ]
      },
      "SipMediaApplicationEndpointList" : {
        "maxItems" : 1,
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/SipMediaApplicationEndpoint"
        }
      },
      "DeleteChannelBanRequest" : {
        "type" : "object",
        "title" : "DeleteChannelBanRequest"
      },
      "PutVoiceConnectorEmergencyCallingConfigurationResponse" : {
        "properties" : {
          "EmergencyCallingConfiguration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EmergencyCallingConfiguration"
            }, {
              "description" : "The emergency calling configuration details."
            } ]
          }
        },
        "type" : "object"
      },
      "StreamingConfiguration" : {
        "description" : "The streaming configuration associated with an Amazon Chime Voice Connector. Specifies whether media streaming is enabled for sending to Amazon Kinesis, and shows the retention period for the Amazon Kinesis data, in hours.",
        "properties" : {
          "Disabled" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Boolean"
            }, {
              "description" : "When true, media streaming to Amazon Kinesis is turned off."
            } ]
          },
          "StreamingNotificationTargets" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StreamingNotificationTargetList"
            }, {
              "description" : "The streaming notification targets."
            } ]
          },
          "DataRetentionInHours" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DataRetentionInHours"
            }, {
              "description" : "The retention period, in hours, for the Amazon Kinesis data."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "DataRetentionInHours" ]
      },
      "PhoneNumberType" : {
        "type" : "string",
        "enum" : [ "Local", "TollFree" ]
      },
      "DescribeChannelMembershipForAppInstanceUserResponse" : {
        "properties" : {
          "ChannelMembership" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelMembershipForAppInstanceUserSummary"
            }, {
              "description" : "The channel to which a user belongs."
            } ]
          }
        },
        "type" : "object"
      },
      "BatchCreateAttendeeErrorList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CreateAttendeeError"
        }
      },
      "GetPhoneNumberResponse" : {
        "properties" : {
          "PhoneNumber" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumber"
            }, {
              "description" : "The phone number details."
            } ]
          }
        },
        "type" : "object"
      },
      "ExternalMeetingIdType" : {
        "format" : "password",
        "maxLength" : 64,
        "minLength" : 2,
        "type" : "string"
      },
      "ListAppInstanceAdminsResponse" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : "The token returned from previous API requests until the number of administrators is reached."
            } ]
          },
          "AppInstanceAdmins" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppInstanceAdminList"
            }, {
              "description" : "The information for each administrator."
            } ]
          },
          "AppInstanceArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the <code>AppInstance</code>."
            } ]
          }
        },
        "type" : "object"
      },
      "CreatePhoneNumberOrderRequest" : {
        "properties" : {
          "E164PhoneNumbers" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/E164PhoneNumberList"
            }, {
              "description" : "List of phone numbers, in E.164 format."
            } ]
          },
          "ProductType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberProductType"
            }, {
              "description" : "The phone number product type."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreatePhoneNumberOrderRequest",
        "required" : [ "ProductType", "E164PhoneNumbers" ]
      },
      "AppInstanceSummary" : {
        "description" : "Summary of the data for an <code>AppInstance</code>.",
        "properties" : {
          "Metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Metadata"
            }, {
              "description" : "The metadata of the <code>AppInstance</code>."
            } ]
          },
          "AppInstanceArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The <code>AppInstance</code> ARN."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyResourceName"
            }, {
              "description" : "The name of the <code>AppInstance</code>."
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateChannelReadMarkerRequest" : {
        "type" : "object",
        "title" : "UpdateChannelReadMarkerRequest"
      },
      "Tag" : {
        "description" : "Describes a tag applied to a resource.",
        "properties" : {
          "Value" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagValue"
            }, {
              "description" : "The value of the tag."
            } ]
          },
          "Key" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagKey"
            }, {
              "description" : "The key of the tag."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "Key", "Value" ]
      },
      "GetVoiceConnectorTerminationHealthRequest" : {
        "type" : "object",
        "title" : "GetVoiceConnectorTerminationHealthRequest"
      },
      "CreatePhoneNumberOrderResponse" : {
        "properties" : {
          "PhoneNumberOrder" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberOrder"
            }, {
              "description" : "The phone number order details."
            } ]
          }
        },
        "type" : "object"
      },
      "PutEventsConfigurationResponse" : {
        "properties" : {
          "EventsConfiguration" : {
            "$ref" : "#/components/schemas/EventsConfiguration"
          }
        },
        "type" : "object"
      },
      "PutEventsConfigurationRequest" : {
        "properties" : {
          "OutboundEventsHTTPSEndpoint" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveString"
            }, {
              "description" : "HTTPS endpoint that allows the bot to receive outgoing events."
            } ]
          },
          "LambdaFunctionArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveString"
            }, {
              "description" : "Lambda function ARN that allows the bot to receive outgoing events."
            } ]
          }
        },
        "type" : "object",
        "title" : "PutEventsConfigurationRequest"
      },
      "SipMediaApplicationList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/SipMediaApplication"
        }
      },
      "PutAppInstanceStreamingConfigurationsRequest" : {
        "properties" : {
          "AppInstanceStreamingConfigurations" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppInstanceStreamingConfigurationList"
            }, {
              "description" : "The streaming configurations set for an <code>AppInstance</code>."
            } ]
          }
        },
        "type" : "object",
        "title" : "PutAppInstanceStreamingConfigurationsRequest",
        "required" : [ "AppInstanceStreamingConfigurations" ]
      },
      "AccessDeniedException" : { },
      "DeleteAccountRequest" : {
        "type" : "object",
        "title" : "DeleteAccountRequest"
      },
      "GetEventsConfigurationResponse" : {
        "properties" : {
          "EventsConfiguration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EventsConfiguration"
            }, {
              "description" : "The events configuration details."
            } ]
          }
        },
        "type" : "object"
      },
      "GetVoiceConnectorStreamingConfigurationResponse" : {
        "properties" : {
          "StreamingConfiguration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StreamingConfiguration"
            }, {
              "description" : "The streaming configuration details."
            } ]
          }
        },
        "type" : "object"
      },
      "CallingRegion" : {
        "type" : "string"
      },
      "PhoneNumberAssociationList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/PhoneNumberAssociation"
        }
      },
      "UserIdList" : {
        "maxItems" : 50,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/NonEmptyString"
        }
      },
      "AccountStatus" : {
        "type" : "string",
        "enum" : [ "Suspended", "Active" ]
      },
      "BatchDeletePhoneNumberResponse" : {
        "properties" : {
          "PhoneNumberErrors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberErrorList"
            }, {
              "description" : "If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages."
            } ]
          }
        },
        "type" : "object"
      },
      "AppInstanceList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AppInstanceSummary"
        }
      },
      "StreamingNotificationTargetList" : {
        "maxItems" : 3,
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/StreamingNotificationTarget"
        }
      },
      "ChannelMessagePersistenceType" : {
        "type" : "string",
        "enum" : [ "PERSISTENT", "NON_PERSISTENT" ]
      },
      "ChannelBan" : {
        "description" : "The details of a channel ban.",
        "properties" : {
          "ChannelArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the channel from which a member is being banned."
            } ]
          },
          "CreatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time at which the ban was created."
            } ]
          },
          "CreatedBy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identity"
            }, {
              "description" : "The <code>AppInstanceUser</code> who created the ban."
            } ]
          },
          "Member" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identity"
            }, {
              "description" : "The member being banned from the channel."
            } ]
          }
        },
        "type" : "object"
      },
      "NextTokenString" : {
        "maxLength" : 65535,
        "type" : "string"
      },
      "ListPhoneNumbersRequest" : {
        "type" : "object",
        "title" : "ListPhoneNumbersRequest"
      },
      "Member" : {
        "description" : "The member details, such as email address, name, member ID, and member type.",
        "properties" : {
          "MemberId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The member ID (user ID or bot ID)."
            } ]
          },
          "Email" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveString"
            }, {
              "description" : "The member email address."
            } ]
          },
          "AccountId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The Amazon Chime account ID."
            } ]
          },
          "MemberType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MemberType"
            }, {
              "description" : "The member type."
            } ]
          },
          "FullName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveString"
            }, {
              "description" : "The member name."
            } ]
          }
        },
        "type" : "object"
      },
      "ChannelMessageSummary" : {
        "description" : "Summary of the messages in a <code>Channel</code>.",
        "properties" : {
          "Sender" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identity"
            }, {
              "description" : "The message sender."
            } ]
          },
          "Redacted" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonNullableBoolean"
            }, {
              "description" : "Indicates whether a message was redacted."
            } ]
          },
          "Type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelMessageType"
            }, {
              "description" : "The type of message."
            } ]
          },
          "CreatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time at which the message summary was created."
            } ]
          },
          "Content" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Content"
            }, {
              "description" : "The content of the message."
            } ]
          },
          "LastUpdatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time at which a message was last updated."
            } ]
          },
          "Metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Metadata"
            }, {
              "description" : "The metadata of the message."
            } ]
          },
          "LastEditedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time at which a message was last edited."
            } ]
          },
          "MessageId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MessageId"
            }, {
              "description" : "The ID of the message."
            } ]
          }
        },
        "type" : "object"
      },
      "ListRoomMembershipsRequest" : {
        "type" : "object",
        "title" : "ListRoomMembershipsRequest"
      },
      "GetPhoneNumberOrderResponse" : {
        "properties" : {
          "PhoneNumberOrder" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberOrder"
            }, {
              "description" : "The phone number order details."
            } ]
          }
        },
        "type" : "object"
      },
      "MediaCapturePipeline" : {
        "description" : "A media capture pipeline object. A string consisting of an ID, source type, a source ARN, a sink type, and a sink ARN.",
        "properties" : {
          "Status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaPipelineStatus"
            }, {
              "description" : "The status of the media capture pipeline."
            } ]
          },
          "UpdatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The time at which the capture pipeline was updated, in ISO 8601 format."
            } ]
          },
          "CreatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The time at which the capture pipeline was created, in ISO 8601 format."
            } ]
          },
          "SourceArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "ARN of the source from which the media artifacts will be saved."
            } ]
          },
          "MediaPipelineId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GuidString"
            }, {
              "description" : "The ID of a media capture pipeline."
            } ]
          },
          "SourceType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaPipelineSourceType"
            }, {
              "description" : "Source type from which media artifacts are saved. You must use <code>ChimeMeeting</code>."
            } ]
          },
          "SinkArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "ARN of the destination to which the media artifacts are saved."
            } ]
          },
          "SinkType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaPipelineSinkType"
            }, {
              "description" : "Destination type to which the media artifacts are saved. You must use an S3 Bucket."
            } ]
          }
        },
        "type" : "object"
      },
      "Channel" : {
        "description" : "The details of a channel.",
        "properties" : {
          "ChannelArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the channel."
            } ]
          },
          "Privacy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelPrivacy"
            }, {
              "description" : "The channel's privacy setting."
            } ]
          },
          "CreatedBy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identity"
            }, {
              "description" : "The <code>AppInstanceUser</code> who created the channel."
            } ]
          },
          "CreatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time at which the <code>AppInstanceUser</code> created the channel."
            } ]
          },
          "Mode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelMode"
            }, {
              "description" : "The mode of the channel."
            } ]
          },
          "LastMessageTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time at which a member sent the last message in the channel."
            } ]
          },
          "LastUpdatedTimestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time at which a channel was last updated."
            } ]
          },
          "Metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Metadata"
            }, {
              "description" : "The channel's metadata."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyResourceName"
            }, {
              "description" : "The name of the channel."
            } ]
          }
        },
        "type" : "object"
      },
      "ListPhoneNumberOrdersRequest" : {
        "type" : "object",
        "title" : "ListPhoneNumberOrdersRequest"
      },
      "TranscribeMedicalType" : {
        "type" : "string",
        "enum" : [ "CONVERSATION", "DICTATION" ]
      },
      "GetChannelMessageRequest" : {
        "type" : "object",
        "title" : "GetChannelMessageRequest"
      },
      "ThrottledClientException" : { },
      "Content" : {
        "format" : "password",
        "maxLength" : 4096,
        "minLength" : 0,
        "pattern" : "[\\s\\S]*",
        "type" : "string"
      },
      "UpdateSipMediaApplicationCallRequest" : {
        "properties" : {
          "Arguments" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SMAUpdateCallArgumentsMap"
            }, {
              "description" : "Arguments made available to the Lambda function as part of the <code>CALL_UPDATE_REQUESTED</code> event. Can contain 0-20 key-value pairs."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateSipMediaApplicationCallRequest",
        "required" : [ "Arguments" ]
      },
      "DeleteAppInstanceRequest" : {
        "type" : "object",
        "title" : "DeleteAppInstanceRequest"
      },
      "VoiceConnectorName" : {
        "maxLength" : 256,
        "minLength" : 1,
        "type" : "string"
      },
      "AppInstanceAdminSummary" : {
        "description" : "Summary of the details of an <code>AppInstanceAdmin</code>.",
        "properties" : {
          "Admin" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identity"
            }, {
              "description" : "The details of the <code>AppInstanceAdmin</code>."
            } ]
          }
        },
        "type" : "object"
      },
      "User" : {
        "description" : "The user on the Amazon Chime account.",
        "properties" : {
          "AccountId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The Amazon Chime account ID."
            } ]
          },
          "UserInvitationStatus" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/InviteStatus"
            }, {
              "description" : "The user invite status."
            } ]
          },
          "RegisteredOn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "Date and time when the user is registered, in ISO 8601 format."
            } ]
          },
          "PrimaryEmail" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EmailAddress"
            }, {
              "description" : "The primary email address of the user."
            } ]
          },
          "PrimaryProvisionedNumber" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveString"
            }, {
              "description" : "The primary phone number associated with the user."
            } ]
          },
          "LicenseType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/License"
            }, {
              "description" : "The license type for the user."
            } ]
          },
          "PersonalPIN" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The user's personal meeting PIN."
            } ]
          },
          "UserRegistrationStatus" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RegistrationStatus"
            }, {
              "description" : "The user registration status."
            } ]
          },
          "UserId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The user ID."
            } ]
          },
          "DisplayName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveString"
            }, {
              "description" : "The display name of the user."
            } ]
          },
          "InvitedOn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format."
            } ]
          },
          "UserType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserType"
            }, {
              "description" : "The user type."
            } ]
          },
          "AlexaForBusinessMetadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AlexaForBusinessMetadata"
            }, {
              "description" : "The Alexa for Business metadata."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "UserId" ]
      },
      "DNISEmergencyCallingConfigurationList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/DNISEmergencyCallingConfiguration"
        }
      },
      "CreateSipRuleRequest" : {
        "properties" : {
          "TriggerType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipRuleTriggerType"
            }, {
              "description" : "The type of trigger assigned to the SIP rule in <code>TriggerValue</code>, currently <code>RequestUriHostname</code> or <code>ToPhoneNumber</code>."
            } ]
          },
          "TriggerValue" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "If <code>TriggerType</code> is <code>RequestUriHostname</code>, the value can be the outbound host name of an Amazon Chime Voice Connector. If <code>TriggerType</code> is <code>ToPhoneNumber</code>, the value can be a customer-owned phone number in the E164 format. The <code>SipMediaApplication</code> specified in the <code>SipRule</code> is triggered if the request URI in an incoming SIP request matches the <code>RequestUriHostname</code>, or if the <code>To</code> header in the incoming SIP request matches the <code>ToPhoneNumber</code> value."
            } ]
          },
          "TargetApplications" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipRuleTargetApplicationList"
            }, {
              "description" : "List of SIP media applications with priority and AWS Region. Only one SIP application per AWS Region can be used."
            } ]
          },
          "Disabled" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NullableBoolean"
            }, {
              "description" : "Enables or disables a rule. You must disable rules before you can delete them."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipRuleName"
            }, {
              "description" : "The name of the SIP rule."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateSipRuleRequest",
        "required" : [ "Name", "TriggerType", "TriggerValue", "TargetApplications" ]
      },
      "AssociateSigninDelegateGroupsWithAccountRequest" : {
        "properties" : {
          "SigninDelegateGroups" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SigninDelegateGroupList"
            }, {
              "description" : "The sign-in delegate groups."
            } ]
          }
        },
        "type" : "object",
        "title" : "AssociateSigninDelegateGroupsWithAccountRequest",
        "required" : [ "SigninDelegateGroups" ]
      },
      "TerminationHealth" : {
        "description" : "The termination health details, including the source IP address and timestamp of the last successful SIP <code>OPTIONS</code> message from your SIP infrastructure.",
        "properties" : {
          "Timestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Iso8601Timestamp"
            }, {
              "description" : "The timestamp, in ISO 8601 format."
            } ]
          },
          "Source" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The source IP address."
            } ]
          }
        },
        "type" : "object"
      },
      "ServiceUnavailableException" : { },
      "GetVoiceConnectorResponse" : {
        "properties" : {
          "VoiceConnector" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnector"
            }, {
              "description" : "The Amazon Chime Voice Connector details."
            } ]
          }
        },
        "type" : "object"
      },
      "GetAttendeeRequest" : {
        "type" : "object",
        "title" : "GetAttendeeRequest"
      },
      "GetMessagingSessionEndpointRequest" : {
        "type" : "object",
        "title" : "GetMessagingSessionEndpointRequest"
      },
      "ChannelModeratedByAppInstanceUserSummary" : {
        "description" : "Summary of the details of a moderated channel.",
        "properties" : {
          "ChannelSummary" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelSummary"
            }, {
              "description" : "Summary of the details of a <code>Channel</code>."
            } ]
          }
        },
        "type" : "object"
      },
      "BatchUpdateUserRequest" : {
        "properties" : {
          "UpdateUserRequestItems" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateUserRequestItemList"
            }, {
              "description" : "The request containing the user IDs and details to update."
            } ]
          }
        },
        "type" : "object",
        "title" : "BatchUpdateUserRequest",
        "required" : [ "UpdateUserRequestItems" ]
      },
      "ListVoiceConnectorsRequest" : {
        "type" : "object",
        "title" : "ListVoiceConnectorsRequest"
      },
      "SipApplicationPriority" : {
        "minimum" : 1,
        "type" : "integer"
      },
      "ListAccountsResponse" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/String"
            }, {
              "description" : "The token to use to retrieve the next page of results."
            } ]
          },
          "Accounts" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AccountList"
            }, {
              "description" : "List of Amazon Chime accounts and account details."
            } ]
          }
        },
        "type" : "object"
      },
      "ListVoiceConnectorTerminationCredentialsResponse" : {
        "properties" : {
          "Usernames" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveStringList"
            }, {
              "description" : "A list of user names."
            } ]
          }
        },
        "type" : "object"
      },
      "LoggingConfiguration" : {
        "description" : "The logging configuration associated with an Amazon Chime Voice Connector. Specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.",
        "properties" : {
          "EnableSIPLogs" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Boolean"
            }, {
              "description" : "When true, enables SIP message logs for sending to Amazon CloudWatch Logs."
            } ]
          }
        },
        "type" : "object"
      },
      "ListTagsForResourceRequest" : {
        "type" : "object",
        "title" : "ListTagsForResourceRequest"
      },
      "CreateChannelModeratorRequest" : {
        "properties" : {
          "ChannelModeratorArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the moderator."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateChannelModeratorRequest",
        "required" : [ "ChannelModeratorArn" ]
      },
      "CreateMediaCapturePipelineRequest" : {
        "properties" : {
          "ClientRequestToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ClientRequestToken"
            }, {
              "description" : "The token assigned to the client making the pipeline request."
            } ]
          },
          "SourceArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "ARN of the source from which the media artifacts are captured."
            } ]
          },
          "SourceType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaPipelineSourceType"
            }, {
              "description" : "Source type from which the media artifacts will be captured. A Chime SDK Meeting is the only supported source."
            } ]
          },
          "SinkArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "The ARN of the sink type."
            } ]
          },
          "SinkType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaPipelineSinkType"
            }, {
              "description" : "Destination type to which the media artifacts are saved. You must use an S3 bucket. "
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateMediaCapturePipelineRequest",
        "required" : [ "SourceType", "SourceArn", "SinkType", "SinkArn" ]
      },
      "AppInstanceStreamingConfigurationList" : {
        "maxItems" : 2,
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AppInstanceStreamingConfiguration"
        }
      },
      "TagValue" : {
        "format" : "password",
        "maxLength" : 256,
        "minLength" : 1,
        "type" : "string"
      },
      "ListChannelsResponse" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : "The token returned from previous API requests until the number of channels is reached."
            } ]
          },
          "Channels" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelSummaryList"
            }, {
              "description" : "The information about each channel."
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateProxySessionResponse" : {
        "properties" : {
          "ProxySession" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProxySession"
            }, {
              "description" : "The proxy session details."
            } ]
          }
        },
        "type" : "object"
      },
      "GetMediaCapturePipelineRequest" : {
        "type" : "object",
        "title" : "GetMediaCapturePipelineRequest"
      },
      "UntagAttendeeRequest" : {
        "properties" : {
          "TagKeys" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AttendeeTagKeyList"
            }, {
              "description" : "The tag keys."
            } ]
          }
        },
        "type" : "object",
        "title" : "UntagAttendeeRequest",
        "required" : [ "TagKeys" ]
      },
      "MeetingList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Meeting"
        }
      },
      "CreateBotRequest" : {
        "properties" : {
          "DisplayName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveString"
            }, {
              "description" : "The bot display name."
            } ]
          },
          "Domain" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonEmptyString"
            }, {
              "description" : "The domain of the Amazon Chime Enterprise account."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateBotRequest",
        "required" : [ "DisplayName" ]
      },
      "CreateVoiceConnectorRequest" : {
        "properties" : {
          "RequireEncryption" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Boolean"
            }, {
              "description" : "When enabled, requires encryption for the Amazon Chime Voice Connector."
            } ]
          },
          "AwsRegion" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnectorAwsRegion"
            }, {
              "description" : " The AWS Region in which the Amazon Chime Voice Connector is created. Default value: <code>us-east-1</code> . "
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VoiceConnectorName"
            }, {
              "description" : "The name of the Amazon Chime Voice Connector."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateVoiceConnectorRequest",
        "required" : [ "Name", "RequireEncryption" ]
      },
      "Termination" : {
        "description" : "Termination settings enable your SIP hosts to make outbound calls using your Amazon Chime Voice Connector.",
        "properties" : {
          "DefaultPhoneNumber" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/E164PhoneNumber"
            }, {
              "description" : "The default caller ID phone number."
            } ]
          },
          "CpsLimit" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CpsLimit"
            }, {
              "description" : "The limit on calls per second. Max value based on account service quota. Default value of 1."
            } ]
          },
          "CidrAllowedList" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StringList"
            }, {
              "description" : "The IP addresses allowed to make calls, in CIDR format. Required."
            } ]
          },
          "CallingRegions" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CallingRegionList"
            }, {
              "description" : "The countries to which calls are allowed, in ISO 3166-1 alpha-2 format. Required."
            } ]
          },
          "Disabled" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Boolean"
            }, {
              "description" : "When termination settings are disabled, outbound calls can not be made."
            } ]
          }
        },
        "type" : "object"
      },
      "AssociatePhoneNumberWithUserResponse" : {
        "type" : "object"
      },
      "PutSipMediaApplicationLoggingConfigurationRequest" : {
        "properties" : {
          "SipMediaApplicationLoggingConfiguration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SipMediaApplicationLoggingConfiguration"
            }, {
              "description" : "The actual logging configuration."
            } ]
          }
        },
        "type" : "object",
        "title" : "PutSipMediaApplicationLoggingConfigurationRequest"
      },
      "ListMeetingTagsResponse" : {
        "properties" : {
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TagList"
            }, {
              "description" : "A list of tag key-value pairs."
            } ]
          }
        },
        "type" : "object"
      },
      "RedactRoomMessageResponse" : {
        "type" : "object"
      },
      "PutVoiceConnectorTerminationRequest" : {
        "properties" : {
          "Termination" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Termination"
            }, {
              "description" : "The termination setting details to add."
            } ]
          }
        },
        "type" : "object",
        "title" : "PutVoiceConnectorTerminationRequest",
        "required" : [ "Termination" ]
      },
      "CreateChannelMembershipResponse" : {
        "properties" : {
          "ChannelArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the channel."
            } ]
          },
          "Member" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identity"
            }, {
              "description" : "The ARN and metadata of the member being added."
            } ]
          }
        },
        "type" : "object"
      },
      "UpdatePhoneNumberResponse" : {
        "properties" : {
          "PhoneNumber" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumber"
            }, {
              "description" : "The updated phone number details."
            } ]
          }
        },
        "type" : "object"
      },
      "ChannelMessageType" : {
        "type" : "string",
        "enum" : [ "STANDARD", "CONTROL" ]
      },
      "DeleteAppInstanceUserRequest" : {
        "type" : "object",
        "title" : "DeleteAppInstanceUserRequest"
      },
      "CreateAppInstanceResponse" : {
        "properties" : {
          "AppInstanceArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The Amazon Resource Number (ARN) of the <code>AppInstance</code>."
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateAccountSettingsResponse" : {
        "type" : "object"
      },
      "MemberType" : {
        "type" : "string",
        "enum" : [ "User", "Bot", "Webhook" ]
      },
      "AppInstanceUserSummary" : {
        "description" : "Summary of the details of an <code>AppInstanceUser</code>.",
        "properties" : {
          "AppInstanceUserArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChimeArn"
            }, {
              "description" : "The ARN of the <code>AppInstanceUser</code>."
            } ]
          },
          "Metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Metadata"
            }, {
              "description" : "The metadata of the <code>AppInstanceUser</code>."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserName"
            }, {
              "description" : "The name of an <code>AppInstanceUser</code>."
            } ]
          }
        },
        "type" : "object"
      },
      "DeleteAppInstanceAdminRequest" : {
        "type" : "object",
        "title" : "DeleteAppInstanceAdminRequest"
      },
      "ListChannelMembershipsForAppInstanceUserResponse" : {
        "properties" : {
          "ChannelMemberships" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChannelMembershipForAppInstanceUserSummaryList"
            }, {
              "description" : "The token passed by previous API calls until all requested users are returned."
            } ]
          },
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : "The token passed by previous API calls until all requested users are returned."
            } ]
          }
        },
        "type" : "object"
      },
      "GetVoiceConnectorTerminationHealthResponse" : {
        "properties" : {
          "TerminationHealth" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TerminationHealth"
            }, {
              "description" : "The termination health details."
            } ]
          }
        },
        "type" : "object"
      },
      "PhoneNumberProductType" : {
        "type" : "string",
        "enum" : [ "BusinessCalling", "VoiceConnector", "SipMediaApplicationDialIn" ]
      },
      "UpdatePhoneNumberRequest" : {
        "properties" : {
          "ProductType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PhoneNumberProductType"
            }, {
              "description" : "The product type."
            } ]
          },
          "CallingName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CallingName"
            }, {
              "description" : "The outbound calling name associated with the phone number."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdatePhoneNumberRequest"
      }
    },
    "securitySchemes" : {
      "hmac" : {
        "type" : "apiKey",
        "description" : "Amazon Signature authorization v4",
        "name" : "Authorization",
        "in" : "header",
        "x-amazon-apigateway-authtype" : "awsSigv4"
      }
    }
  },
  "externalDocs" : {
    "description" : "Amazon Web Services documentation",
    "url" : "https://docs.aws.amazon.com/chime/"
  },
  "security" : [ {
    "hmac" : [ ]
  } ],
  "x-hasEquivalentPaths" : true
}