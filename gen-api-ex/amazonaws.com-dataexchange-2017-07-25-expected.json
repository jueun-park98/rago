{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "mike.ralphson@gmail.com",
      "name" : "Mike Ralphson",
      "url" : "https://github.com/mermade/aws2openapi",
      "x-twitter" : "PermittedSoc"
    },
    "description" : "<p>AWS Data Exchange is a service that makes it easy for AWS customers to exchange data in the cloud. You can use the AWS Data Exchange APIs to create, update, manage, and access file-based data set in the AWS Cloud.</p><p>As a subscriber, you can view and access the data sets that you have an entitlement to through a subscription. You can use the APIS to download or copy your entitled data sets to Amazon S3 for use across a variety of AWS analytics and machine learning services.</p><p>As a provider, you can create and manage your data sets that you would like to publish to a product. Being able to package and provide your data sets into products requires a few steps to determine eligibility. For more information, visit the AWS Data Exchange User Guide.</p><p>A data set is a collection of data that can be changed or updated over time. Data sets can be updated using revisions, which represent a new version or incremental change to a data set.  A revision contains one or more assets. An asset in AWS Data Exchange is a piece of data that can be stored as an Amazon S3 object. The asset can be a structured data file, an image file, or some other data file. Jobs are asynchronous import or export operations used to create or copy assets.</p>",
    "license" : {
      "name" : "Apache 2.0 License",
      "url" : "http://www.apache.org/licenses/"
    },
    "termsOfService" : "https://aws.amazon.com/service-terms/",
    "title" : "AWS Data Exchange",
    "version" : "2017-07-25",
    "x-providerName" : "amazonaws.com",
    "x-logo" : {
      "url" : "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png",
      "backgroundColor" : "#FFFFFF"
    },
    "x-aws-signingName" : "dataexchange",
    "x-apiClientRegistration" : {
      "url" : "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-preferred" : true,
    "x-release" : "v4",
    "x-apisguru-categories" : [ "cloud" ],
    "x-serviceName" : "dataexchange",
    "x-origin" : [ {
      "contentType" : "application/json",
      "url" : "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/dataexchange-2017-07-25.normal.json",
      "converter" : {
        "url" : "https://github.com/mermade/aws2openapi",
        "version" : "1.0.0"
      },
      "x-apisguru-driver" : "external"
    } ]
  },
  "servers" : [ {
    "url" : "http://dataexchange.{region}.amazonaws.com",
    "description" : "The AWS Data Exchange multi-region endpoint",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "us-east-1",
        "enum" : [ "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-west-1", "us-gov-east-1", "ca-central-1", "eu-north-1", "eu-west-1", "eu-west-2", "eu-west-3", "eu-central-1", "eu-south-1", "af-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ap-east-1", "ap-south-1", "sa-east-1", "me-south-1" ]
      }
    }
  }, {
    "url" : "https://dataexchange.{region}.amazonaws.com",
    "description" : "The AWS Data Exchange multi-region endpoint",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "us-east-1",
        "enum" : [ "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-west-1", "us-gov-east-1", "ca-central-1", "eu-north-1", "eu-west-1", "eu-west-2", "eu-west-3", "eu-central-1", "eu-south-1", "af-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ap-east-1", "ap-south-1", "sa-east-1", "me-south-1" ]
      }
    }
  }, {
    "url" : "http://dataexchange.{region}.amazonaws.com.cn",
    "description" : "The AWS Data Exchange endpoint for China (Beijing) and China (Ningxia)",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "cn-north-1",
        "enum" : [ "cn-north-1", "cn-northwest-1" ]
      }
    }
  }, {
    "url" : "https://dataexchange.{region}.amazonaws.com.cn",
    "description" : "The AWS Data Exchange endpoint for China (Beijing) and China (Ningxia)",
    "variables" : {
      "region" : {
        "description" : "The AWS region",
        "default" : "cn-north-1",
        "enum" : [ "cn-north-1", "cn-northwest-1" ]
      }
    }
  } ],
  "paths" : {
    "/v1/jobs/{JobId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "This operation returns information about a job.",
        "operationId" : "GetJob",
        "parameters" : [ {
          "description" : "The unique identifier for a job.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "JobId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetJobResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "description" : "This operation starts a job.",
        "operationId" : "StartJob",
        "parameters" : [ {
          "description" : "The unique identifier for a job.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "JobId"
        } ],
        "responses" : {
          "202" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StartJobResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "484" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "485" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "This operation cancels a job. Jobs can be cancelled only when they are in the WAITING state.",
        "operationId" : "CancelJob",
        "parameters" : [ {
          "description" : "The unique identifier for a job.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "JobId"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "484" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          }
        }
      }
    },
    "/v1/data-sets" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "This operation lists your data sets. When listing by origin OWNED, results are sorted by CreatedAt in descending order. When listing by origin ENTITLED, there is no order and the maxResults parameter is ignored.",
        "operationId" : "ListDataSets",
        "parameters" : [ {
          "description" : "The maximum number of results returned by a single call.",
          "required" : false,
          "schema" : {
            "maximum" : 25,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        }, {
          "description" : "The token value retrieved from a previous call to access the next page of results.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : "A property that defines the data set as OWNED by the account (for providers) or ENTITLED to the account (for subscribers).",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "origin"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListDataSetsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "This operation creates a data set.",
        "operationId" : "CreateDataSet",
        "parameters" : [ ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "AssetType" : {
                    "description" : "The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT.",
                    "type" : "string",
                    "enum" : [ "S3_SNAPSHOT" ]
                  },
                  "Description" : {
                    "description" : "A description of a resource.",
                    "type" : "string"
                  },
                  "Name" : {
                    "description" : "The name of the model.",
                    "type" : "string"
                  },
                  "Tags" : {
                    "description" : "A data set tag is an optional label that you can assign to a data set when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to these data sets and revisions.",
                    "type" : "object",
                    "additionalProperties" : {
                      "$ref" : "#/components/schemas/__string"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "AssetType", "Description", "Name" ]
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateDataSetResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "481" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "483" : {
            "description" : "ServiceLimitExceededException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceLimitExceededException"
                }
              }
            }
          },
          "484" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          }
        }
      }
    },
    "/v1/jobs" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "This operation lists your jobs sorted by CreatedAt in descending order.",
        "operationId" : "ListJobs",
        "parameters" : [ {
          "description" : "The unique identifier for a data set.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "dataSetId"
        }, {
          "description" : "The maximum number of results returned by a single call.",
          "required" : false,
          "schema" : {
            "maximum" : 25,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        }, {
          "description" : "The token value retrieved from a previous call to access the next page of results.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : "The unique identifier for a revision.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "revisionId"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListJobsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "This operation creates a job.",
        "operationId" : "CreateJob",
        "parameters" : [ ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Details" : {
                    "description" : "The details for the request.",
                    "properties" : {
                      "ExportAssetToSignedUrl" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/ExportAssetToSignedUrlRequestDetails"
                        }, {
                          "description" : "Details about the export to signed URL request."
                        } ]
                      },
                      "ExportAssetsToS3" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/ExportAssetsToS3RequestDetails"
                        }, {
                          "description" : "Details about the export to Amazon S3 request."
                        } ]
                      },
                      "ExportRevisionsToS3" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/ExportRevisionsToS3RequestDetails"
                        }, {
                          "description" : "Details about the export to Amazon S3 request."
                        } ]
                      },
                      "ImportAssetFromSignedUrl" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/ImportAssetFromSignedUrlRequestDetails"
                        }, {
                          "description" : "Details about the import from signed URL request."
                        } ]
                      },
                      "ImportAssetsFromS3" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/ImportAssetsFromS3RequestDetails"
                        }, {
                          "description" : "Details about the import from Amazon S3 request."
                        } ]
                      }
                    },
                    "type" : "object"
                  },
                  "Type" : {
                    "description" : "The type of job to be created.",
                    "type" : "string",
                    "enum" : [ "IMPORT_ASSETS_FROM_S3", "IMPORT_ASSET_FROM_SIGNED_URL", "EXPORT_ASSETS_TO_S3", "EXPORT_ASSET_TO_SIGNED_URL", "EXPORT_REVISIONS_TO_S3" ]
                  }
                },
                "type" : "object",
                "required" : [ "Details", "Type" ]
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateJobResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "484" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          }
        }
      }
    },
    "/v1/data-sets/{DataSetId}/revisions" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "This operation lists a data set's revisions sorted by CreatedAt in descending order.",
        "operationId" : "ListDataSetRevisions",
        "parameters" : [ {
          "description" : "The unique identifier for a data set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "DataSetId"
        }, {
          "description" : "The maximum number of results returned by a single call.",
          "required" : false,
          "schema" : {
            "maximum" : 25,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        }, {
          "description" : "The token value retrieved from a previous call to access the next page of results.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListDataSetRevisionsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "This operation creates a revision for a data set.",
        "operationId" : "CreateRevision",
        "parameters" : [ {
          "description" : "The unique identifier for a data set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "DataSetId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Comment" : {
                    "description" : "An optional comment about the revision.",
                    "maxLength" : 16384,
                    "minLength" : 0,
                    "type" : "string"
                  },
                  "Tags" : {
                    "description" : "A revision tag is an optional label that you can assign to a revision when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to these data sets and revisions.",
                    "type" : "object",
                    "additionalProperties" : {
                      "$ref" : "#/components/schemas/__string"
                    }
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateRevisionResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "484" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          }
        }
      }
    },
    "/v1/data-sets/{DataSetId}/revisions/{RevisionId}/assets/{AssetId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "This operation returns information about an asset.",
        "operationId" : "GetAsset",
        "parameters" : [ {
          "description" : "The unique identifier for an asset.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "AssetId"
        }, {
          "description" : "The unique identifier for a data set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "DataSetId"
        }, {
          "description" : "The unique identifier for a revision.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "RevisionId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAssetResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "description" : "This operation updates an asset.",
        "operationId" : "UpdateAsset",
        "parameters" : [ {
          "description" : "The unique identifier for an asset.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "AssetId"
        }, {
          "description" : "The unique identifier for a data set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "DataSetId"
        }, {
          "description" : "The unique identifier for a revision.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "RevisionId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Name" : {
                    "description" : "The name of the asset. When importing from Amazon S3, the S3 object key is used as the asset name. When exporting to Amazon S3, the asset name is used as default target S3 object key.",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "required" : [ "Name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateAssetResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "484" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "485" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "This operation deletes an asset.",
        "operationId" : "DeleteAsset",
        "parameters" : [ {
          "description" : "The unique identifier for an asset.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "AssetId"
        }, {
          "description" : "The unique identifier for a data set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "DataSetId"
        }, {
          "description" : "The unique identifier for a revision.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "RevisionId"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "484" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "485" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          }
        }
      }
    },
    "/v1/data-sets/{DataSetId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "This operation returns information about a data set.",
        "operationId" : "GetDataSet",
        "parameters" : [ {
          "description" : "The unique identifier for a data set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "DataSetId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetDataSetResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "description" : "This operation updates a data set.",
        "operationId" : "UpdateDataSet",
        "parameters" : [ {
          "description" : "The unique identifier for a data set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "DataSetId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Description" : {
                    "description" : "A description of a resource.",
                    "type" : "string"
                  },
                  "Name" : {
                    "description" : "The name of the model.",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateDataSetResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "484" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "This operation deletes a data set.",
        "operationId" : "DeleteDataSet",
        "parameters" : [ {
          "description" : "The unique identifier for a data set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "DataSetId"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "484" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "485" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          }
        }
      }
    },
    "/v1/data-sets/{DataSetId}/revisions/{RevisionId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "This operation returns information about a revision.",
        "operationId" : "GetRevision",
        "parameters" : [ {
          "description" : "The unique identifier for a data set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "DataSetId"
        }, {
          "description" : "The unique identifier for a revision.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "RevisionId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetRevisionResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "description" : "This operation updates a revision.",
        "operationId" : "UpdateRevision",
        "parameters" : [ {
          "description" : "The unique identifier for a data set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "DataSetId"
        }, {
          "description" : "The unique identifier for a revision.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "RevisionId"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Comment" : {
                    "description" : "An optional comment about the revision.",
                    "maxLength" : 16384,
                    "minLength" : 0,
                    "type" : "string"
                  },
                  "Finalized" : {
                    "description" : "Finalizing a revision tells AWS Data Exchange that your changes to the assets in the revision are complete. After it's in this read-only state, you can publish the revision to your products.",
                    "type" : "boolean"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateRevisionResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "484" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "485" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "This operation deletes a revision.",
        "operationId" : "DeleteRevision",
        "parameters" : [ {
          "description" : "The unique identifier for a data set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "DataSetId"
        }, {
          "description" : "The unique identifier for a revision.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "RevisionId"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "480" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "482" : {
            "description" : "AccessDeniedException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "484" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "485" : {
            "description" : "ConflictException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConflictException"
                }
              }
            }
          }
        }
      }
    },
    "/v1/data-sets/{DataSetId}/revisions/{RevisionId}/assets" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "This operation lists a revision's assets sorted alphabetically in descending order.",
        "operationId" : "ListRevisionAssets",
        "parameters" : [ {
          "description" : "The unique identifier for a data set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "DataSetId"
        }, {
          "description" : "The maximum number of results returned by a single call.",
          "required" : false,
          "schema" : {
            "maximum" : 25,
            "minimum" : 1,
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxResults"
        }, {
          "description" : "The token value retrieved from a previous call to access the next page of results.",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "nextToken"
        }, {
          "description" : "The unique identifier for a revision.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "RevisionId"
        }, {
          "description" : "Pagination limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "MaxResults"
        }, {
          "description" : "Pagination token",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "in" : "query",
          "name" : "NextToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListRevisionAssetsResponse"
                }
              }
            }
          },
          "480" : {
            "description" : "ResourceNotFoundException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481" : {
            "description" : "ThrottlingException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "482" : {
            "description" : "ValidationException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "483" : {
            "description" : "InternalServerException",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        }
      }
    },
    "/tags/{resource-arn}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "get" : {
        "description" : "This operation lists the tags on the resource.",
        "operationId" : "ListTagsForResource",
        "parameters" : [ {
          "description" : "An Amazon Resource Name (ARN) that uniquely identifies an AWS resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "resource-arn"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListTagsForResourceResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "This operation tags a resource.",
        "operationId" : "TagResource",
        "parameters" : [ {
          "description" : "An Amazon Resource Name (ARN) that uniquely identifies an AWS resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "resource-arn"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "tags" : {
                    "description" : "A label that consists of a customer-defined key and an optional value.",
                    "type" : "object",
                    "additionalProperties" : {
                      "$ref" : "#/components/schemas/__string"
                    }
                  }
                },
                "type" : "object",
                "required" : [ "tags" ]
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    },
    "/tags/{resource-arn}#tagKeys" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/X-Amz-Content-Sha256"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Date"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Algorithm"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Credential"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Security-Token"
      }, {
        "$ref" : "#/components/parameters/X-Amz-Signature"
      }, {
        "$ref" : "#/components/parameters/X-Amz-SignedHeaders"
      } ],
      "delete" : {
        "description" : "This operation removes one or more tags from a resource.",
        "operationId" : "UntagResource",
        "parameters" : [ {
          "description" : "An Amazon Resource Name (ARN) that uniquely identifies an AWS resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "in" : "path",
          "name" : "resource-arn"
        }, {
          "description" : "The key tags.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/__string"
            }
          },
          "in" : "query",
          "name" : "tagKeys"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
  },
  "components" : {
    "parameters" : {
      "X-Amz-Content-Sha256" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Content-Sha256"
      },
      "X-Amz-Date" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Date"
      },
      "X-Amz-Algorithm" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Algorithm"
      },
      "X-Amz-Credential" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Credential"
      },
      "X-Amz-Security-Token" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Security-Token"
      },
      "X-Amz-Signature" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders" : {
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "in" : "header",
        "name" : "X-Amz-SignedHeaders"
      }
    },
    "schemas" : {
      "ResourceNotFoundException" : { },
      "ThrottlingException" : { },
      "ValidationException" : { },
      "InternalServerException" : { },
      "ConflictException" : { },
      "CreateDataSetResponse" : {
        "properties" : {
          "Arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "The ARN for the data set."
            } ]
          },
          "AssetType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssetType"
            }, {
              "description" : "The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT."
            } ]
          },
          "CreatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the data set was created, in ISO 8601 format."
            } ]
          },
          "Description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Description"
            }, {
              "description" : "The description for the data set."
            } ]
          },
          "Id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Name"
            }, {
              "description" : "The name of the data set."
            } ]
          },
          "Origin" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Origin"
            }, {
              "description" : "A property that defines the data set as OWNED by the account (for providers) or ENTITLED to the account (for subscribers)."
            } ]
          },
          "OriginDetails" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OriginDetails"
            }, {
              "description" : "If the origin of this data set is ENTITLED, includes the details for the product on AWS Marketplace."
            } ]
          },
          "SourceId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The data set ID of the owned data set corresponding to the entitled data set being viewed. This parameter is returned when a data set owner is viewing the entitled copy of its owned data set."
            } ]
          },
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MapOf__string"
            }, {
              "description" : "The tags for the data set."
            } ]
          },
          "UpdatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the data set was last updated, in ISO 8601 format."
            } ]
          }
        },
        "type" : "object"
      },
      "__string" : {
        "type" : "string"
      },
      "ServiceLimitExceededException" : { },
      "AccessDeniedException" : { },
      "CreateJobResponse" : {
        "properties" : {
          "Arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "The ARN for the job."
            } ]
          },
          "CreatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the job was created, in ISO 8601 format."
            } ]
          },
          "Details" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResponseDetails"
            }, {
              "description" : "Details about the job."
            } ]
          },
          "Errors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfJobError"
            }, {
              "description" : "The errors associated with jobs."
            } ]
          },
          "Id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the job."
            } ]
          },
          "State" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/State"
            }, {
              "description" : "The state of the job."
            } ]
          },
          "Type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Type"
            }, {
              "description" : "The job type."
            } ]
          },
          "UpdatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the job was last updated, in ISO 8601 format."
            } ]
          }
        },
        "type" : "object"
      },
      "ExportAssetToSignedUrlRequestDetails" : {
        "description" : "Details of the operation to be performed by the job.",
        "properties" : {
          "AssetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the asset that is exported to a signed URL."
            } ]
          },
          "DataSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set associated with this export job."
            } ]
          },
          "RevisionId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the revision associated with this export request."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "DataSetId", "AssetId", "RevisionId" ]
      },
      "ExportAssetsToS3RequestDetails" : {
        "description" : "Details of the operation to be performed by the job.",
        "properties" : {
          "AssetDestinations" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfAssetDestinationEntry"
            }, {
              "description" : "The destination for the asset."
            } ]
          },
          "DataSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set associated with this export job."
            } ]
          },
          "Encryption" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ExportServerSideEncryption"
            }, {
              "description" : "Encryption configuration for the export job."
            } ]
          },
          "RevisionId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the revision associated with this export request."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "AssetDestinations", "DataSetId", "RevisionId" ]
      },
      "ExportRevisionsToS3RequestDetails" : {
        "description" : "Details of the operation to be performed by the job.",
        "properties" : {
          "DataSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set associated with this export job."
            } ]
          },
          "Encryption" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ExportServerSideEncryption"
            }, {
              "description" : "Encryption configuration for the export job."
            } ]
          },
          "RevisionDestinations" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfRevisionDestinationEntry"
            }, {
              "description" : "The destination for the revision."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "RevisionDestinations", "DataSetId" ]
      },
      "ImportAssetFromSignedUrlRequestDetails" : {
        "description" : "Details of the operation to be performed by the job.",
        "properties" : {
          "AssetName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssetName"
            }, {
              "description" : "The name of the asset. When importing from Amazon S3, the S3 object key is used as the asset name."
            } ]
          },
          "DataSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set associated with this import job."
            } ]
          },
          "Md5Hash" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__stringMin24Max24PatternAZaZ094AZaZ092AZaZ093"
            }, {
              "description" : "The Base64-encoded Md5 hash for the asset, used to ensure the integrity of the file at that location."
            } ]
          },
          "RevisionId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the revision associated with this import request."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "DataSetId", "Md5Hash", "RevisionId", "AssetName" ]
      },
      "ImportAssetsFromS3RequestDetails" : {
        "description" : "Details of the operation to be performed by the job.",
        "properties" : {
          "AssetSources" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfAssetSourceEntry"
            }, {
              "description" : "Is a list of S3 bucket and object key pairs."
            } ]
          },
          "DataSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set associated with this import job."
            } ]
          },
          "RevisionId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the revision associated with this import request."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "DataSetId", "AssetSources", "RevisionId" ]
      },
      "CreateRevisionResponse" : {
        "properties" : {
          "Arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "The ARN for the revision"
            } ]
          },
          "Comment" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__stringMin0Max16384"
            }, {
              "description" : "An optional comment about the revision."
            } ]
          },
          "CreatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the revision was created, in ISO 8601 format."
            } ]
          },
          "DataSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set associated with this revision."
            } ]
          },
          "Finalized" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__boolean"
            }, {
              "description" : "<p>To publish a revision to a data set in a product, the revision must first be finalized. Finalizing a revision tells AWS Data Exchange that your changes to the assets in the revision are complete. After it's in this read-only state, you can publish the revision to your products.</p> <p>Finalized revisions can be published through the AWS Data Exchange console or the AWS Marketplace Catalog API, using the StartChangeSet AWS Marketplace Catalog API action. When using the API, revisions are uniquely identified by their ARN.</p>"
            } ]
          },
          "Id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the revision."
            } ]
          },
          "SourceId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The revision ID of the owned revision corresponding to the entitled revision being viewed. This parameter is returned when a revision owner is viewing the entitled copy of its owned revision."
            } ]
          },
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MapOf__string"
            }, {
              "description" : "The tags for the revision."
            } ]
          },
          "UpdatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the revision was last updated, in ISO 8601 format."
            } ]
          }
        },
        "type" : "object"
      },
      "GetAssetResponse" : {
        "properties" : {
          "Arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "The ARN for the asset."
            } ]
          },
          "AssetDetails" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssetDetails"
            }, {
              "description" : "Information about the asset, including its size."
            } ]
          },
          "AssetType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssetType"
            }, {
              "description" : "The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT."
            } ]
          },
          "CreatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the asset was created, in ISO 8601 format."
            } ]
          },
          "DataSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set associated with this asset."
            } ]
          },
          "Id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the asset."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssetName"
            }, {
              "description" : "The name of the asset When importing from Amazon S3, the S3 object key is used as the asset name. When exporting to Amazon S3, the asset name is used as default target S3 object key."
            } ]
          },
          "RevisionId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the revision associated with this asset."
            } ]
          },
          "SourceId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The asset ID of the owned asset corresponding to the entitled asset being viewed. This parameter is returned when an asset owner is viewing the entitled copy of its owned asset."
            } ]
          },
          "UpdatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the asset was last updated, in ISO 8601 format."
            } ]
          }
        },
        "type" : "object"
      },
      "GetDataSetResponse" : {
        "properties" : {
          "Arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "The ARN for the data set."
            } ]
          },
          "AssetType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssetType"
            }, {
              "description" : "The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT."
            } ]
          },
          "CreatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the data set was created, in ISO 8601 format."
            } ]
          },
          "Description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Description"
            }, {
              "description" : "The description for the data set."
            } ]
          },
          "Id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Name"
            }, {
              "description" : "The name of the data set."
            } ]
          },
          "Origin" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Origin"
            }, {
              "description" : "A property that defines the data set as OWNED by the account (for providers) or ENTITLED to the account (for subscribers)."
            } ]
          },
          "OriginDetails" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OriginDetails"
            }, {
              "description" : "If the origin of this data set is ENTITLED, includes the details for the product on AWS Marketplace."
            } ]
          },
          "SourceId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The data set ID of the owned data set corresponding to the entitled data set being viewed. This parameter is returned when a data set owner is viewing the entitled copy of its owned data set."
            } ]
          },
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MapOf__string"
            }, {
              "description" : "The tags for the data set."
            } ]
          },
          "UpdatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the data set was last updated, in ISO 8601 format."
            } ]
          }
        },
        "type" : "object"
      },
      "GetJobResponse" : {
        "properties" : {
          "Arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "The ARN for the job."
            } ]
          },
          "CreatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the job was created, in ISO 8601 format."
            } ]
          },
          "Details" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResponseDetails"
            }, {
              "description" : "Details about the job."
            } ]
          },
          "Errors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfJobError"
            }, {
              "description" : "The errors associated with jobs."
            } ]
          },
          "Id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the job."
            } ]
          },
          "State" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/State"
            }, {
              "description" : "The state of the job."
            } ]
          },
          "Type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Type"
            }, {
              "description" : "The job type."
            } ]
          },
          "UpdatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the job was last updated, in ISO 8601 format."
            } ]
          }
        },
        "type" : "object"
      },
      "GetRevisionResponse" : {
        "properties" : {
          "Arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "The ARN for the revision"
            } ]
          },
          "Comment" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__stringMin0Max16384"
            }, {
              "description" : "An optional comment about the revision."
            } ]
          },
          "CreatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the revision was created, in ISO 8601 format."
            } ]
          },
          "DataSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set associated with this revision."
            } ]
          },
          "Finalized" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__boolean"
            }, {
              "description" : "<p>To publish a revision to a data set in a product, the revision must first be finalized. Finalizing a revision tells AWS Data Exchange that your changes to the assets in the revision are complete. After it's in this read-only state, you can publish the revision to your products.</p> <p>Finalized revisions can be published through the AWS Data Exchange console or the AWS Marketplace Catalog API, using the StartChangeSet AWS Marketplace Catalog API action. When using the API, revisions are uniquely identified by their ARN.</p>"
            } ]
          },
          "Id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the revision."
            } ]
          },
          "SourceId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The revision ID of the owned revision corresponding to the entitled revision being viewed. This parameter is returned when a revision owner is viewing the entitled copy of its owned revision."
            } ]
          },
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MapOf__string"
            }, {
              "description" : "The tags for the revision."
            } ]
          },
          "UpdatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the revision was last updated, in ISO 8601 format."
            } ]
          }
        },
        "type" : "object"
      },
      "ListDataSetRevisionsResponse" : {
        "properties" : {
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : "The token value retrieved from a previous call to access the next page of results."
            } ]
          },
          "Revisions" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfRevisionEntry"
            }, {
              "description" : "The asset objects listed by the request."
            } ]
          }
        },
        "type" : "object"
      },
      "ListDataSetsResponse" : {
        "properties" : {
          "DataSets" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfDataSetEntry"
            }, {
              "description" : "The data set objects listed by the request."
            } ]
          },
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : "The token value retrieved from a previous call to access the next page of results."
            } ]
          }
        },
        "type" : "object"
      },
      "ListJobsResponse" : {
        "properties" : {
          "Jobs" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfJobEntry"
            }, {
              "description" : "The jobs listed by the request."
            } ]
          },
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : "The token value retrieved from a previous call to access the next page of results."
            } ]
          }
        },
        "type" : "object"
      },
      "ListRevisionAssetsResponse" : {
        "properties" : {
          "Assets" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfAssetEntry"
            }, {
              "description" : "The asset objects listed by the request."
            } ]
          },
          "NextToken" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            }, {
              "description" : "The token value retrieved from a previous call to access the next page of results."
            } ]
          }
        },
        "type" : "object"
      },
      "ListTagsForResourceResponse" : {
        "properties" : {
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MapOf__string"
            }, {
              "description" : "A label that consists of a customer-defined key and an optional value.",
              "xml" : {
                "name" : "tags"
              }
            } ]
          }
        },
        "type" : "object"
      },
      "StartJobResponse" : {
        "properties" : { },
        "type" : "object"
      },
      "UpdateAssetResponse" : {
        "properties" : {
          "Arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "The ARN for the asset."
            } ]
          },
          "AssetDetails" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssetDetails"
            }, {
              "description" : "Information about the asset, including its size."
            } ]
          },
          "AssetType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssetType"
            }, {
              "description" : "The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT."
            } ]
          },
          "CreatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the asset was created, in ISO 8601 format."
            } ]
          },
          "DataSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set associated with this asset."
            } ]
          },
          "Id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the asset."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssetName"
            }, {
              "description" : "The name of the asset When importing from Amazon S3, the S3 object key is used as the asset name. When exporting to Amazon S3, the asset name is used as default target S3 object key."
            } ]
          },
          "RevisionId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the revision associated with this asset."
            } ]
          },
          "SourceId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The asset ID of the owned asset corresponding to the entitled asset being viewed. This parameter is returned when an asset owner is viewing the entitled copy of its owned asset."
            } ]
          },
          "UpdatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the asset was last updated, in ISO 8601 format."
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateDataSetResponse" : {
        "properties" : {
          "Arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "The ARN for the data set."
            } ]
          },
          "AssetType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssetType"
            }, {
              "description" : "The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT."
            } ]
          },
          "CreatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the data set was created, in ISO 8601 format."
            } ]
          },
          "Description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Description"
            }, {
              "description" : "The description for the data set."
            } ]
          },
          "Id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Name"
            }, {
              "description" : "The name of the data set."
            } ]
          },
          "Origin" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Origin"
            }, {
              "description" : "A property that defines the data set as OWNED by the account (for providers) or ENTITLED to the account (for subscribers)."
            } ]
          },
          "OriginDetails" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OriginDetails"
            }, {
              "description" : "If the origin of this data set is ENTITLED, includes the details for the product on AWS Marketplace."
            } ]
          },
          "SourceId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The data set ID of the owned data set corresponding to the entitled data set being viewed. This parameter is returned when a data set owner is viewing the entitled copy of its owned data set."
            } ]
          },
          "UpdatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the data set was last updated, in ISO 8601 format."
            } ]
          }
        },
        "type" : "object"
      },
      "UpdateRevisionResponse" : {
        "properties" : {
          "Arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "The ARN for the revision."
            } ]
          },
          "Comment" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__stringMin0Max16384"
            }, {
              "description" : "An optional comment about the revision."
            } ]
          },
          "CreatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the revision was created, in ISO 8601 format."
            } ]
          },
          "DataSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set associated with this revision."
            } ]
          },
          "Finalized" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__boolean"
            }, {
              "description" : "<p>To publish a revision to a data set in a product, the revision must first be finalized. Finalizing a revision tells AWS Data Exchange that changes to the assets in the revision are complete. After it's in this read-only state, you can publish the revision to your products.</p> <p>Finalized revisions can be published through the AWS Data Exchange console or the AWS Marketplace Catalog API, using the StartChangeSet AWS Marketplace Catalog API action. When using the API, revisions are uniquely identified by their ARN.</p>"
            } ]
          },
          "Id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the revision."
            } ]
          },
          "SourceId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The revision ID of the owned revision corresponding to the entitled revision being viewed. This parameter is returned when a revision owner is viewing the entitled copy of its owned revision."
            } ]
          },
          "UpdatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the revision was last updated, in ISO 8601 format."
            } ]
          }
        },
        "type" : "object"
      },
      "Arn" : {
        "description" : "An Amazon Resource Name (ARN) that uniquely identifies an AWS resource.",
        "type" : "string"
      },
      "Id" : {
        "description" : "A unique identifier.",
        "type" : "string"
      },
      "AssetDestinationEntry" : {
        "description" : "The destination for the asset.",
        "properties" : {
          "AssetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the asset."
            } ]
          },
          "Bucket" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The S3 bucket that is the destination for the asset."
            } ]
          },
          "Key" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the object in Amazon S3 for the asset."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "Bucket", "AssetId" ]
      },
      "S3SnapshotAsset" : {
        "description" : "The S3 object that is the asset.",
        "properties" : {
          "Size" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__doubleMin0"
            }, {
              "description" : "The size of the S3 object that is the object."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "Size" ]
      },
      "AssetDetails" : {
        "properties" : {
          "S3SnapshotAsset" : {
            "$ref" : "#/components/schemas/S3SnapshotAsset"
          }
        },
        "type" : "object"
      },
      "AssetType" : {
        "description" : "The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT.",
        "type" : "string",
        "enum" : [ "S3_SNAPSHOT" ]
      },
      "Timestamp" : {
        "description" : "Dates and times in AWS Data Exchange are recorded in ISO 8601 format.",
        "format" : "date-time",
        "type" : "string"
      },
      "AssetName" : {
        "description" : "The name of the asset. When importing from Amazon S3, the S3 object key is used as the asset name. When exporting to Amazon S3, the asset name is used as default target S3 object key.",
        "type" : "string"
      },
      "AssetEntry" : {
        "description" : "An asset in AWS Data Exchange is a piece of data that can be stored as an S3 object. The asset can be a structured data file, an image file, or some other data file. When you create an import job for your files, you create an asset in AWS Data Exchange for each of those files.",
        "properties" : {
          "Arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "The ARN for the asset."
            } ]
          },
          "AssetDetails" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssetDetails"
            }, {
              "description" : "Information about the asset, including its size."
            } ]
          },
          "AssetType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssetType"
            }, {
              "description" : "The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT."
            } ]
          },
          "CreatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the asset was created, in ISO 8601 format."
            } ]
          },
          "DataSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set associated with this asset."
            } ]
          },
          "Id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the asset."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssetName"
            }, {
              "description" : "The name of the asset. When importing from Amazon S3, the S3 object key is used as the asset name. When exporting to Amazon S3, the asset name is used as default target S3 object key."
            } ]
          },
          "RevisionId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the revision associated with this asset."
            } ]
          },
          "SourceId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The asset ID of the owned asset corresponding to the entitled asset being viewed. This parameter is returned when an asset owner is viewing the entitled copy of its owned asset."
            } ]
          },
          "UpdatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the asset was last updated, in ISO 8601 format."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "AssetType", "CreatedAt", "DataSetId", "Id", "Arn", "AssetDetails", "UpdatedAt", "RevisionId", "Name" ]
      },
      "AssetSourceEntry" : {
        "description" : "The source of the assets.",
        "properties" : {
          "Bucket" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The S3 bucket that's part of the source of the asset."
            } ]
          },
          "Key" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The name of the object in Amazon S3 for the asset."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "Bucket", "Key" ]
      },
      "CancelJobRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "CancelJobRequest"
      },
      "Code" : {
        "type" : "string",
        "enum" : [ "ACCESS_DENIED_EXCEPTION", "INTERNAL_SERVER_EXCEPTION", "MALWARE_DETECTED", "RESOURCE_NOT_FOUND_EXCEPTION", "SERVICE_QUOTA_EXCEEDED_EXCEPTION", "VALIDATION_EXCEPTION", "MALWARE_SCAN_ENCRYPTED_FILE" ]
      },
      "Description" : {
        "description" : "A description of a resource.",
        "type" : "string"
      },
      "Name" : {
        "description" : "The name of the model.",
        "type" : "string"
      },
      "MapOf__string" : {
        "type" : "object",
        "additionalProperties" : {
          "$ref" : "#/components/schemas/__string"
        }
      },
      "CreateDataSetRequest" : {
        "description" : "The request body for CreateDataSet.",
        "properties" : {
          "AssetType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssetType"
            }, {
              "description" : "The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT."
            } ]
          },
          "Description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Description"
            }, {
              "description" : "A description for the data set. This value can be up to 16,348 characters long."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Name"
            }, {
              "description" : "The name of the data set."
            } ]
          },
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MapOf__string"
            }, {
              "description" : "A data set tag is an optional label that you can assign to a data set when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to these data sets and revisions."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateDataSetRequest",
        "required" : [ "AssetType", "Description", "Name" ]
      },
      "Origin" : {
        "description" : "A property that defines the data set as OWNED by the account (for providers) or ENTITLED to the account (for subscribers). When an owned data set is published in a product, AWS Data Exchange creates a copy of the data set. Subscribers can access that copy of the data set as an entitled data set.",
        "type" : "string",
        "enum" : [ "OWNED", "ENTITLED" ]
      },
      "OriginDetails" : {
        "properties" : {
          "ProductId" : {
            "$ref" : "#/components/schemas/__string"
          }
        },
        "type" : "object",
        "required" : [ "ProductId" ]
      },
      "RequestDetails" : {
        "description" : "The details for the request.",
        "properties" : {
          "ExportAssetToSignedUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ExportAssetToSignedUrlRequestDetails"
            }, {
              "description" : "Details about the export to signed URL request."
            } ]
          },
          "ExportAssetsToS3" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ExportAssetsToS3RequestDetails"
            }, {
              "description" : "Details about the export to Amazon S3 request."
            } ]
          },
          "ExportRevisionsToS3" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ExportRevisionsToS3RequestDetails"
            }, {
              "description" : "Details about the export to Amazon S3 request."
            } ]
          },
          "ImportAssetFromSignedUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ImportAssetFromSignedUrlRequestDetails"
            }, {
              "description" : "Details about the import from signed URL request."
            } ]
          },
          "ImportAssetsFromS3" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ImportAssetsFromS3RequestDetails"
            }, {
              "description" : "Details about the import from Amazon S3 request."
            } ]
          }
        },
        "type" : "object"
      },
      "Type" : {
        "type" : "string",
        "enum" : [ "IMPORT_ASSETS_FROM_S3", "IMPORT_ASSET_FROM_SIGNED_URL", "EXPORT_ASSETS_TO_S3", "EXPORT_ASSET_TO_SIGNED_URL", "EXPORT_REVISIONS_TO_S3" ]
      },
      "CreateJobRequest" : {
        "description" : "The request body for CreateJob.",
        "properties" : {
          "Details" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RequestDetails"
            }, {
              "description" : "The details for the CreateJob request."
            } ]
          },
          "Type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Type"
            }, {
              "description" : "The type of job to be created."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateJobRequest",
        "required" : [ "Type", "Details" ]
      },
      "ResponseDetails" : {
        "description" : "Details for the response.",
        "properties" : {
          "ExportAssetToSignedUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ExportAssetToSignedUrlResponseDetails"
            }, {
              "description" : "Details for the export to signed URL response."
            } ]
          },
          "ExportAssetsToS3" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ExportAssetsToS3ResponseDetails"
            }, {
              "description" : "Details for the export to Amazon S3 response."
            } ]
          },
          "ExportRevisionsToS3" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ExportRevisionsToS3ResponseDetails"
            }, {
              "description" : "Details for the export revisions to Amazon S3 response."
            } ]
          },
          "ImportAssetFromSignedUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ImportAssetFromSignedUrlResponseDetails"
            }, {
              "description" : "Details for the import from signed URL response."
            } ]
          },
          "ImportAssetsFromS3" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ImportAssetsFromS3ResponseDetails"
            }, {
              "description" : "Details for the import from Amazon S3 response."
            } ]
          }
        },
        "type" : "object"
      },
      "ListOfJobError" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/JobError"
        }
      },
      "State" : {
        "type" : "string",
        "enum" : [ "WAITING", "IN_PROGRESS", "ERROR", "COMPLETED", "CANCELLED", "TIMED_OUT" ]
      },
      "__stringMin0Max16384" : {
        "maxLength" : 16384,
        "minLength" : 0,
        "type" : "string"
      },
      "CreateRevisionRequest" : {
        "description" : "The request body for CreateRevision.",
        "properties" : {
          "Comment" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__stringMin0Max16384"
            }, {
              "description" : "An optional comment about the revision."
            } ]
          },
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MapOf__string"
            }, {
              "description" : "A revision tag is an optional label that you can assign to a revision when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to these data sets and revisions."
            } ]
          }
        },
        "type" : "object",
        "title" : "CreateRevisionRequest"
      },
      "__boolean" : {
        "type" : "boolean"
      },
      "DataSetEntry" : {
        "description" : "A data set is an AWS resource with one or more revisions.",
        "properties" : {
          "Arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "The ARN for the data set."
            } ]
          },
          "AssetType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssetType"
            }, {
              "description" : "The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT."
            } ]
          },
          "CreatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the data set was created, in ISO 8601 format."
            } ]
          },
          "Description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Description"
            }, {
              "description" : "The description for the data set."
            } ]
          },
          "Id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Name"
            }, {
              "description" : "The name of the data set."
            } ]
          },
          "Origin" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Origin"
            }, {
              "description" : "A property that defines the data set as OWNED by the account (for providers) or ENTITLED to the account (for subscribers)."
            } ]
          },
          "OriginDetails" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OriginDetails"
            }, {
              "description" : "If the origin of this data set is ENTITLED, includes the details for the product on AWS Marketplace."
            } ]
          },
          "SourceId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The data set ID of the owned data set corresponding to the entitled data set being viewed. This parameter is returned when a data set owner is viewing the entitled copy of its owned data set."
            } ]
          },
          "UpdatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the data set was last updated, in ISO 8601 format."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "Origin", "AssetType", "Description", "CreatedAt", "Id", "Arn", "UpdatedAt", "Name" ]
      },
      "DeleteAssetRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "DeleteAssetRequest"
      },
      "DeleteDataSetRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "DeleteDataSetRequest"
      },
      "DeleteRevisionRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "DeleteRevisionRequest"
      },
      "ImportAssetFromSignedUrlJobErrorDetails" : {
        "properties" : {
          "AssetName" : {
            "$ref" : "#/components/schemas/AssetName"
          }
        },
        "type" : "object",
        "required" : [ "AssetName" ]
      },
      "ListOfAssetSourceEntry" : {
        "description" : "The list of sources for the assets.",
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AssetSourceEntry"
        }
      },
      "Details" : {
        "properties" : {
          "ImportAssetFromSignedUrlJobErrorDetails" : {
            "$ref" : "#/components/schemas/ImportAssetFromSignedUrlJobErrorDetails"
          },
          "ImportAssetsFromS3JobErrorDetails" : {
            "$ref" : "#/components/schemas/ListOfAssetSourceEntry"
          }
        },
        "type" : "object"
      },
      "ExportAssetToSignedUrlResponseDetails" : {
        "description" : "The details of the export to signed URL response.",
        "properties" : {
          "AssetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the asset associated with this export job."
            } ]
          },
          "DataSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set associated with this export job."
            } ]
          },
          "RevisionId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the revision associated with this export response."
            } ]
          },
          "SignedUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The signed URL for the export request."
            } ]
          },
          "SignedUrlExpiresAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the signed URL expires, in ISO 8601 format."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "DataSetId", "AssetId", "RevisionId" ]
      },
      "ListOfAssetDestinationEntry" : {
        "description" : "The destination where the assets will be exported.",
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AssetDestinationEntry"
        }
      },
      "ExportServerSideEncryption" : {
        "description" : "Encryption configuration of the export job. Includes the encryption type as well as the AWS KMS key. The KMS key is only necessary if you chose the KMS encryption type.",
        "properties" : {
          "KmsKeyArn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The Amazon Resource Name (ARN) of the the AWS KMS key you want to use to encrypt the Amazon S3 objects. This parameter is required if you choose aws:kms as an encryption type."
            } ]
          },
          "Type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ServerSideEncryptionTypes"
            }, {
              "description" : "The type of server side encryption used for encrypting the objects in Amazon S3."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "Type" ]
      },
      "ExportAssetsToS3ResponseDetails" : {
        "description" : "Details about the export to Amazon S3 response.",
        "properties" : {
          "AssetDestinations" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfAssetDestinationEntry"
            }, {
              "description" : "The destination in Amazon S3 where the asset is exported."
            } ]
          },
          "DataSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set associated with this export job."
            } ]
          },
          "Encryption" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ExportServerSideEncryption"
            }, {
              "description" : "Encryption configuration of the export job."
            } ]
          },
          "RevisionId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the revision associated with this export response."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "AssetDestinations", "DataSetId", "RevisionId" ]
      },
      "ListOfRevisionDestinationEntry" : {
        "description" : "The destination where the assets in the revision will be exported.",
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/RevisionDestinationEntry"
        }
      },
      "ExportRevisionsToS3ResponseDetails" : {
        "description" : "Details about the export revisions to Amazon S3 response.",
        "properties" : {
          "DataSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set associated with this export job."
            } ]
          },
          "Encryption" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ExportServerSideEncryption"
            }, {
              "description" : "Encryption configuration of the export job."
            } ]
          },
          "RevisionDestinations" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfRevisionDestinationEntry"
            }, {
              "description" : "The destination in Amazon S3 where the revision is exported."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "RevisionDestinations", "DataSetId" ]
      },
      "ServerSideEncryptionTypes" : {
        "description" : "The types of encryption supported in export jobs to Amazon S3.",
        "type" : "string",
        "enum" : [ "aws:kms", "AES256" ]
      },
      "GetAssetRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetAssetRequest"
      },
      "GetDataSetRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetDataSetRequest"
      },
      "GetJobRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetJobRequest"
      },
      "GetRevisionRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "GetRevisionRequest"
      },
      "__stringMin24Max24PatternAZaZ094AZaZ092AZaZ093" : {
        "maxLength" : 24,
        "minLength" : 24,
        "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
        "type" : "string"
      },
      "ImportAssetFromSignedUrlResponseDetails" : {
        "description" : "The details in the response for an import request, including the signed URL and other information.",
        "properties" : {
          "AssetName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssetName"
            }, {
              "description" : "The name for the asset associated with this import response."
            } ]
          },
          "DataSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set associated with this import job."
            } ]
          },
          "Md5Hash" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__stringMin24Max24PatternAZaZ094AZaZ092AZaZ093"
            }, {
              "description" : "The Base64-encoded Md5 hash for the asset, used to ensure the integrity of the file at that location."
            } ]
          },
          "RevisionId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the revision associated with this import response."
            } ]
          },
          "SignedUrl" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The signed URL."
            } ]
          },
          "SignedUrlExpiresAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The time and date at which the signed URL expires, in ISO 8601 format."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "DataSetId", "AssetName", "RevisionId" ]
      },
      "ImportAssetsFromS3ResponseDetails" : {
        "description" : "Details from an import from Amazon S3 response.",
        "properties" : {
          "AssetSources" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfAssetSourceEntry"
            }, {
              "description" : "Is a list of Amazon S3 bucket and object key pairs."
            } ]
          },
          "DataSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set associated with this import job."
            } ]
          },
          "RevisionId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the revision associated with this import response."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "DataSetId", "AssetSources", "RevisionId" ]
      },
      "JobEntry" : {
        "description" : "AWS Data Exchange Jobs are asynchronous import or export operations used to create or copy assets. A data set owner can both import and export as they see fit. Someone with an entitlement to a data set can only export. Jobs are deleted 90 days after they are created.",
        "properties" : {
          "Arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "The ARN for the job."
            } ]
          },
          "CreatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the job was created, in ISO 8601 format."
            } ]
          },
          "Details" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResponseDetails"
            }, {
              "description" : "Details of the operation to be performed by the job, such as export destination details or import source details."
            } ]
          },
          "Errors" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListOfJobError"
            }, {
              "description" : "Errors for jobs."
            } ]
          },
          "Id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the job."
            } ]
          },
          "State" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/State"
            }, {
              "description" : "The state of the job."
            } ]
          },
          "Type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Type"
            }, {
              "description" : "The job type."
            } ]
          },
          "UpdatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the job was last updated, in ISO 8601 format."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "Type", "Details", "State", "CreatedAt", "Id", "Arn", "UpdatedAt" ]
      },
      "JobErrorLimitName" : {
        "description" : "The name of the limit that was reached.",
        "type" : "string",
        "enum" : [ "Assets per revision", "Asset size in GB" ]
      },
      "__double" : {
        "format" : "double",
        "type" : "number"
      },
      "JobErrorResourceTypes" : {
        "description" : "The types of resource which the job error can apply to.",
        "type" : "string",
        "enum" : [ "REVISION", "ASSET" ]
      },
      "JobError" : {
        "description" : "An error that occurred with the job request.",
        "properties" : {
          "Code" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Code"
            }, {
              "description" : "The code for the job error."
            } ]
          },
          "Details" : {
            "$ref" : "#/components/schemas/Details"
          },
          "LimitName" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/JobErrorLimitName"
            }, {
              "description" : "The name of the limit that was reached."
            } ]
          },
          "LimitValue" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__double"
            }, {
              "description" : "The value of the exceeded limit."
            } ]
          },
          "Message" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The message related to the job error."
            } ]
          },
          "ResourceId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The unique identifier for the resource related to the error."
            } ]
          },
          "ResourceType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/JobErrorResourceTypes"
            }, {
              "description" : "The type of resource related to the error."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "Message", "Code" ]
      },
      "MaxResults" : {
        "maximum" : 25,
        "minimum" : 1,
        "type" : "integer"
      },
      "ListDataSetRevisionsRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "ListDataSetRevisionsRequest"
      },
      "NextToken" : {
        "description" : "The token value retrieved from a previous call to access the next page of results.",
        "type" : "string"
      },
      "ListOfRevisionEntry" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/RevisionEntry"
        }
      },
      "ListDataSetsRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "ListDataSetsRequest"
      },
      "ListOfDataSetEntry" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/DataSetEntry"
        }
      },
      "ListJobsRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "ListJobsRequest"
      },
      "ListOfJobEntry" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/JobEntry"
        }
      },
      "RevisionDestinationEntry" : {
        "description" : "The destination where the assets in the revision will be exported.",
        "properties" : {
          "Bucket" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "The S3 bucket that is the destination for the assets in the revision."
            } ]
          },
          "KeyPattern" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__string"
            }, {
              "description" : "A string representing the pattern for generated names of the individual assets in the revision. For more information about key patterns, see <a href=\"https://docs.aws.amazon.com/data-exchange/latest/userguide/jobs.html#revision-export-keypatterns\">Key patterns when exporting revisions</a>."
            } ]
          },
          "RevisionId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the revision."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "Bucket", "RevisionId" ]
      },
      "ListRevisionAssetsRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "ListRevisionAssetsRequest"
      },
      "ListOfAssetEntry" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AssetEntry"
        }
      },
      "ListTagsForResourceRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "ListTagsForResourceRequest"
      },
      "RevisionEntry" : {
        "description" : "A revision is a container for one or more assets.",
        "properties" : {
          "Arn" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Arn"
            }, {
              "description" : "The ARN for the revision."
            } ]
          },
          "Comment" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__stringMin0Max16384"
            }, {
              "description" : "An optional comment about the revision."
            } ]
          },
          "CreatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the revision was created, in ISO 8601 format."
            } ]
          },
          "DataSetId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the data set associated with this revision."
            } ]
          },
          "Finalized" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__boolean"
            }, {
              "description" : "<p>To publish a revision to a data set in a product, the revision must first be finalized. Finalizing a revision tells AWS Data Exchange that your changes to the assets in the revision are complete. After it's in this read-only state, you can publish the revision to your products.</p> <p>Finalized revisions can be published through the AWS Data Exchange console or the AWS Marketplace Catalog API, using the StartChangeSet AWS Marketplace Catalog API action. When using the API, revisions are uniquely identified by their ARN.</p>"
            } ]
          },
          "Id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The unique identifier for the revision."
            } ]
          },
          "SourceId" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Id"
            }, {
              "description" : "The revision ID of the owned revision corresponding to the entitled revision being viewed. This parameter is returned when a revision owner is viewing the entitled copy of its owned revision."
            } ]
          },
          "UpdatedAt" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Timestamp"
            }, {
              "description" : "The date and time that the revision was last updated, in ISO 8601 format."
            } ]
          }
        },
        "type" : "object",
        "required" : [ "CreatedAt", "DataSetId", "Id", "Arn", "UpdatedAt" ]
      },
      "__doubleMin0" : {
        "format" : "double",
        "type" : "number"
      },
      "StartJobRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "StartJobRequest"
      },
      "TagResourceRequest" : {
        "description" : "The request body for TagResource.",
        "properties" : {
          "Tags" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MapOf__string"
            }, {
              "description" : "A label that consists of a customer-defined key and an optional value.",
              "xml" : {
                "name" : "tags"
              }
            } ]
          }
        },
        "type" : "object",
        "title" : "TagResourceRequest",
        "required" : [ "Tags" ]
      },
      "ListOf__string" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/__string"
        }
      },
      "UntagResourceRequest" : {
        "properties" : { },
        "type" : "object",
        "title" : "UntagResourceRequest"
      },
      "UpdateAssetRequest" : {
        "description" : "The request body for UpdateAsset.",
        "properties" : {
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AssetName"
            }, {
              "description" : "The name of the asset. When importing from Amazon S3, the S3 object key is used as the asset name. When exporting to Amazon S3, the asset name is used as default target S3 object key."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateAssetRequest",
        "required" : [ "Name" ]
      },
      "UpdateDataSetRequest" : {
        "description" : "The request body for UpdateDataSet.",
        "properties" : {
          "Description" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Description"
            }, {
              "description" : "The description for the data set."
            } ]
          },
          "Name" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Name"
            }, {
              "description" : "The name of the data set."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateDataSetRequest"
      },
      "UpdateRevisionRequest" : {
        "description" : "The request body for UpdateRevision.",
        "properties" : {
          "Comment" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__stringMin0Max16384"
            }, {
              "description" : "An optional comment about the revision."
            } ]
          },
          "Finalized" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/__boolean"
            }, {
              "description" : "Finalizing a revision tells AWS Data Exchange that your changes to the assets in the revision are complete. After it's in this read-only state, you can publish the revision to your products."
            } ]
          }
        },
        "type" : "object",
        "title" : "UpdateRevisionRequest"
      }
    },
    "securitySchemes" : {
      "hmac" : {
        "type" : "apiKey",
        "description" : "Amazon Signature authorization v4",
        "name" : "Authorization",
        "in" : "header",
        "x-amazon-apigateway-authtype" : "awsSigv4"
      }
    }
  },
  "externalDocs" : {
    "description" : "Amazon Web Services documentation",
    "url" : "https://docs.aws.amazon.com/dataexchange/"
  },
  "security" : [ {
    "hmac" : [ ]
  } ],
  "x-hasEquivalentPaths" : true
}